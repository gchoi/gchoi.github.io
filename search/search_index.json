{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Alex Choi's Blog Contact Info: cinema4dr12@gmail.com","title":"Home"},{"location":"#welcome-to-alex-chois-blog","text":"Contact Info: cinema4dr12@gmail.com","title":"Welcome to Alex Choi's Blog"},{"location":"about/","text":"Who Am I? Geol Choi (ph.D) / \ucd5c\uac78 / Alex Choi Data Scientist / Deep Learning Professional / Research Scientist Contacts Email: cinema4dr12@gmail.com Tistory Blog: cinema4dr12.tistory.com GitHub: github.com/gchoi LinkedIn: linkedin.com/in/gchoi YouTube: youtube.com/gchoi Twitter: twitter.com/cinema4dr12 Work Experiences Vision Solution Engineer, COGNEX (2017.12 ~ Present) Data Scientist & Software Engineer, ALPINION MEDICAL SYSTEMS (2014.06 ~ 2017.11) Computer Graphics Researcher, CJ POWERCAST (2012.04 ~ 2014.03) Computer Vision & VR/AR Researcher, ETRI (2010.04 ~ 2012.03) Research Experiences Computer Vision Researcher@ Mixed and Augmented Reality Solutions Team, COOPERATION SYSTEMS Dept., Fraunhofer FIT (2010.07 ~ 2010.09) Computational Mechanics Researcher@Research Center for Ubiquitous MEMS and Micro Engineering, National Institute of Advanced Industrial Science and Technology (2006.03 ~ 2006.08) Education Nano Degree R Programming, Coursera (Johns Hopkins Univ.), 2014 Deep Neural Networks with PyTorch, Coursera (IBM), 2020 What is Data Science?, Coursera (IBM), 2020 Ph.D, Mechanical Engineering Dept. from KAIST, 2010 BS, Mechanical Engineering Dept. from Chung-Ang Univ., 2003 Interests General Machine Learning & Deep Learning Convolutional Neural Networks (CNN) Deep Generative Models (GANs) Computer Vision / Machine Vision / Visual Recognition Data Science / Data Analytics / Data Visualization Computer Graphics Realtime Web Applications Scientific Computing / Parallel Computing Languages Korean: Native English: Proficiency German: Intermediate Japanese: Basic Chinese: Novice(HSK Level3) Skills Machine & Deep Learning Related Theories and Algorithms: Probability, Statistics, Optimization, etc. Multi-layer Perceptron Convolutional Neural Networks (CNN) Recurrent Neural Networks (RNN) Generative Models (GANs, VAEs) Deep Learning Frameworks (Order of Frequently Used Frameworks) PyTorch / PyTorch Lightning / Detectron2 / OpenMMLab TensorFlow / Keras CNTK MXNet with Gluon Data Science Python(pands)/R SQL/NoSQL Data Wrangling Data Analytics Data Mining Data Visualization (matplotlib, ggplot, plotly, bokeh, etc.) Database (Order of Frequently Used Tools) MongoDB PostgreSQL MySQL Firebird Programming Languages (Order of Skillful Languages) C/C++ Python R JavaScript C# Matlab Java Computer Vision General Image Processing Algorithms (filters, etc.) Conventional & Deep Learning based CV Theories & Algorithms Object Detection Algorithms: YOLO, SSD, R-CNN, Fast R-CNN, Faster R-CNN, Selective Search, FPN, etc. Tools: Detectron2, TensorFlow Object Detection Module Segmentation: Mask R-CNN, FCN, U-Net, etc. Mixed Reality / Augmented reality OpenCV (C++ / Python / C#) Cloud Computing Amazon Web Services (AWS) Google Cloud Platform (GCP) Google Colab (Social Coding) Web Development Basic Web Document Concepts: HTML5 / CSS / JavaScript Server-side: Node.jS, PHP Client-side: ReactJS, AngularJS, jQuery Other Web Technologies: WebGL / WebRTC / WebSocket Web Frameworks: React Scientific Computing CUDA Parallel Computing Realtime Fluid Simulation Finite Element Analysis (FEA) Boundary Element Analaysis (BEA) Computer Graphics General Computer Graphics Theroies & Algorithms Rendering Theories: Global Illumination, Path Tracing, Ray Tracing Particle Simulation Tools: Maxon Cinema 4D, Adobe Photoshop & AfterEffects, NextLimit RealFlow, SideEffects Houdini, E-on Software Vue Publications Doctoral Thesis Isogeometric Analysis Based on Boundary Element Method , 2010, Thesis Ph.D., KAIST International Conferences Application of Isogeometric Analysis to Shape Optimal Design of Thermal Problems, 8th World Congress on Structural and Multidisciplinary Optimization, Lisbon, Portugal, 2009. Structural shape optimization based on isogeometric analysis with control weights, International Congress of Theoretical and Applied Mechanics, Adelaide, Australia, 2008. Structural shape optimization using shape design sensitivity of NURBS control weights, CJK-OSM 5, Cheju, Korea, 2008. Structural shape optimization using extended finite element method on boundary representation by NURBS, 7th World Congress on Structural and Multidisciplinary Optimization, Seoul, Korea, 2007. Imposing essential and natural boundary conditions on geometric boundaries for X-FEM, CJK-OSM 4, Kumming, China, 2006. Student Symposium Bone growth simulation based on topology optimization, KAIST-Michigan Univ. Joint Symposium, University of Michigan, Ann Arbor, USA, 2006. Articles Realtime Fluid Simulation Using Massively Parallel Computing with CUDA, 2013 , CJ POWERCAST Research Aritcles","title":"About"},{"location":"about/#who-am-i","text":"Geol Choi (ph.D) / \ucd5c\uac78 / Alex Choi Data Scientist / Deep Learning Professional / Research Scientist","title":"Who Am I?"},{"location":"about/#contacts","text":"Email: cinema4dr12@gmail.com Tistory Blog: cinema4dr12.tistory.com GitHub: github.com/gchoi LinkedIn: linkedin.com/in/gchoi YouTube: youtube.com/gchoi Twitter: twitter.com/cinema4dr12","title":"Contacts"},{"location":"about/#work-experiences","text":"Vision Solution Engineer, COGNEX (2017.12 ~ Present) Data Scientist & Software Engineer, ALPINION MEDICAL SYSTEMS (2014.06 ~ 2017.11) Computer Graphics Researcher, CJ POWERCAST (2012.04 ~ 2014.03) Computer Vision & VR/AR Researcher, ETRI (2010.04 ~ 2012.03)","title":"Work Experiences"},{"location":"about/#research-experiences","text":"Computer Vision Researcher@ Mixed and Augmented Reality Solutions Team, COOPERATION SYSTEMS Dept., Fraunhofer FIT (2010.07 ~ 2010.09) Computational Mechanics Researcher@Research Center for Ubiquitous MEMS and Micro Engineering, National Institute of Advanced Industrial Science and Technology (2006.03 ~ 2006.08)","title":"Research Experiences"},{"location":"about/#education","text":"Nano Degree R Programming, Coursera (Johns Hopkins Univ.), 2014 Deep Neural Networks with PyTorch, Coursera (IBM), 2020 What is Data Science?, Coursera (IBM), 2020 Ph.D, Mechanical Engineering Dept. from KAIST, 2010 BS, Mechanical Engineering Dept. from Chung-Ang Univ., 2003","title":"Education"},{"location":"about/#interests","text":"General Machine Learning & Deep Learning Convolutional Neural Networks (CNN) Deep Generative Models (GANs) Computer Vision / Machine Vision / Visual Recognition Data Science / Data Analytics / Data Visualization Computer Graphics Realtime Web Applications Scientific Computing / Parallel Computing","title":"Interests"},{"location":"about/#languages","text":"Korean: Native English: Proficiency German: Intermediate Japanese: Basic Chinese: Novice(HSK Level3)","title":"Languages"},{"location":"about/#skills","text":"","title":"Skills"},{"location":"about/#machine-deep-learning","text":"Related Theories and Algorithms: Probability, Statistics, Optimization, etc. Multi-layer Perceptron Convolutional Neural Networks (CNN) Recurrent Neural Networks (RNN) Generative Models (GANs, VAEs)","title":"Machine &amp; Deep Learning"},{"location":"about/#deep-learning-frameworks-order-of-frequently-used-frameworks","text":"PyTorch / PyTorch Lightning / Detectron2 / OpenMMLab TensorFlow / Keras CNTK MXNet with Gluon","title":"Deep Learning Frameworks (Order of Frequently Used Frameworks)"},{"location":"about/#data-science","text":"Python(pands)/R SQL/NoSQL Data Wrangling Data Analytics Data Mining Data Visualization (matplotlib, ggplot, plotly, bokeh, etc.)","title":"Data Science"},{"location":"about/#database-order-of-frequently-used-tools","text":"MongoDB PostgreSQL MySQL Firebird","title":"Database (Order of Frequently Used Tools)"},{"location":"about/#programming-languages-order-of-skillful-languages","text":"C/C++ Python R JavaScript C# Matlab Java","title":"Programming Languages (Order of Skillful Languages)"},{"location":"about/#computer-vision","text":"General Image Processing Algorithms (filters, etc.) Conventional & Deep Learning based CV Theories & Algorithms Object Detection Algorithms: YOLO, SSD, R-CNN, Fast R-CNN, Faster R-CNN, Selective Search, FPN, etc. Tools: Detectron2, TensorFlow Object Detection Module Segmentation: Mask R-CNN, FCN, U-Net, etc. Mixed Reality / Augmented reality OpenCV (C++ / Python / C#)","title":"Computer Vision"},{"location":"about/#cloud-computing","text":"Amazon Web Services (AWS) Google Cloud Platform (GCP) Google Colab (Social Coding)","title":"Cloud Computing"},{"location":"about/#web-development","text":"Basic Web Document Concepts: HTML5 / CSS / JavaScript Server-side: Node.jS, PHP Client-side: ReactJS, AngularJS, jQuery Other Web Technologies: WebGL / WebRTC / WebSocket Web Frameworks: React","title":"Web Development"},{"location":"about/#scientific-computing","text":"CUDA Parallel Computing Realtime Fluid Simulation Finite Element Analysis (FEA) Boundary Element Analaysis (BEA)","title":"Scientific Computing"},{"location":"about/#computer-graphics","text":"General Computer Graphics Theroies & Algorithms Rendering Theories: Global Illumination, Path Tracing, Ray Tracing Particle Simulation Tools: Maxon Cinema 4D, Adobe Photoshop & AfterEffects, NextLimit RealFlow, SideEffects Houdini, E-on Software Vue","title":"Computer Graphics"},{"location":"about/#publications","text":"","title":"Publications"},{"location":"about/#doctoral-thesis","text":"Isogeometric Analysis Based on Boundary Element Method , 2010, Thesis Ph.D., KAIST","title":"Doctoral Thesis"},{"location":"about/#international-conferences","text":"Application of Isogeometric Analysis to Shape Optimal Design of Thermal Problems, 8th World Congress on Structural and Multidisciplinary Optimization, Lisbon, Portugal, 2009. Structural shape optimization based on isogeometric analysis with control weights, International Congress of Theoretical and Applied Mechanics, Adelaide, Australia, 2008. Structural shape optimization using shape design sensitivity of NURBS control weights, CJK-OSM 5, Cheju, Korea, 2008. Structural shape optimization using extended finite element method on boundary representation by NURBS, 7th World Congress on Structural and Multidisciplinary Optimization, Seoul, Korea, 2007. Imposing essential and natural boundary conditions on geometric boundaries for X-FEM, CJK-OSM 4, Kumming, China, 2006.","title":"International Conferences"},{"location":"about/#student-symposium","text":"Bone growth simulation based on topology optimization, KAIST-Michigan Univ. Joint Symposium, University of Michigan, Ann Arbor, USA, 2006.","title":"Student Symposium"},{"location":"about/#articles","text":"Realtime Fluid Simulation Using Massively Parallel Computing with CUDA, 2013 , CJ POWERCAST Research Aritcles","title":"Articles"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/","text":"Written by Alex Choi, Nov. 09, 2018. \uc774\ubc88 \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 \uc778\uacf5\uc2e0\uacbd\ub9dd(Artificial Neural Networks, ANN)\uc5d0 \ub300\ud558\uc5ec \uac04\ub7b5\ud55c \uc774\ub860\uc744 \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd(Artificial Neural Networks) \uac1c\uc694 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uc0dd\ubb3c\uc758 \ub1cc\uac00 \uc785\ub825\ub41c \uc790\uadf9\uc5d0 \ubc18\uc751\ud558\ub294\uac00\ub97c \uc774\ud574\ud558\uc5ec \uc785\ub825 \uc2e0\ud638\uc640 \ucd9c\ub825 \uc2e0\ud638\uc5d0 \ub300\ud55c \uad00\uacc4\ub97c \ubaa8\ub378\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub274\ub7f0\uc740 \uc804\uae30 \uc2e0\ud638\ub97c \uc218\uc9d1, \ucc98\ub9ac \ubc0f \uc804\ud30c\ub97c \uc8fc\ub41c \ubaa9\uc801\uc73c\ub85c \ud558\ub294 \ub1cc\uc758 \uc138\ud3ec\uc778\ub370, \uc778\uacf5\uc2e0\uacbd\ub9dd\uc5d0 \uc788\uc5b4 \uc815\ubcf4\ub97c \ucc98\ub9ac\ud558\ub294 \uae30\ubcf8\uc801\uc778 \ub2e8\uc704\ub97c \uc778\uacf5 \ub274\ub7f0(Artificial Neuron) \ub610\ub294 \ub178\ub4dc(Node)\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uc774\ub7ec\ud55c \uac70\ub300 \ubcd1\ub82c \ucc98\ub9ac\ub97c \uc704\ud55c \uc778\uacf5 \ub274\ub7f0\ub4e4\uc774 \uc11c\ub85c \uc5f0\uacb0\ub41c \ub124\ud2b8\uc6cc\ud06c\ub97c \uc774\uc6a9\ud558\ub294 \uac83\uc774\uba70, \ub1cc\uc758 \uc815\ubcf4 \ucc98\ub9ac \ub2a5\ub825\uc774 \uc774\ub7ec\ud55c \ub274\ub7f0\uc758 \ub124\ud2b8\uc6cc\ud06c\ub85c\ubd80\ud130 \uae30\uc778\ud55c\ub2e4\uace0 \uc0dd\uac01\ub418\uc5b4, \ucd08\ucc3d\uae30 \uc778\uacf5\uc9c0\ub2a5 \ubd84\uc57c\ub294 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc744 \ubaa9\uc801\uc73c\ub85c \ud558\uc600\uc2b5\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd \ubd84\uc57c\uc758 \ub2e4\ub978 \uc774\ub984\uc740 \uacb0\ud569\uc124(Connectionism), \ubcd1\ub82c \ubd84\uc0b0 \ucc98\ub9ac(Parallel Distributed Processing), \uc2e0\uacbd \uacc4\uc0b0(Neural Computation) \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uba74 \uc0dd\ubb3c\uc740 \uba87 \uac1c\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uc744\uae4c\uc694? \uc778\uac04\uc740 860\uc5b5\uac1c\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \ud788\ub9d0\ub77c\uc57c \uc6d0\uc22d\uc774\ub294 63\uc5b5\uac1c, \uae4c\ub9c8\uadc0\ub294 21\uc5b5\uac1c, \uc950\ub294 7100\ub9cc\uac1c, \ubc14\ud034\ubc8c\ub808\ub294 100\ub9cc\uac1c, \ud574\ud30c\ub9ac\ub294 5,600\uac1c \uc815\ub3c4\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0\ub370 \uac00\uc7a5 \ub9ce\uc740 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \uc0dd\ubb3c\uc740 \uc778\uac04\uc774 \uc544\ub2c8\ub77c \uc544\ud504\ub9ac\uce74 \ucf54\ub07c\ub9ac\uc778\ub370 \ubb34\ub824 2500\uc5b5\uac1c\ub098 \ub429\ub2c8\ub2e4. \uac1c\uccb4 \ub274\ub7f0 \uc218 \uc544\ud504\ub9ac\uce74 \ucf54\ub07c\ub9ac 257,000,000,000 \uc778\uac04 86,000,000,000 \ud788\ub9d0\ub77c\uc57c \uc6d0\uc22d\uc774 6,376,000,000 \uae4c\ub9c8\uadc0 2,171,000,000 \uace0\uc591\uc774 760,000,000 \ubb38\uc5b4 500,000,000 \uae30\ub2c8 \ud53c\uadf8 240,000,000 \uace8\ub4e0 \ud584\uc2a4\ud130 90,000,000 \uac1c\uad6c\ub9ac 16,000,000 \ubc14\ud034\ubc8c\ub808 1,000,000 \uac1c\ubbf8 250,000 \uacfc\uc77c \ud30c\ub9ac 250,000 \ud574\ud30c\ub9ac 5,600 \ucd9c\uc800: wkipedia.org \uc778\ub958\uc5d0\uac8c \ubd88\ud589\uc778\uc9c0 \ub2e4\ud589\uc778\uc9c0\ub294 \ubab0\ub77c\ub3c4 \ud604\uc7ac\uc758 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uace0\uc791 \uc218\ubc31\uac1c\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uac00\uae4c\uc6b4 \ubbf8\ub798\uc5d0 \uae30\uacc4\uac00 \uc778\ub958\ub97c \uc704\ud611\ud560 \uac00\ub2a5\uc131\uc740 \uc5c6\uc5b4 \ubcf4\uc785\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, \ub2e4\uc591\ud55c \uc5f0\uad6c\uac00 \ube60\ub974\uac8c \uc9c4\ud589\ub418\uc5b4 \uac00\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc778\uacf5\uc9c0\ub2a5\uc758 \ubc1c\uc804 \uc18d\ub3c4\ub294 \uc810\uc810 \uac00\uc18d\ud654 \ub418\uc5b4 \uac00\uace0 \uc788\uc73c\uba70, Neurorobotics \ubd84\uc57c\uc5d0\uc11c\ub294 \uc778\uac04\uc774 \ub9cc\ub4e0 \ucef4\ud4e8\ud130 \uc54c\uace0\ub9ac\uc998\uc774 \uc544\ub2cc \uc950\uc758 \ub1cc\ub97c \uc774\uc6a9\ud558\uc5ec \uc21c\uc218 \ub274\ub7f0\uc744 \uc5f0\uacb0\ud55c \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ubaa8\ud130\ub97c \uc81c\uc5b4\ud558\ub294 \ub2e8\uacc4\uc5d0\uae4c\uc9c0 \uc774\ub974\ub800\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc601\uc0c1\uc744 \uac10\uc0c1\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4(\uc18c\ub984\uc8fc\uc758). ANN \ucd08\uae30 50\ub144\uac04\uc5d0\ub294 AND, OR, NOT \ub4f1 \uac04\ub2e8\ud55c \ub17c\ub9ac\ub97c \ucc98\ub9ac\ud558\ub294 \uc218\uc900\uc73c\ub85c \ub1cc\uc758 \ub3d9\uc791\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \uc218\uc900\uc774\uc5c8\uc73c\ub098, \uacfc\ud559\uc790\ub4e4\uc774 \uc0dd\ubb3c\ud559\uc801 \ub1cc\uc758 \uc791\ub3d9\uc6d0\ub9ac\ub97c \uc774\ud574\ud558\ub294\ub370 \uc788\uc5b4 \ub9ce\uc740 \ub3c4\uc6c0\uc744 \uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \ucd5c\uadfc \ucef4\ud4e8\ud305 \ud30c\uc6cc\uac00 \ud3ed\ubc1c\uc801\uc73c\ub85c \ubc1c\uc804\ud568\uc5d0 \ub530\ub77c ANN\uc740 \uc2e4\uc81c\uc801\uc778 \ubb38\uc81c\ub97c \ud478\ub294\ub370 \ubcf4\ub2e4 \uc801\uadf9\uc801\uc73c\ub85c \ud65c\uc6a9\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc0ac\ubb3c\uc778\uc2dd, \uc74c\uc131\uc778\uc2dd, \uc790\uc728\uc8fc\ud589\ucc28, \ub0a0\uc528\uc608\uce21\uacfc \uac19\uc740 \uc790\uc5f0\ud604\uc0c1\uc758 \uc608\uce21\uacfc \uc0ac\ud68c\ud604\uc0c1\uc758 \uc608\uce21\uc5d0\ub3c4 \ud65c\uc6a9\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc989, ANN\uc740 \ubd84\ub958(Classification), \uc218\uce58 \uc608\uce21, \uc790\uc728 \ud328\ud134 \uc778\uc2dd(Unsupervised Pattern Recognition) \ub4f1\uc5d0 \ud65c\uc6a9\ud560 \uc218 \uc788\uc744 \uc815\ub3c4\ub85c \ub2e4\uc7ac\ub2e4\ub2a5\ud569\ub2c8\ub2e4. ANN\uc740 \uc785\ub825 \ub370\uc774\ud130\uc640 \ucd9c\ub825 \ub370\uc774\ud130\uac00 \uc798 \uc815\uc758\ub418\uc5b4 \uc788\ub294 \ubb38\uc81c\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c\ub370, \uc785\ub825 \ub370\uc774\ud130\uc640 \ucd9c\ub825 \ub370\uc774\ud130 \uac04\uc758 \uad00\uacc4\ub97c \uc815\uc758\ud558\ub294 \uac83\uc740 \ub108\ubb34\ub098\ub3c4 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd \ubaa8\ub378 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uc778\uac04\uc758 \ub450\ub1cc\ub97c \ubaa8\uc0ac\ud55c \uac83\uc774\ubbc0\ub85c \uc778\uacbd\uc2e0\uacbd\ub9dd\uc758 \ub3d9\uc791 \uc6d0\ub9ac\ub97c \uc774\ud574\ud558\ub824\uba74 \ub274\ub7f0(Neuron)\uc758 \ub3d9\uc791 \uc6d0\ub9ac\ub97c \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc0dd\ud654\ud559 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 \uc138\ud3ec\uc758 \uc218\uc0c1\ub3cc\uae30(Dendrite)\ub85c \uc785\ub825\uc2e0\ud638\uac00 \ub4e4\uc5b4\uc624\uba74, \uadf8 \ucc98\ub9ac\uc758 \uc911\uc694\ub3c4\uc5d0 \ub530\ub77c \uc784\ud384\uc2a4\uc5d0 \uac00\uc911\uce58\ub97c \ubd80\uc5ec\ud569\ub2c8\ub2e4. \uc138\ud3ec\uccb4\ub294 \uc785\ub825\uc2e0\ud638\ub97c \ub204\uc801\ud558\uace0 \ub204\uc801\ub41c \uc785\ub825\uc2e0\ud638\uac00 \uc77c\uc815 \uc784\uacc4\uce58\ub97c \ub118\uc5b4\uc11c\uba74 \uc804\uae30\ud654\ud559 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 \ucd9c\ub825\uc2e0\ud638\ub294 \ucd95\uc0c9\ub3cc\uae30(Axon)\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \ucd95\uc0c9\ub3cc\uae30 \uc885\ub2e8(Axon Terminal)\uc5d0\uc11c \uc804\uae30\uc2e0\ud638\ub294 \ud654\ud559\uc2e0\ud638\ub85c \ucc98\ub9ac\ub418\uc5b4 \ub274\ub7f0 \uac04\uc758 \uc791\uc740 \uac04\uadf9\uc778 \uc2dc\ub0c5\uc2a4(Synapse)\ub97c \ud1b5\ud574 \uc774\uc6c3\uc758 \ub274\ub7f0\uc73c\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc2e0\uacbd\ub9dd \uad6c\uc870 \ub2e8\uc77c \uc778\uacf5 \ub274\ub7f0 \ubaa8\ub378\uc740 \uc0dd\ubb3c\ud559\uc801 \ubaa8\ub378\uacfc \uc720\uc0ac\ud558\uac8c \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc5d0\uc11c, \ub178\ub4dc \\(j\\) \uc5d0\uc11c \\(i\\) \ub85c\uc758 \ub9c1\ud06c\ub294 \\(j\\) \uc5d0\uc11c \\(i\\) \ub85c\uc758 \ud65c\uc131 \\(a_j\\) \ub97c \uc804\ud30c\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \uac01 \ub9c1\ud06c\ub294 \uc774 \ub9c1\ud06c\uc640 \uad00\ub828\ub41c \uac00\uc911\uce58 \\(w_{j,i}\\) \ub97c \uac16\ub294\ub370, \uc5f0\uacb0\uc131\uc758 \uac15\ub3c4(Strength) \ubc0f \ubd80\ud638(Sign)\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd \uad6c\uc870 \uac01 \ub178\ub4dc \\(i\\) \ub294 \uba3c\uc800 \uc785\ub825\uc2e0\ud638\uc758 \uac00\uc911\uce58\ud569(Weighted Sum)\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4: \\[\\mathbf{Input} = \\sum_{j}^{n} w_{j,i}a_{j}\\] \uc774\uc81c \ucd9c\ub825\uc744 \uc5bb\uc73c\ub824\uba74 \ud65c\uc131 \ud568\uc218(Activation Function) \\(\\mathscr{F}\\) \ub97c \uc801\uc6a9\ud569\ub2c8\ub2e4: \\[a_{i}=\\mathscr{F}(\\mathbf{Input}_{i})=\\mathscr{F}\\begin{pmatrix}\\sum_{j=1}^{n}{W_{j,i}a_{j}}\\end{pmatrix}\\] \ud2b9\ud788 \\(w_{0,i}\\) \ub97c \uace0\uc815 \uc785\ub825 \\(a_{0} = -1\\) \uc5d0 \uc5f0\uacb0\ub41c \ud3b8\ud5a5 \uac00\uc911\uce58\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub7f0 \ubc29\uc2dd\uc73c\ub85c \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \ubcf5\uc7a1\ud55c \ubaa8\ub378\uc744 \uc138\uc6b0\uae30 \uc704\ud55c \uad6c\uc131\uc694\uc18c\ub85c \ub274\ub7f0\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc218\ub9ce\uc740 \uc778\uacf5\uc2e0\uacbd\ub9dd \uc54c\uace0\ub9ac\uc998\uc774 \uc874\uc7ac\ud558\uc9c0\ub9cc, \uc774\ub4e4\uc740 \uacf5\ub3d9\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ud2b9\uc9d5\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4: \ud65c\uc131 \ud568\uc218(Activation Function) : \ub274\ub7f0\uc5d0 \uc5f0\uacb0\ub41c \uc785\ub825\uc2e0\ud638\ub4e4\uc744 \ub2e8\uc77c \ucd9c\ub825\uc2e0\ud638\ub85c \ubcc0\ud658\ud558\uc5ec \uc774\uc6c3 \ub274\ub7f0\uc73c\ub85c \uc804\ud30c\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0(Network Topology) : \ubaa8\ub378\uc758 \ub274\ub7f0\uacfc \uacc4\uce35(Layer)\uc774 \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 \uad6c\uc870\uc785\ub2c8\ub2e4. \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998(Training Algorithm) : \uc785\ub825\uc2e0\ud638\uc5d0 \ub300\uc751\ud558\uc5ec \ub274\ub7f0\uc744 \uc5b5\uc81c\ud558\uac70\ub098 \uc5ec\uae30\uc2dc\ud0a4\uae30 \uc704\ud55c \uc5f0\uacb0 \uac00\uc911\uce58\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ud65c\uc131 \ud568\uc218(Activation Function) \ud65c\uc131 \ud568\uc218\ub294 \uc778\uacf5 \ub274\ub7f0\uc774 \uc720\uc785\ub418\ub294 \uc815\ubcf4\ub97c \ucc98\ub9ac\ud558\uace0 \uad6c\uc131\ub41c \ub124\ud2b8\uc6cc\ud06c\ub85c \uc804\ub2ec\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc785\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd\uc774 \uc0dd\ubb3c\ud559\uc801 \uc2e0\uacbd\ub9dd\uc744 \ubaa8\uc0ac\ud558\ub4ef \ud65c\uc131\ud568\uc218 \ub610\ud55c \uc0dd\ubb3c\ud559\uc801\uc778 \ud2b9\uc9d5\uc744 \ubc18\uc601\ud558\ub294 \ubaa8\ub378\uc744 \ucc44\uc6a9\ud569\ub2c8\ub2e4. \uc0dd\ubb3c\ud559\uc801\uc778 \uce21\uba74\uc73c\ub85c \ubcfc \ub54c, \ud65c\uc131\ud568\uc218\ub294 \uc785\ub825\uc2e0\ud638\ub97c \uac00\uc911\uce58\ud569\uc744 \uacc4\uc0b0\ud558\uc5ec \uc774 \uac12\uc774 \uc815\ud574\uc9c4 \uc784\uacc4\uce58\ub97c \ub118\ub294\uc9c0 \uacb0\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc784\uacc4\uce58\ub97c \ub118\uc9c0 \ubabb\ud560 \uacbd\uc6b0 \uc544\ubb34 \uc77c\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub370, \uc774\ub97c \uc784\uacc4 \ud65c\uc131 \ud568\uc218(Threshold Activation Function) (\uc544\ub798 \uadf8\ub9bc (a))\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud65c\uc131\ud654 \ud568\uc218 \uc608\uc2dc \ub2e8\uc704 \uc2a4\ud15d \ud65c\uc131 \ud568\uc218(\ub610\ub294 \uc784\uacc4 \ud65c\uc131 \ud568\uc218)\ub294 \uc0dd\ubb3c\ud559\uc758 \ub3d9\uc791\uc6d0\ub9ac\uc5d0 \ubd80\ud569\ub418\uae30\ub294 \ud558\uc9c0\ub9cc \uc218\ud559\uc801 \ud2b9\uc131\uc774 \ubc14\ub78c\uc9c1\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc5d0\uc11c \uac70\uc758 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ub110\ub9ac \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub294 Sigmoid \ud65c\uc131 \ud568\uc218(\ub610\ub294 Logistic Sigmoid\ub77c\uace0\ub3c4 \ud568)(\uc704\uc758 \uadf8\ub9bc (b))\uc785\ub2c8\ub2e4(\uc0ac\uc2e4, Sigmoid \ud568\uc218\ub3c4 Saturation \ubc0f Non-zero Centered \ud2b9\uc131\uc73c\ub85c \uc778\ud574 \uc2e4\ubb34\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \ubc14\ub78c\uc9c1\ud558\uc9c0 \uc54a\uc73c\uba70, \ucd5c\uadfc Rectifier Linear Unit;ReLU\uc774 \uc2e4\ubb34\uc5d0\uc11c \uac00\uc7a5 \ub110\ub9ac \uc0ac\uc6a9\ub429\ub2c8\ub2e4). \ucd9c\ub825\uc2e0\ud638\uc758 \ubc94\uc704\ub294 \ubaa8\ub450 [0, +1]\uc774\uc9c0\ub9cc Sigmoid \ud568\uc218\ub294 \uc785\ub825\uc2e0\ud638 \ubc94\uc704 \uc804\uccb4\uc5d0\uc11c \ubbf8\ubd84\uac00\ub2a5\ud569\ub2c8\ub2e4. Sigmoid \ud65c\uc131\ud568\uc218\uc758 \ubbf8\ubd84\uac00\ub2a5 \ud2b9\uc131 \ub355\ubd84\uc5d0 ANN \ucd5c\uc801\ud654 \uc54c\uace0\ub9ac\uc998\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0(Network Topology) \ud1a0\ud3f4\ub85c\uc9c0(Topology)\ub294 \uc6b0\ub9ac\ub9d0\ub85c \uc704\uc0c1\uae30\ud558\ud559\uc774\ub77c\uace0 \ud558\uba70, \uc624\ube0c\uc81d\ud2b8\uc758 \uc5f0\uacb0\uc131(Connectivity)\uc640 \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. ANN\uc5d0\uc11c\uc758 \ud1a0\ud3f4\ub85c\uc9c0\ub294 \ub274\ub7f0 \uac04\uc758 \uc5f0\uacb0\uad6c\uc870(\ub610\ub294 \ud328\ud134)\ub97c \uc758\ubbf8\ud558\uba70, \uc774 \uc5f0\uacb0\uad6c\uc870\uac00 ANN\uc758 \ud559\uc2b5\ub2a5\ub825\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ud1a0\ud3f4\ub85c\uc9c0\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ubd84\ub958\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \ub808\uc774\uc5b4\uc758 \uac1c\uc218 \ub124\ud2b8\uc6cc\ud06c \ub0b4\uc758 \uc815\ubcf4\uc758 \uc5ed\ubc29\ud5a5 \uc774\ub3d9 \uac00\ub2a5\uc131 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ub808\uc774\uc5b4\uc758 \ub178\ub4dc \uac1c\uc218 \ud1a0\ud3f4\ub85c\uc9c0\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ud559\uc2b5 \uac00\ub2a5\ud55c \ud0dc\uc2a4\ud06c\uc758 \ubcf5\uc7a1\uc131\uc744 \uacb0\uc815\ud558\uba70, \uc77c\ubc18\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c\uac00 \ubcf5\uc7a1\ud574\uc9c0\uace0 \uaddc\ubaa8\uac00 \ucee4\uc9c8\uc218\ub85d \ub2e4\uc591\ud55c \ud328\ud134\uacfc \ubcf5\uc7a1\ud55c \uacb0\uc815 \uacbd\uacc4\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c\uc758 \uc131\ub2a5\uc740 \uadf8 \ud06c\uae30\ubfd0\ub9cc \uc544\ub2c8\ub77c \ub178\ub4dc\ub4e4\uc774 \uc5b4\ub5bb\uac8c \ubc30\uce58\ub418\uc5b4 \uc788\ub294\uac00\uc5d0 \uc758\ud574\uc11c\ub3c4 \uacb0\uc815\ub429\ub2c8\ub2e4. \ub808\uc774\uc5b4(Layer)\uc758 \uac1c\uc218 ANN\uc758 \ucc98\ub9ac \ub2a5\ub825\uc740 \uace7 \ub808\uc774\uc5b4\uc758 \uac1c\uc218\uc640 \ubc00\uc811\ud55c \uad00\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub808\uc774\uc5b4\ub294 \uc785\ub825\ub178\ub4dc\uc640 \ucd9c\ub825\ub178\ub4dc\uc758 \uc9d1\ud569\uccb4\uc774\uba70, \uc785\ub825\ub178\ub4dc\ub294 \uc785\ub825 \ub370\uc774\ud130\ub85c\ubd80\ud130 \uc2e0\ud638\ub97c \ubc1b\ub294 \ub274\ub7f0\uc744 \uc77c\uceeb\uc2b5\ub2c8\ub2e4. \uac01 \uc785\ub825\ub178\ub4dc\ub294 \ud65c\uc131\ud568\uc218\ub97c \ud1b5\ud574 \uc785\ub825\uc2e0\ud638\ub97c \ubcc0\ud658\ud558\uba70 \uc774\ub97c \ucd9c\ub825\ub178\ub4dc\ub85c \uc804\ub2ec\ud55c\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc740 2\uac1c\uc758 \uc785\ub825\ub370\uc774\ud130\uc640 2\uac1c\uc758 \uc785\ub825 \ub178\ub4dc\ub85c \uad6c\uc131\ub41c 1\uac1c\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4(Hidden Layer)\ub85c \uad6c\uc131\ub41c \uac04\ub2e8\ud55c ANN \ubaa8\ub378\uc774\uba70, \ub808\uc774\uc5b4\uac00 1\uac1c \uc874\uc7ac\ud558\ubbc0\ub85c \ub2e8\uc77c \ub808\uc774\uc5b4 \ub124\ud2b8\uc6cc\ud06c(Single-Layer Network)\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774 \ubaa8\ub378\uc740 \ub108\ubb34 \ub2e8\uc21c\ud558\ubbc0\ub85c \uc120\ud615\uc73c\ub85c \ubd84\ub958\uac00\ub2a5\ud55c(Linearly Separable) \ud328\ud134\uc5d0 \ub300\ud55c \ubb38\uc81c\uc5d0\ub9cc \uc801\uc6a9\uc774 \uac00\ub2a5\ud558\uba70, \ubcf4\ub2e4 \uc815\uad50\ud55c \ubb38\uc81c\ub97c \ud480\uae30 \uc704\ud574\uc11c\ub294 \uc880 \ub354 \ubcf5\uc7a1\ud55c \ubaa8\ub378\uc774 \uc694\uad6c\ub429\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uacfc \uac19\uc774 1\uac1c \uc774\uc0c1\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4\uac00 \ucd94\uac00\ub41c \ub124\ud2b8\uc6cc\ud06c\ub97c \ub2e4\uc911 \ub808\uc774\uc5b4 \ub124\ud2b8\uc6cc\ud06c(Multi-Layer Network)\ub77c\uace0 \ud558\uba70, \uc785\ub825\ub178\ub4dc\ub4e4\uc5d0\uc11c \ucd9c\ub825\ub178\ub4dc \uc0ac\uc774\uc5d0 \uc740\ub2c9 \ub178\ub4dc\ub4e4\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc815\ubcf4\uc758 \uc774\ub3d9 \ubc29\ud5a5 \uc55e\uc11c \uc5b8\uae09\ud55c \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc815\ubcf4\ub294 \ud56d\uc0c1 \uc785\ub825\ub178\ub4dc\uc5d0\uc11c \uc2dc\uc791\ud558\uc5ec \ucd9c\ub825\ub178\ub4dc\ub85c \uc885\uacb0\ub418\ub294 \uad6c\uc870\uc600\uc2b5\ub2c8\ub2e4. \uc774\ucc98\ub7fc \uc815\ubcf4\uac00 \ud55c \ubc29\ud5a5\uc73c\ub85c\ub9cc \uc9c4\ud589\ub418\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud53c\ub4dc\ud3ec\uc6cc\ub4dc \ub124\ud2b8\uc6cc\ud06c(Feedforward Network)\ub77c\uace0 \ud558\uba70, \ud2b9\ud788 \uc544\ub798\uc758 \uadf8\ub9bc\uacfc \uac19\uc774 \ub2e4\uc911\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4, \uc989 2\uac1c \uc774\uc0c1\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \uac16\ub294 \ub124\ud2b8\uc6cc\ud06c \uad6c\uc870\ub97c \ub525 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c(Deep Neural Network; DNN)\ub77c\uace0 \ud558\uba70, \uc774\ub97c \uc774\uc6a9\ud55c Learning(Training)\uc744 \ub525 \ub7ec\ub2dd(Deep Learning)\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ub525 \ub7ec\ub2dd\uc740 \ubc14\ub451\uc5d0\uc11c \uc774\uc138\ub3cc\uc744 4:1\ub85c \ub204\ub978 DeepMind (Google\uc758 \uc790\ud68c\uc0ac)\uc758 \uc54c\ud30c\uace0 (AlphaGo)\uc758 \uadfc\uac04\uc774 \ub418\ub294 \uc54c\uace0\ub9ac\uc998\uc785\ub2c8\ub2e4. \ub2e4\uc911 \ub808\uc774\uc5b4 \ud53c\ub4dc\ud3ec\uc6cc\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub294 \ub2e4\uc911 \ub808\uc774\uc5b4 \ud37c\uc149\ud2b8\ub860(Multi-Layer Perceptron; MLP)\ub77c\uace0\ub3c4 \ubd88\ub9ac\uc6b0\uba70 \uc0ac\uc2e4\uc0c1 ANN \ud1a0\ud3f4\ub85c\uc9c0\uc758 \ud45c\uc900\uc774\ub77c\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ucd9c\ucc98: http://neuralnetworksanddeeplearning.com/chap1.html \ud53c\ub4dc\ud3ec\uc6cc\ub4dc \ub124\ud2b8\uc6cc\ud06c\uc640\ub294 \ub2ec\ub9ac \ub8e8\ud504(Loop)\uc5d0 \uc758\ud574\uc11c \uc815\ubcf4\uac00 \uc591\ubc29\ud5a5\uc73c\ub85c \uc774\ub3d9\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ubc18\ubcf5 \ub124\ud2b8\uc6cc\ud06c(Recurrent Network) \ub610\ub294 \ud53c\ub4dc\ubc31 \ub124\ud2b8\uc6cc\ud06c(Feedback Network)\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud53c\ub4dc\ubc31 \ub124\ud2b8\uc6cc\ud06c\ub294 \uc880 \ub354 \uc0dd\ubb3c\ud559\uc801\uc778 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c\ub97c \ubaa8\uc0ac\ud558\uba70 \ub9e4\uc6b0 \ubcf5\uc7a1\ud55c \ud328\ud134\uc744 \ud559\uc2b5\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc9c0\uc5f0(Delay)\uc744 \ucd94\uac00\ud558\uc5ec \uc8fc\uc2dd\uc2dc\uc7a5\uc758 \uc608\uce21, \ub0a0\uc528 \uc608\uce21 \ub4f1 \ub2e8\uae30 \uae30\uc5b5\uc744 \ud1b5\ud574 \ub124\ud2b8\uc6cc\ud06c\uc758 \uc131\ub2a5\uc744 \ub192\uc77c \uc218 \uc788\uc73c\ubbc0\ub85c, \uc77c\uc815 \uae30\uac04\uc758 \uc77c\ub828\uc758 \uc774\ubca4\ud2b8\ub4e4\uc744 \uc774\ud574\ud560 \uc218 \uc788\ub294 \ub2a5\ub825\uc744 \uc9c0\ub2c8\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub108\ubb34 \ubcf5\uc7a1\ud558\uc5ec \ud604\uc7ac\ub85c\uc11c\ub294 \uc774\ub860\uc0c1\uc5d0 \uba38\ubb34\ub294 \uc218\uc900\uc774\uba70 \uc2e4\uc81c \ubb38\uc81c\uc5d0 \uac70\uc758 \uc801\uc6a9\ub418\uc9c0 \ubabb\ud558\uace0 \uc788\ub294 \uc2e4\uc815\uc785\ub2c8\ub2e4 (\uadf8\ub7fc\uc5d0\ub3c4 \uc774 \ubc29\ubc95\uc740 \uac00\uc7a5 \uc720\ub9dd\ud55c \ubc29\ubc95 \uc911 \ud558\ub098\uc778\ub370, \uc790\uc5f0\uc5b4\ucc98\ub9ac(Natural Language Processing;NLP), \ub85c\ubd07\uc81c\uc5b4, \uc778\uacf5\uc9c0\ub2a5 \uae30\ubc18 \uc791\uace1 \ub4f1 Sequence Data\ub97c \ucc98\ub9ac\ud558\ub294\ub370 \uc720\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4). \uc774\ubbf8\uc9c0 \uc124\uba85: Recurrent Neural Network\uc758 \uc608\uc2dc \uac01 \ub808\uc774\uc5b4 \ub0b4 \ub178\ub4dc \uac1c\uc218 \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\ub97c \uacb0\uc815\ud558\ub294 \ub610\ub2e4\ub978 \uc694\uc778\uc740 \uac01 \ub808\uc774\uc5b4 \ub0b4\uc5d0 \uc874\uc7ac\ud558\ub294 \ub178\ub4dc\uc758 \uac1c\uc218\uc785\ub2c8\ub2e4. \ub2f9\uc5f0\ud788 \uac01 \ub808\uc774\uc5b4\uc5d0 \ub300\ud55c \ub178\ub4dc\uc758 \uac1c\uc218\uac00 \uc99d\uac00\ud560 \uc218\ub85d \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uc758 \ubcf5\uc7a1\ub3c4\ub294 \uc99d\uac00\ud569\ub2c8\ub2e4. \uc785\ub825\ub178\ub4dc\uc758 \uac1c\uc218\ub294 \uc785\ub825 \ub370\uc774\ud130\uc758 Feature\uc758 \uc218\uc5d0 \uc758\ud574 \ubbf8\ub9ac \uacb0\uc815\ub418\uba70, \ucd9c\ub825\ub178\ub4dc\uc758 \uac1c\uc218 \ub610\ud55c \ubaa8\ub378\uc758 \uacb0\uacfc\uc5d0 \ub530\ub77c \ub610\ub294 \ubaa8\ub378\uc758 \ubd84\ub958 \uc218\uc900\uc5d0 \ub530\ub77c \uacb0\uc815\ub418\uc9c0\ub9cc, \uc740\ub2c9 \ub178\ub4dc\ub4e4\uc758 \uc218\ub294 \uc0ac\uc6a9\uc790\uac00 \uc790\uc720\ub86d\uac8c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc740\ub2c9 \ub808\uc774\uc5b4\uc758 \ub274\ub7f0 \uac1c\uc218\ub97c \uacb0\uc815\ud558\ub294 \uc2e0\ub8b0\ud560\ub9cc\ud55c \uc5b4\ub5a4 \ubc95\uce59\uc774 \uc874\uc7ac\ud558\ub294 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc, \uc801\uc815\ud55c \ub274\ub7f0\uc758 \uac1c\uc218\ub294 \uc785\ub825 \ub178\ub4dc, \ud559\uc2b5 \ub370\uc774\ud130 \ub7c9, \ub178\uc774\uc988 \ub370\uc774\ud130 \ub7c9, \ud559\uc2b5 \uc791\uc5c5\uc758 \ubcf5\uc7a1\ub3c4 \ub4f1\uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ubcf5\uc7a1\ud560\uc218\ub85d \ub354 \ubcf5\uc7a1\ud55c \ubb38\uc81c\uc5d0 \ub300\ud55c \ud559\uc2b5\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub178\ub4dc\uc758 \uac1c\uc218\uac00 \uc801\uc815\uc218\ubcf4\ub2e4 \uacfc\ub3c4\ud558\uac8c \ub9ce\uc744 \uacbd\uc6b0 Overfitting\uc758 \uc704\ud5d8\uc774 \uc788\uc73c\uba70, \uacc4\uc0b0\ub7c9 \ub610\ud55c \ub9ce\uc544\uc9c0\ubbc0\ub85c \ud559\uc2b5\uc18d\ub3c4\uac00 \ub290\ub824\uc9d1\ub2c8\ub2e4. \ucd5c\uc120\uc758 \uc801\uc6a9\uc740 \uc801\uc808\ud55c \uc131\ub2a5\uc744 \ub0b4\ub294 \ucd5c\uc18c\uc758 \ub178\ub4dc\uac1c\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc801\uc740 \uac1c\uc218\uc758 \uc740\ub2c9 \ub178\ub4dc\ub9cc\uc73c\ub85c\ub3c4 \uc5c4\uccad\ub09c \uc591\uc758 \ud559\uc2b5 \ub2a5\ub825\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ed\uc804\ud30c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0 \uadf8 \uc790\uccb4\ub294 \uac13 \ud0dc\uc5b4\ub09c \uc544\uae30\ucc98\ub7fc \uc544\ubb34 \uac83\ub3c4 \ubc30\uc6b0\uc9c0 \uc54a\uc740 \ube44\uc5b4\uc788\ub294 \uc11d\ud310\uacfc\ub3c4 \uac19\uc2b5\ub2c8\ub2e4. \uc785\ub825\ub418\ub294 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uacfc\uc815\uc744 \ud1b5\ud574 \ub274\ub7f0 \uac04 \uc5f0\uacb0\uc131\uc774 \uac15\ud654\ub418\uac70\ub098 \uc57d\ud654\ub418\uba70, \uadf8 \uacfc\uc815\uc744 \ud1b5\ud574 \ud328\ud134\uc744 \uc778\uc2dd\ud558\ub294 \uc218\uc900\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc5d0 \ub300\ud55c \uac00\uc911\uce58\uac00 \ud615\uc131\ub418\uc5b4 \uac11\ub2c8\ub2e4. \uc774\ub860\uc0c1\uc73c\ub85c\ub294 \uc218\uc2ed\ub144\uc804\uc5d0 \uc815\ub9bd\ub418\uc5c8\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0, \uc5f0\uacb0 \uac00\uc911\uce58\ub97c \uc870\uc808\ud558\ub294 \uc2e0\uacbd\ub9dd \ud559\uc2b5\uc740 \ub9c9\ub300\ud55c \ucef4\ud4e8\ud130 \uc5f0\uc0b0\ub7c9\uc73c\ub85c \uc778\ud574 \ud6a8\uc728\uc801\uc778 \uc54c\uace0\ub9ac\uc998\uc774 \ubc1c\uacac\ub41c 1980\ub144\ub300 \ud6c4\ubc18\uc774 \ub418\uc5b4\uc11c\uc57c \uaca8\uc6b0 \uc2e4\uc9c8\uc801\uc778 (\uac04\ub2e8\ud55c) \ubb38\uc81c\ub97c \ud480 \uc218 \uc788\ub294 \uc218\uc900\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8 \uc2e4\ud6a8\uc728\uc801\uc778 \uc54c\uace0\ub9ac\uc998\uc740 \ud604\uc7ac \uc5ed\uc804\ud30c(Backpropagation)\uc774\ub77c\uace0 \uc54c\ub824\uc9c4 \uc5ed\uc804\ud30c\ub418\ub294 \uc5d0\ub7ec \uc804\ub7b5( Strategy of Back-propagating Errors )\uc785\ub2c8\ub2e4. \ub2e4\ub978 \uae30\uacc4\ud559\uc2b5 \uc54c\uace0\ub9ac\uc998\ub4e4\uc5d0 \ube44\ud574 \uc5ec\uc804\ud788 \ub290\ub9ac\uae30\ub85c \uc545\uba85\uc774 \ub192\uc9c0\ub9cc, \uc601\ud654 \"\uc544\ubc14\ud0c0(Avatar)\"\uac00 \uc2a4\ud14c\ub808\uc624\uc2a4\ucf54\ud53d\uc758 \ubd80\ud765\uc744 \uc774\ub04c\uc5b4\ub0c8\ub4ef \uc5ed\uc804\ud30c \ubc29\ubc95\uc740 ANN\uc5d0 \ub2e4\uc2dc\uae08 \uad00\uc2ec\uc744 \ubaa8\uc73c\ub294 \uc6d0\ub3d9\ub825\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uacb0\uacfc\uc801\uc73c\ub85c \uc774\uc81c\ub294 \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\ub294 \ub2e4\uc911 \ub808\uc774\uc5b4 \ud53c\ub4dc\ud3ec\uc6cc\ub4dc(Multi-Layer Feedforward) \ub124\ud2b8\uc6cc\ud06c\ub294 \ub370\uc774\ud130 \ub9c8\uc774\ub2dd\uc758 \ud544\uc218\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc758 \uac15\uc810\uacfc \uc57d\uc810\uc744 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \uac15 \uc810 \uc57d \uc810 \ubd84\ub958 \ub610\ub294 \uc608\uce21 \ubb38\uc81c\uc5d0 \uc801\uc6a9 \uac00\ub2a5\ud568. \ucef4\ud4e8\ud130 \uc5f0\uc0b0\ub7c9\uc774 \ub9e4\uc6b0 \ub9ce\uace0 \ud559\uc2b5\uc18d\ub3c4\uac00 \uadf9\ud788 \ub290\ub9bc. \ud2b9\ud788 \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ubcf5\uc7a1\ud55c \uacbd\uc6b0 \ub354\uc6b1 \uc2ec\uac01\ud568. \uac70\uc758 \ubaa8\ub4e0 \uc54c\uace0\ub9ac\uc998\uc774 \ud560 \uc218 \uc788\ub294 \uac83\ubcf4\ub2e4 \ud6e8\uc52c \ub354 \ubcf5\uc7a1\ud55c \ud328\ud134\uc758 \ubaa8\ub378\ub9c1\uc774 \uac00\ub2a5\ud568. \ud559\uc2b5 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uacfc\uc801\uc751(Ovefitting) \uacbd\ud5a5\uc774 \uac15\ud568. \ub418\ub3c4\ub85d \ub370\uc774\ud130\uc758 \uadfc\uc6d0\uc801\uc778 \uad00\uacc4\uc5d0 \ub300\ud55c \uac00\uc815\uc744 \uc801\uac8c \ud568. \ud574\uc11d\uc774 \uac70\uc758 \ubd88\uac00\ub2a5\ud558\uba70 \uac00\ub2a5\ud558\ub2e4\uace0 \ud574\ub3c4 \ub9e4\uc6b0 \uc5b4\ub835\uace0 \ubcf5\uc7a1\ud55c \ube14\ub799\ubc15\uc2a4 \ubaa8\ub378\uc784. \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc758 \uc77c\ubc18\uc801\uc778 \ud615\ud0dc\ub294 \ub9ce\uc740 \ubc18\ubcf5 \uc0ac\uc774\ud074\uc744 \uac16\ub294 \ub450 \uac1c\uc758 \ud504\ub85c\uc138\uc2a4\ub97c \ud3ec\ud568\ud558\uba70, \uac01 \uc0ac\uc774\ud074\uc744 Epoch\ub77c\uace0 \ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c\ub294 \uc5b4\ub5a0\ud55c \uc0ac\uc804 \uc9c0\uc2dd\ub3c4 \uac16\uace0 \uc788\uc9c0 \uc54a\uc73c\ubbc0\ub85c, \ucd08\uae30 \uac00\uc911\uce58\ub294 \ub79c\ub364\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc815\ud574\uc9c4 \uc911\ub2e8 \uc870\uac74\uc744 \ub9cc\uc871\ud560 \ub54c\uae4c\uc9c0 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 \ubc18\ubcf5\ub429\ub2c8\ub2e4. \uac01\uac01\uc758 Epoch\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 Phase\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4: (1) \uc21c\ubc29\ud5a5 Phase : \ub274\ub7f0\uc774 \uc785\ub825 \ub808\uc774\uc5b4\uc5d0\uc11c \ucd9c\ub825 \ub808\uc774\uc5b4 \uc21c\uc73c\ub85c \ud65c\uc131\ub418\uba70 \uadf8\uc5d0 \ub530\ub77c \ub274\ub7f0\uc758 \uac00\uc911\uce58\uc640 \ud65c\uc131 \ud568\uc218\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \ub808\uc774\uc5b4\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ucd9c\ub825\uc2e0\ud638\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. (2) \uc5ed\ubc29\ud5a5 Phase : \uc21c\ubc29\ud5a5 Phase\uc5d0\uc11c \uc5bb\uc740 \ub124\ud2b8\uc6cc\ud06c \ucd9c\ub825\uc2e0\ud638\uc640 \ud559\uc2b5 \ub370\uc774\ud130\uc758 \uc2e4\uc81c \ud0c0\uac9f\uac12\uacfc \ube44\uad50\ud569\ub2c8\ub2e4. \uadf8 \ub450 \uac1c\uc758 \uac12 \uc0ac\uc774\uc758 \ucc28\uc774\uac00 \uc5d0\ub7ec\ub97c \uc77c\uc73c\ud0a4\uba74 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc5ed\ubc29\ud5a5\uc73c\ub85c \uc804\ud30c\uc2dc\ucf1c \ub274\ub7f0\ub4e4 \uac04\uc758 \uc5f0\uacb0 \uac00\uc911\uce58\ub97c \uc218\uc815\ud558\uc5ec \ud5a5\ud6c4 \uc5d0\ub7ec\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \uc904\uc5ec\ub098\uac11\ub2c8\ub2e4. \uc774\ub7f0 \uc2dd\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c\ub294 \uc5ed\ubc29\ud5a5\uc73c\ub85c \ubcf4\ub0b8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c\uc758 \uc804\uccb4 \uc5d0\ub7ec\ub97c \uc904\uc5ec\ub098\uac11\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uba74 \uc774\ub54c\ucbe4 \ud558\ub098\uc758 \uc758\ubb38\uc0ac\ud56d\uc774 \ub4ed\ub2c8\ub2e4: \uacfc\uc5f0 \ub274\ub7f0\uc758 \uc785\ub825\uacfc \ucd9c\ub825 \uc0ac\uc774\uc758 \uad00\uacc4\uac00 \uadf8\ub807\uac8c \ubcf5\uc7a1\ud55c\ub300 \ub3c4\ub300\uccb4 \uc5b4\ub5bb\uac8c \uc774 \uc54c\uace0\ub9ac\uc998\uc740 \uac00\uc911\uce58\uc758 \ubcc0\ud654\ub7c9\uc744 \uacb0\uc815\ud558\ub294 \uac83\uc77c\uae4c? \uc774\uc5d0 \ub300\ud55c \ud574\ub2f5\uc740 \uae09\uacbd\uc0ac\ubc95(Steepest Descent Method)\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uae09\uacbd\uc0ac\ubc95\uc740 \uac04\ub2e8\ud788 \uc0b0 \uc704\uc5d0\uc11c \ub208\uc744 \uac00\ub9b0 \ucc44\ub85c \uac00\uc7a5 \ub0ae\uc740 \uacf3\uc744 \ucc3e\uc544\uac08 \ub54c \uc4f0\ub294 \ubc29\ubc95\uacfc\ub3c4 \uac19\uc2b5\ub2c8\ub2e4. \uc0ac\ubc29\uc744 \uc9c0\ud321\uc774\ub85c \ub450\ub4dc\ub824\ubcf4\uace0 \uac00\uc7a5 \uacbd\uc0ac\uac00 \uc544\ub798 \ubc29\ud5a5\uc73c\ub85c \uc2ec\ud55c \uacf3\uc73c\ub85c \ud604\uc7ac \uc704\uce58\ud55c \uc9c0\uc810\uc5d0\uc11c \ud55c \ubc1c\uc790\uad6d\uac00\uace0 \uadf8 \uc704\uce58\uc5d0\uc11c \ub2e4\uc2dc \uac00\uc7a5 \uacbd\uc0ac\uac00 \uc544\ub798\ub85c \uc2ec\ud55c \ubc29\ud5a5\uc744 \ucc3e\uace0 \uadf8 \ubc29\ud5a5\uc73c\ub85c \ud55c \ubc1c\uc790\uad6d\uc529 \uc774\ub3d9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c, \uae09\uacbd\uc0ac\ubc95\uc740 \ubc29\ud5a5\ud0d0\uc0c9(Direction Search)\uacfc \uc2a4\ud15d\ud06c\uae30 \uacb0\uc815(Step Size Determination)\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ucd9c\ucc98: http://aria42.com/blog/2014/12/understanding-lbfgs \uc704\uc758 \uc774\ubbf8\uc9c0\ub97c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc0b0\uc758 \ub192\uc774\ub97c \ub4f1\uace0\uc120\uc73c\ub85c \ud45c\ud604\ud558\uc600\uc744 \ub54c \uac01 \ub4f1\uace0\uc120\uc5d0 \uc218\uc9c1\ud55c \ubc29\ud5a5(\ube68\uac04 \ud654\uc0b4\ud45c)\uc774 \uae09\uac15\ud558\ubc29\ud5a5\uc785\ub2c8\ub2e4 (\ub0b4\ubd80 \ub3d9\uc2ec\uc6d0\uc774 \uac00\uc7a5 \ub0ae\uc740 \ub4f1\uace0\uc120\uc774\ub77c \uac00\uc815). \ucc38\uace0\ub85c, \ub0b4\ubd80 \ub3d9\uc2ec\uc6d0\uc774 \uac00\uc7a5 \ub4f1\uace0\uc120 \ub192\uc774\uac00 \ud06c\ub2e4\uace0 \uac00\uc815\ud558\uba74 \ube68\uac04 \ud654\uc0b4\ud45c\ub294 \uae09\uc0c1\uc2b9(Steepest Ascent)\ubc29\ud5a5\uc774 \ub418\uba70, \uae09\uac15\ud558\uc640 \uae09\uc0c1\uc2b9\uc740 \ub2e8\uc9c0 \ubd80\ud638\uac00 \ubc14\ub010\ub2e4\ub294 \uac83\ubfd0\uc785\ub2c8\ub2e4. \uc0c1\uae30 \uc774\ubbf8\uc9c0\uc758 \ud30c\ub780 \ub4f1\uace0\uc120\uc5d0 \ud45c\uba74\ud568\uc218(Surface Function)\uc774 \\(z = f(x,y)\\) \ub85c \uc8fc\uc5b4\uc84c\ub2e4\uba74 \ud2b9\uc815 \uc704\uce58 \\((x*, y*)\\) \uc5d0\uc11c\uc758 \uae09\uac15\ud558\ubc29\ud5a5\uc740 \ub2e4\uc74c\uc758 \ubca1\ud130(Vector)\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4: \\(-\\nabla f(x^{*},y^{*})=-\\begin{bmatrix}\\partial f(x^{*},y^{*})/\\partial x \\\\ \\partial f(x^{*},y^{*})/\\partial y\\end{bmatrix}\\) \uc774\uc640 \uc720\uc0ac\ud558\uac8c \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc740 \uac01 \ub274\ub7f0\uc758 \ud65c\uc131\ud568\uc218\uc758 \ubbf8\ubd84\uac12\uc744 \uc774\uc6a9\ud558\uc5ec \uac01\uac01\uc758 \uc720\uc785 \uac00\uc911\uce58\uc758 \ubc29\ud5a5\uc73c\ub85c \uacbd\uc0ac\ub3c4\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4. \uc774 \ub54c\ubb38\uc5d0 \ud65c\uc131\ud568\uc218\uc758 \ubbf8\ubd84\uac00\ub2a5\uc131\uc774 \uc911\uc694\ud55c \uc758\ubbf8\ub97c \uc9c0\ub2d9\ub2c8\ub2e4. \uc774 \uacbd\uc0ac\ub3c4\ub294 \uac00\uc911\uce58\uc758 \ubcc0\ud654\uc5d0 \ub300\ud558\uc5ec \uc5d0\ub7ec\uc758 \uc99d\uac10\uc774 \uc5bc\ub9c8\ub098 \uae09\uc18d\ud558\uac8c \ubcc0\ud654\ub418\ub294\uc9c0\ub97c \ud310\ub2e8\ud560 \uc218 \uc788\ub294 \uae30\uc900\uc744 \uc81c\uc2dc\ud569\ub2c8\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \ud559\uc2b5\ub960(Learning Rate)\ub77c\uace0 \ud558\ub294 \uc591\uc5d0 \uc758\ud574 \uc5d0\ub7ec\uac00 \uae09\uc18d\ub3c4\ub85c \uc791\uc544\uc9c0\ub294 \ubc29\ud5a5\uc73c\ub85c \uac00\uc911\uce58\ub97c \ubcc0\ud654\uc2dc\ud0b5\ub2c8\ub2e4. \ud559\uc2b5\ub960\uc774 \ucee4\uc9c8 \uc218\ub85d \ucd08\uae30\uc5d0\ub294 \ube60\ub974\uac8c \uc5d0\ub7ec\ub97c \uc904\uc774\ub098 \ud574(Solution) \uadfc\ucc98\uc5d0\uc11c\ub294 \uc624\ubc84\uc288\ud305(Overshooting)\uc73c\ub85c \uc778\ud574 \uc218\ub834 \uc18d\ub3c4\uac00 \ub290\ub824\uc9c0\uac70\ub098 \uc7ac\uc218\uac00 \uc5c6\ub294 \uacbd\uc6b0 \uc601\uc6d0\ud788 \uc218\ub834\ud558\uc9c0 \ubabb\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c, \uae09\uac15\ud558\ubc95\uc740 \uc9c0\uc5ed\ucd5c\uc18c\uac12(Local Minimum)\uc740 \ucc3e\uc744 \uc218 \uc788\uc73c\ub098 \uc804\uc5ed\ucd5c\uc18c\uac12(Global Minimum)\uc744 \ucc3e\uc9c0 \ubabb\ud558\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc774\ub860\uc801\uc778 \uac83\uc744 \ub2e4\ub8ec Part 1.\uc744 \ub9c8\ubb34\ub9ac\ud558\uace0 Part 2.\uc5d0\uc11c\ub294 R\uc758 \uc778\uacf5\uc2e0\uacbd\ub9dd \ud328\ud0a4\uc9c0\uc778 nerualnet \uc744 \uc774\uc6a9\ud558\uc5ec ANN \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \uc2e4\uc9c8\uc801\uc778 \uc608\uc81c\ub97c \ud480\uc5b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"Introduction to Artificial Neural Network Part 1."},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#artificial-neural-networks","text":"\uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uc0dd\ubb3c\uc758 \ub1cc\uac00 \uc785\ub825\ub41c \uc790\uadf9\uc5d0 \ubc18\uc751\ud558\ub294\uac00\ub97c \uc774\ud574\ud558\uc5ec \uc785\ub825 \uc2e0\ud638\uc640 \ucd9c\ub825 \uc2e0\ud638\uc5d0 \ub300\ud55c \uad00\uacc4\ub97c \ubaa8\ub378\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub274\ub7f0\uc740 \uc804\uae30 \uc2e0\ud638\ub97c \uc218\uc9d1, \ucc98\ub9ac \ubc0f \uc804\ud30c\ub97c \uc8fc\ub41c \ubaa9\uc801\uc73c\ub85c \ud558\ub294 \ub1cc\uc758 \uc138\ud3ec\uc778\ub370, \uc778\uacf5\uc2e0\uacbd\ub9dd\uc5d0 \uc788\uc5b4 \uc815\ubcf4\ub97c \ucc98\ub9ac\ud558\ub294 \uae30\ubcf8\uc801\uc778 \ub2e8\uc704\ub97c \uc778\uacf5 \ub274\ub7f0(Artificial Neuron) \ub610\ub294 \ub178\ub4dc(Node)\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uc774\ub7ec\ud55c \uac70\ub300 \ubcd1\ub82c \ucc98\ub9ac\ub97c \uc704\ud55c \uc778\uacf5 \ub274\ub7f0\ub4e4\uc774 \uc11c\ub85c \uc5f0\uacb0\ub41c \ub124\ud2b8\uc6cc\ud06c\ub97c \uc774\uc6a9\ud558\ub294 \uac83\uc774\uba70, \ub1cc\uc758 \uc815\ubcf4 \ucc98\ub9ac \ub2a5\ub825\uc774 \uc774\ub7ec\ud55c \ub274\ub7f0\uc758 \ub124\ud2b8\uc6cc\ud06c\ub85c\ubd80\ud130 \uae30\uc778\ud55c\ub2e4\uace0 \uc0dd\uac01\ub418\uc5b4, \ucd08\ucc3d\uae30 \uc778\uacf5\uc9c0\ub2a5 \ubd84\uc57c\ub294 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc744 \ubaa9\uc801\uc73c\ub85c \ud558\uc600\uc2b5\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd \ubd84\uc57c\uc758 \ub2e4\ub978 \uc774\ub984\uc740 \uacb0\ud569\uc124(Connectionism), \ubcd1\ub82c \ubd84\uc0b0 \ucc98\ub9ac(Parallel Distributed Processing), \uc2e0\uacbd \uacc4\uc0b0(Neural Computation) \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uba74 \uc0dd\ubb3c\uc740 \uba87 \uac1c\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uc744\uae4c\uc694? \uc778\uac04\uc740 860\uc5b5\uac1c\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \ud788\ub9d0\ub77c\uc57c \uc6d0\uc22d\uc774\ub294 63\uc5b5\uac1c, \uae4c\ub9c8\uadc0\ub294 21\uc5b5\uac1c, \uc950\ub294 7100\ub9cc\uac1c, \ubc14\ud034\ubc8c\ub808\ub294 100\ub9cc\uac1c, \ud574\ud30c\ub9ac\ub294 5,600\uac1c \uc815\ub3c4\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0\ub370 \uac00\uc7a5 \ub9ce\uc740 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \uc0dd\ubb3c\uc740 \uc778\uac04\uc774 \uc544\ub2c8\ub77c \uc544\ud504\ub9ac\uce74 \ucf54\ub07c\ub9ac\uc778\ub370 \ubb34\ub824 2500\uc5b5\uac1c\ub098 \ub429\ub2c8\ub2e4. \uac1c\uccb4 \ub274\ub7f0 \uc218 \uc544\ud504\ub9ac\uce74 \ucf54\ub07c\ub9ac 257,000,000,000 \uc778\uac04 86,000,000,000 \ud788\ub9d0\ub77c\uc57c \uc6d0\uc22d\uc774 6,376,000,000 \uae4c\ub9c8\uadc0 2,171,000,000 \uace0\uc591\uc774 760,000,000 \ubb38\uc5b4 500,000,000 \uae30\ub2c8 \ud53c\uadf8 240,000,000 \uace8\ub4e0 \ud584\uc2a4\ud130 90,000,000 \uac1c\uad6c\ub9ac 16,000,000 \ubc14\ud034\ubc8c\ub808 1,000,000 \uac1c\ubbf8 250,000 \uacfc\uc77c \ud30c\ub9ac 250,000 \ud574\ud30c\ub9ac 5,600 \ucd9c\uc800: wkipedia.org \uc778\ub958\uc5d0\uac8c \ubd88\ud589\uc778\uc9c0 \ub2e4\ud589\uc778\uc9c0\ub294 \ubab0\ub77c\ub3c4 \ud604\uc7ac\uc758 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uace0\uc791 \uc218\ubc31\uac1c\uc758 \ub274\ub7f0\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uac00\uae4c\uc6b4 \ubbf8\ub798\uc5d0 \uae30\uacc4\uac00 \uc778\ub958\ub97c \uc704\ud611\ud560 \uac00\ub2a5\uc131\uc740 \uc5c6\uc5b4 \ubcf4\uc785\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, \ub2e4\uc591\ud55c \uc5f0\uad6c\uac00 \ube60\ub974\uac8c \uc9c4\ud589\ub418\uc5b4 \uac00\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc778\uacf5\uc9c0\ub2a5\uc758 \ubc1c\uc804 \uc18d\ub3c4\ub294 \uc810\uc810 \uac00\uc18d\ud654 \ub418\uc5b4 \uac00\uace0 \uc788\uc73c\uba70, Neurorobotics \ubd84\uc57c\uc5d0\uc11c\ub294 \uc778\uac04\uc774 \ub9cc\ub4e0 \ucef4\ud4e8\ud130 \uc54c\uace0\ub9ac\uc998\uc774 \uc544\ub2cc \uc950\uc758 \ub1cc\ub97c \uc774\uc6a9\ud558\uc5ec \uc21c\uc218 \ub274\ub7f0\uc744 \uc5f0\uacb0\ud55c \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ubaa8\ud130\ub97c \uc81c\uc5b4\ud558\ub294 \ub2e8\uacc4\uc5d0\uae4c\uc9c0 \uc774\ub974\ub800\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc601\uc0c1\uc744 \uac10\uc0c1\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4(\uc18c\ub984\uc8fc\uc758). ANN \ucd08\uae30 50\ub144\uac04\uc5d0\ub294 AND, OR, NOT \ub4f1 \uac04\ub2e8\ud55c \ub17c\ub9ac\ub97c \ucc98\ub9ac\ud558\ub294 \uc218\uc900\uc73c\ub85c \ub1cc\uc758 \ub3d9\uc791\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \uc218\uc900\uc774\uc5c8\uc73c\ub098, \uacfc\ud559\uc790\ub4e4\uc774 \uc0dd\ubb3c\ud559\uc801 \ub1cc\uc758 \uc791\ub3d9\uc6d0\ub9ac\ub97c \uc774\ud574\ud558\ub294\ub370 \uc788\uc5b4 \ub9ce\uc740 \ub3c4\uc6c0\uc744 \uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \ucd5c\uadfc \ucef4\ud4e8\ud305 \ud30c\uc6cc\uac00 \ud3ed\ubc1c\uc801\uc73c\ub85c \ubc1c\uc804\ud568\uc5d0 \ub530\ub77c ANN\uc740 \uc2e4\uc81c\uc801\uc778 \ubb38\uc81c\ub97c \ud478\ub294\ub370 \ubcf4\ub2e4 \uc801\uadf9\uc801\uc73c\ub85c \ud65c\uc6a9\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc0ac\ubb3c\uc778\uc2dd, \uc74c\uc131\uc778\uc2dd, \uc790\uc728\uc8fc\ud589\ucc28, \ub0a0\uc528\uc608\uce21\uacfc \uac19\uc740 \uc790\uc5f0\ud604\uc0c1\uc758 \uc608\uce21\uacfc \uc0ac\ud68c\ud604\uc0c1\uc758 \uc608\uce21\uc5d0\ub3c4 \ud65c\uc6a9\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc989, ANN\uc740 \ubd84\ub958(Classification), \uc218\uce58 \uc608\uce21, \uc790\uc728 \ud328\ud134 \uc778\uc2dd(Unsupervised Pattern Recognition) \ub4f1\uc5d0 \ud65c\uc6a9\ud560 \uc218 \uc788\uc744 \uc815\ub3c4\ub85c \ub2e4\uc7ac\ub2e4\ub2a5\ud569\ub2c8\ub2e4. ANN\uc740 \uc785\ub825 \ub370\uc774\ud130\uc640 \ucd9c\ub825 \ub370\uc774\ud130\uac00 \uc798 \uc815\uc758\ub418\uc5b4 \uc788\ub294 \ubb38\uc81c\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c\ub370, \uc785\ub825 \ub370\uc774\ud130\uc640 \ucd9c\ub825 \ub370\uc774\ud130 \uac04\uc758 \uad00\uacc4\ub97c \uc815\uc758\ud558\ub294 \uac83\uc740 \ub108\ubb34\ub098\ub3c4 \ubcf5\uc7a1\ud569\ub2c8\ub2e4.","title":"\uc778\uacf5\uc2e0\uacbd\ub9dd(Artificial Neural Networks) \uac1c\uc694"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#_1","text":"\uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \uc778\uac04\uc758 \ub450\ub1cc\ub97c \ubaa8\uc0ac\ud55c \uac83\uc774\ubbc0\ub85c \uc778\uacbd\uc2e0\uacbd\ub9dd\uc758 \ub3d9\uc791 \uc6d0\ub9ac\ub97c \uc774\ud574\ud558\ub824\uba74 \ub274\ub7f0(Neuron)\uc758 \ub3d9\uc791 \uc6d0\ub9ac\ub97c \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc0dd\ud654\ud559 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 \uc138\ud3ec\uc758 \uc218\uc0c1\ub3cc\uae30(Dendrite)\ub85c \uc785\ub825\uc2e0\ud638\uac00 \ub4e4\uc5b4\uc624\uba74, \uadf8 \ucc98\ub9ac\uc758 \uc911\uc694\ub3c4\uc5d0 \ub530\ub77c \uc784\ud384\uc2a4\uc5d0 \uac00\uc911\uce58\ub97c \ubd80\uc5ec\ud569\ub2c8\ub2e4. \uc138\ud3ec\uccb4\ub294 \uc785\ub825\uc2e0\ud638\ub97c \ub204\uc801\ud558\uace0 \ub204\uc801\ub41c \uc785\ub825\uc2e0\ud638\uac00 \uc77c\uc815 \uc784\uacc4\uce58\ub97c \ub118\uc5b4\uc11c\uba74 \uc804\uae30\ud654\ud559 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 \ucd9c\ub825\uc2e0\ud638\ub294 \ucd95\uc0c9\ub3cc\uae30(Axon)\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \ucd95\uc0c9\ub3cc\uae30 \uc885\ub2e8(Axon Terminal)\uc5d0\uc11c \uc804\uae30\uc2e0\ud638\ub294 \ud654\ud559\uc2e0\ud638\ub85c \ucc98\ub9ac\ub418\uc5b4 \ub274\ub7f0 \uac04\uc758 \uc791\uc740 \uac04\uadf9\uc778 \uc2dc\ub0c5\uc2a4(Synapse)\ub97c \ud1b5\ud574 \uc774\uc6c3\uc758 \ub274\ub7f0\uc73c\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc2e0\uacbd\ub9dd \uad6c\uc870 \ub2e8\uc77c \uc778\uacf5 \ub274\ub7f0 \ubaa8\ub378\uc740 \uc0dd\ubb3c\ud559\uc801 \ubaa8\ub378\uacfc \uc720\uc0ac\ud558\uac8c \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc5d0\uc11c, \ub178\ub4dc \\(j\\) \uc5d0\uc11c \\(i\\) \ub85c\uc758 \ub9c1\ud06c\ub294 \\(j\\) \uc5d0\uc11c \\(i\\) \ub85c\uc758 \ud65c\uc131 \\(a_j\\) \ub97c \uc804\ud30c\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \uac01 \ub9c1\ud06c\ub294 \uc774 \ub9c1\ud06c\uc640 \uad00\ub828\ub41c \uac00\uc911\uce58 \\(w_{j,i}\\) \ub97c \uac16\ub294\ub370, \uc5f0\uacb0\uc131\uc758 \uac15\ub3c4(Strength) \ubc0f \ubd80\ud638(Sign)\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd \uad6c\uc870 \uac01 \ub178\ub4dc \\(i\\) \ub294 \uba3c\uc800 \uc785\ub825\uc2e0\ud638\uc758 \uac00\uc911\uce58\ud569(Weighted Sum)\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4: \\[\\mathbf{Input} = \\sum_{j}^{n} w_{j,i}a_{j}\\] \uc774\uc81c \ucd9c\ub825\uc744 \uc5bb\uc73c\ub824\uba74 \ud65c\uc131 \ud568\uc218(Activation Function) \\(\\mathscr{F}\\) \ub97c \uc801\uc6a9\ud569\ub2c8\ub2e4: \\[a_{i}=\\mathscr{F}(\\mathbf{Input}_{i})=\\mathscr{F}\\begin{pmatrix}\\sum_{j=1}^{n}{W_{j,i}a_{j}}\\end{pmatrix}\\] \ud2b9\ud788 \\(w_{0,i}\\) \ub97c \uace0\uc815 \uc785\ub825 \\(a_{0} = -1\\) \uc5d0 \uc5f0\uacb0\ub41c \ud3b8\ud5a5 \uac00\uc911\uce58\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub7f0 \ubc29\uc2dd\uc73c\ub85c \uc778\uacf5\uc2e0\uacbd\ub9dd\uc740 \ubcf5\uc7a1\ud55c \ubaa8\ub378\uc744 \uc138\uc6b0\uae30 \uc704\ud55c \uad6c\uc131\uc694\uc18c\ub85c \ub274\ub7f0\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc218\ub9ce\uc740 \uc778\uacf5\uc2e0\uacbd\ub9dd \uc54c\uace0\ub9ac\uc998\uc774 \uc874\uc7ac\ud558\uc9c0\ub9cc, \uc774\ub4e4\uc740 \uacf5\ub3d9\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ud2b9\uc9d5\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4: \ud65c\uc131 \ud568\uc218(Activation Function) : \ub274\ub7f0\uc5d0 \uc5f0\uacb0\ub41c \uc785\ub825\uc2e0\ud638\ub4e4\uc744 \ub2e8\uc77c \ucd9c\ub825\uc2e0\ud638\ub85c \ubcc0\ud658\ud558\uc5ec \uc774\uc6c3 \ub274\ub7f0\uc73c\ub85c \uc804\ud30c\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0(Network Topology) : \ubaa8\ub378\uc758 \ub274\ub7f0\uacfc \uacc4\uce35(Layer)\uc774 \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 \uad6c\uc870\uc785\ub2c8\ub2e4. \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998(Training Algorithm) : \uc785\ub825\uc2e0\ud638\uc5d0 \ub300\uc751\ud558\uc5ec \ub274\ub7f0\uc744 \uc5b5\uc81c\ud558\uac70\ub098 \uc5ec\uae30\uc2dc\ud0a4\uae30 \uc704\ud55c \uc5f0\uacb0 \uac00\uc911\uce58\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.","title":"\uc778\uacf5\uc2e0\uacbd\ub9dd  \ubaa8\ub378"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#activation-function","text":"\ud65c\uc131 \ud568\uc218\ub294 \uc778\uacf5 \ub274\ub7f0\uc774 \uc720\uc785\ub418\ub294 \uc815\ubcf4\ub97c \ucc98\ub9ac\ud558\uace0 \uad6c\uc131\ub41c \ub124\ud2b8\uc6cc\ud06c\ub85c \uc804\ub2ec\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc785\ub2c8\ub2e4. \uc778\uacf5\uc2e0\uacbd\ub9dd\uc774 \uc0dd\ubb3c\ud559\uc801 \uc2e0\uacbd\ub9dd\uc744 \ubaa8\uc0ac\ud558\ub4ef \ud65c\uc131\ud568\uc218 \ub610\ud55c \uc0dd\ubb3c\ud559\uc801\uc778 \ud2b9\uc9d5\uc744 \ubc18\uc601\ud558\ub294 \ubaa8\ub378\uc744 \ucc44\uc6a9\ud569\ub2c8\ub2e4. \uc0dd\ubb3c\ud559\uc801\uc778 \uce21\uba74\uc73c\ub85c \ubcfc \ub54c, \ud65c\uc131\ud568\uc218\ub294 \uc785\ub825\uc2e0\ud638\ub97c \uac00\uc911\uce58\ud569\uc744 \uacc4\uc0b0\ud558\uc5ec \uc774 \uac12\uc774 \uc815\ud574\uc9c4 \uc784\uacc4\uce58\ub97c \ub118\ub294\uc9c0 \uacb0\uc815\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc784\uacc4\uce58\ub97c \ub118\uc9c0 \ubabb\ud560 \uacbd\uc6b0 \uc544\ubb34 \uc77c\ub3c4 \ud558\uc9c0 \uc54a\ub294\ub370, \uc774\ub97c \uc784\uacc4 \ud65c\uc131 \ud568\uc218(Threshold Activation Function) (\uc544\ub798 \uadf8\ub9bc (a))\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud65c\uc131\ud654 \ud568\uc218 \uc608\uc2dc \ub2e8\uc704 \uc2a4\ud15d \ud65c\uc131 \ud568\uc218(\ub610\ub294 \uc784\uacc4 \ud65c\uc131 \ud568\uc218)\ub294 \uc0dd\ubb3c\ud559\uc758 \ub3d9\uc791\uc6d0\ub9ac\uc5d0 \ubd80\ud569\ub418\uae30\ub294 \ud558\uc9c0\ub9cc \uc218\ud559\uc801 \ud2b9\uc131\uc774 \ubc14\ub78c\uc9c1\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc5d0\uc11c \uac70\uc758 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ub110\ub9ac \uc0ac\uc6a9\ub418\ub294 \ud568\uc218\ub294 Sigmoid \ud65c\uc131 \ud568\uc218(\ub610\ub294 Logistic Sigmoid\ub77c\uace0\ub3c4 \ud568)(\uc704\uc758 \uadf8\ub9bc (b))\uc785\ub2c8\ub2e4(\uc0ac\uc2e4, Sigmoid \ud568\uc218\ub3c4 Saturation \ubc0f Non-zero Centered \ud2b9\uc131\uc73c\ub85c \uc778\ud574 \uc2e4\ubb34\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \ubc14\ub78c\uc9c1\ud558\uc9c0 \uc54a\uc73c\uba70, \ucd5c\uadfc Rectifier Linear Unit;ReLU\uc774 \uc2e4\ubb34\uc5d0\uc11c \uac00\uc7a5 \ub110\ub9ac \uc0ac\uc6a9\ub429\ub2c8\ub2e4). \ucd9c\ub825\uc2e0\ud638\uc758 \ubc94\uc704\ub294 \ubaa8\ub450 [0, +1]\uc774\uc9c0\ub9cc Sigmoid \ud568\uc218\ub294 \uc785\ub825\uc2e0\ud638 \ubc94\uc704 \uc804\uccb4\uc5d0\uc11c \ubbf8\ubd84\uac00\ub2a5\ud569\ub2c8\ub2e4. Sigmoid \ud65c\uc131\ud568\uc218\uc758 \ubbf8\ubd84\uac00\ub2a5 \ud2b9\uc131 \ub355\ubd84\uc5d0 ANN \ucd5c\uc801\ud654 \uc54c\uace0\ub9ac\uc998\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud65c\uc131 \ud568\uc218(Activation Function)"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#network-topology","text":"\ud1a0\ud3f4\ub85c\uc9c0(Topology)\ub294 \uc6b0\ub9ac\ub9d0\ub85c \uc704\uc0c1\uae30\ud558\ud559\uc774\ub77c\uace0 \ud558\uba70, \uc624\ube0c\uc81d\ud2b8\uc758 \uc5f0\uacb0\uc131(Connectivity)\uc640 \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. ANN\uc5d0\uc11c\uc758 \ud1a0\ud3f4\ub85c\uc9c0\ub294 \ub274\ub7f0 \uac04\uc758 \uc5f0\uacb0\uad6c\uc870(\ub610\ub294 \ud328\ud134)\ub97c \uc758\ubbf8\ud558\uba70, \uc774 \uc5f0\uacb0\uad6c\uc870\uac00 ANN\uc758 \ud559\uc2b5\ub2a5\ub825\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. \ud1a0\ud3f4\ub85c\uc9c0\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ubd84\ub958\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \ub808\uc774\uc5b4\uc758 \uac1c\uc218 \ub124\ud2b8\uc6cc\ud06c \ub0b4\uc758 \uc815\ubcf4\uc758 \uc5ed\ubc29\ud5a5 \uc774\ub3d9 \uac00\ub2a5\uc131 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ub808\uc774\uc5b4\uc758 \ub178\ub4dc \uac1c\uc218 \ud1a0\ud3f4\ub85c\uc9c0\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ud559\uc2b5 \uac00\ub2a5\ud55c \ud0dc\uc2a4\ud06c\uc758 \ubcf5\uc7a1\uc131\uc744 \uacb0\uc815\ud558\uba70, \uc77c\ubc18\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c\uac00 \ubcf5\uc7a1\ud574\uc9c0\uace0 \uaddc\ubaa8\uac00 \ucee4\uc9c8\uc218\ub85d \ub2e4\uc591\ud55c \ud328\ud134\uacfc \ubcf5\uc7a1\ud55c \uacb0\uc815 \uacbd\uacc4\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c\uc758 \uc131\ub2a5\uc740 \uadf8 \ud06c\uae30\ubfd0\ub9cc \uc544\ub2c8\ub77c \ub178\ub4dc\ub4e4\uc774 \uc5b4\ub5bb\uac8c \ubc30\uce58\ub418\uc5b4 \uc788\ub294\uac00\uc5d0 \uc758\ud574\uc11c\ub3c4 \uacb0\uc815\ub429\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0(Network Topology)"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#layer","text":"ANN\uc758 \ucc98\ub9ac \ub2a5\ub825\uc740 \uace7 \ub808\uc774\uc5b4\uc758 \uac1c\uc218\uc640 \ubc00\uc811\ud55c \uad00\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub808\uc774\uc5b4\ub294 \uc785\ub825\ub178\ub4dc\uc640 \ucd9c\ub825\ub178\ub4dc\uc758 \uc9d1\ud569\uccb4\uc774\uba70, \uc785\ub825\ub178\ub4dc\ub294 \uc785\ub825 \ub370\uc774\ud130\ub85c\ubd80\ud130 \uc2e0\ud638\ub97c \ubc1b\ub294 \ub274\ub7f0\uc744 \uc77c\uceeb\uc2b5\ub2c8\ub2e4. \uac01 \uc785\ub825\ub178\ub4dc\ub294 \ud65c\uc131\ud568\uc218\ub97c \ud1b5\ud574 \uc785\ub825\uc2e0\ud638\ub97c \ubcc0\ud658\ud558\uba70 \uc774\ub97c \ucd9c\ub825\ub178\ub4dc\ub85c \uc804\ub2ec\ud55c\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc740 2\uac1c\uc758 \uc785\ub825\ub370\uc774\ud130\uc640 2\uac1c\uc758 \uc785\ub825 \ub178\ub4dc\ub85c \uad6c\uc131\ub41c 1\uac1c\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4(Hidden Layer)\ub85c \uad6c\uc131\ub41c \uac04\ub2e8\ud55c ANN \ubaa8\ub378\uc774\uba70, \ub808\uc774\uc5b4\uac00 1\uac1c \uc874\uc7ac\ud558\ubbc0\ub85c \ub2e8\uc77c \ub808\uc774\uc5b4 \ub124\ud2b8\uc6cc\ud06c(Single-Layer Network)\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774 \ubaa8\ub378\uc740 \ub108\ubb34 \ub2e8\uc21c\ud558\ubbc0\ub85c \uc120\ud615\uc73c\ub85c \ubd84\ub958\uac00\ub2a5\ud55c(Linearly Separable) \ud328\ud134\uc5d0 \ub300\ud55c \ubb38\uc81c\uc5d0\ub9cc \uc801\uc6a9\uc774 \uac00\ub2a5\ud558\uba70, \ubcf4\ub2e4 \uc815\uad50\ud55c \ubb38\uc81c\ub97c \ud480\uae30 \uc704\ud574\uc11c\ub294 \uc880 \ub354 \ubcf5\uc7a1\ud55c \ubaa8\ub378\uc774 \uc694\uad6c\ub429\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uacfc \uac19\uc774 1\uac1c \uc774\uc0c1\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4\uac00 \ucd94\uac00\ub41c \ub124\ud2b8\uc6cc\ud06c\ub97c \ub2e4\uc911 \ub808\uc774\uc5b4 \ub124\ud2b8\uc6cc\ud06c(Multi-Layer Network)\ub77c\uace0 \ud558\uba70, \uc785\ub825\ub178\ub4dc\ub4e4\uc5d0\uc11c \ucd9c\ub825\ub178\ub4dc \uc0ac\uc774\uc5d0 \uc740\ub2c9 \ub178\ub4dc\ub4e4\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4.","title":"\ub808\uc774\uc5b4(Layer)\uc758 \uac1c\uc218"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#_2","text":"\uc55e\uc11c \uc5b8\uae09\ud55c \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc815\ubcf4\ub294 \ud56d\uc0c1 \uc785\ub825\ub178\ub4dc\uc5d0\uc11c \uc2dc\uc791\ud558\uc5ec \ucd9c\ub825\ub178\ub4dc\ub85c \uc885\uacb0\ub418\ub294 \uad6c\uc870\uc600\uc2b5\ub2c8\ub2e4. \uc774\ucc98\ub7fc \uc815\ubcf4\uac00 \ud55c \ubc29\ud5a5\uc73c\ub85c\ub9cc \uc9c4\ud589\ub418\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud53c\ub4dc\ud3ec\uc6cc\ub4dc \ub124\ud2b8\uc6cc\ud06c(Feedforward Network)\ub77c\uace0 \ud558\uba70, \ud2b9\ud788 \uc544\ub798\uc758 \uadf8\ub9bc\uacfc \uac19\uc774 \ub2e4\uc911\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4, \uc989 2\uac1c \uc774\uc0c1\uc758 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \uac16\ub294 \ub124\ud2b8\uc6cc\ud06c \uad6c\uc870\ub97c \ub525 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c(Deep Neural Network; DNN)\ub77c\uace0 \ud558\uba70, \uc774\ub97c \uc774\uc6a9\ud55c Learning(Training)\uc744 \ub525 \ub7ec\ub2dd(Deep Learning)\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ub525 \ub7ec\ub2dd\uc740 \ubc14\ub451\uc5d0\uc11c \uc774\uc138\ub3cc\uc744 4:1\ub85c \ub204\ub978 DeepMind (Google\uc758 \uc790\ud68c\uc0ac)\uc758 \uc54c\ud30c\uace0 (AlphaGo)\uc758 \uadfc\uac04\uc774 \ub418\ub294 \uc54c\uace0\ub9ac\uc998\uc785\ub2c8\ub2e4. \ub2e4\uc911 \ub808\uc774\uc5b4 \ud53c\ub4dc\ud3ec\uc6cc\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub294 \ub2e4\uc911 \ub808\uc774\uc5b4 \ud37c\uc149\ud2b8\ub860(Multi-Layer Perceptron; MLP)\ub77c\uace0\ub3c4 \ubd88\ub9ac\uc6b0\uba70 \uc0ac\uc2e4\uc0c1 ANN \ud1a0\ud3f4\ub85c\uc9c0\uc758 \ud45c\uc900\uc774\ub77c\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ucd9c\ucc98: http://neuralnetworksanddeeplearning.com/chap1.html \ud53c\ub4dc\ud3ec\uc6cc\ub4dc \ub124\ud2b8\uc6cc\ud06c\uc640\ub294 \ub2ec\ub9ac \ub8e8\ud504(Loop)\uc5d0 \uc758\ud574\uc11c \uc815\ubcf4\uac00 \uc591\ubc29\ud5a5\uc73c\ub85c \uc774\ub3d9\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ubc18\ubcf5 \ub124\ud2b8\uc6cc\ud06c(Recurrent Network) \ub610\ub294 \ud53c\ub4dc\ubc31 \ub124\ud2b8\uc6cc\ud06c(Feedback Network)\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud53c\ub4dc\ubc31 \ub124\ud2b8\uc6cc\ud06c\ub294 \uc880 \ub354 \uc0dd\ubb3c\ud559\uc801\uc778 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c\ub97c \ubaa8\uc0ac\ud558\uba70 \ub9e4\uc6b0 \ubcf5\uc7a1\ud55c \ud328\ud134\uc744 \ud559\uc2b5\ud558\ub294\ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc9c0\uc5f0(Delay)\uc744 \ucd94\uac00\ud558\uc5ec \uc8fc\uc2dd\uc2dc\uc7a5\uc758 \uc608\uce21, \ub0a0\uc528 \uc608\uce21 \ub4f1 \ub2e8\uae30 \uae30\uc5b5\uc744 \ud1b5\ud574 \ub124\ud2b8\uc6cc\ud06c\uc758 \uc131\ub2a5\uc744 \ub192\uc77c \uc218 \uc788\uc73c\ubbc0\ub85c, \uc77c\uc815 \uae30\uac04\uc758 \uc77c\ub828\uc758 \uc774\ubca4\ud2b8\ub4e4\uc744 \uc774\ud574\ud560 \uc218 \uc788\ub294 \ub2a5\ub825\uc744 \uc9c0\ub2c8\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub108\ubb34 \ubcf5\uc7a1\ud558\uc5ec \ud604\uc7ac\ub85c\uc11c\ub294 \uc774\ub860\uc0c1\uc5d0 \uba38\ubb34\ub294 \uc218\uc900\uc774\uba70 \uc2e4\uc81c \ubb38\uc81c\uc5d0 \uac70\uc758 \uc801\uc6a9\ub418\uc9c0 \ubabb\ud558\uace0 \uc788\ub294 \uc2e4\uc815\uc785\ub2c8\ub2e4 (\uadf8\ub7fc\uc5d0\ub3c4 \uc774 \ubc29\ubc95\uc740 \uac00\uc7a5 \uc720\ub9dd\ud55c \ubc29\ubc95 \uc911 \ud558\ub098\uc778\ub370, \uc790\uc5f0\uc5b4\ucc98\ub9ac(Natural Language Processing;NLP), \ub85c\ubd07\uc81c\uc5b4, \uc778\uacf5\uc9c0\ub2a5 \uae30\ubc18 \uc791\uace1 \ub4f1 Sequence Data\ub97c \ucc98\ub9ac\ud558\ub294\ub370 \uc720\uc6a9\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4). \uc774\ubbf8\uc9c0 \uc124\uba85: Recurrent Neural Network\uc758 \uc608\uc2dc","title":"\uc815\ubcf4\uc758 \uc774\ub3d9 \ubc29\ud5a5"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#_3","text":"\ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\ub97c \uacb0\uc815\ud558\ub294 \ub610\ub2e4\ub978 \uc694\uc778\uc740 \uac01 \ub808\uc774\uc5b4 \ub0b4\uc5d0 \uc874\uc7ac\ud558\ub294 \ub178\ub4dc\uc758 \uac1c\uc218\uc785\ub2c8\ub2e4. \ub2f9\uc5f0\ud788 \uac01 \ub808\uc774\uc5b4\uc5d0 \ub300\ud55c \ub178\ub4dc\uc758 \uac1c\uc218\uac00 \uc99d\uac00\ud560 \uc218\ub85d \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uc758 \ubcf5\uc7a1\ub3c4\ub294 \uc99d\uac00\ud569\ub2c8\ub2e4. \uc785\ub825\ub178\ub4dc\uc758 \uac1c\uc218\ub294 \uc785\ub825 \ub370\uc774\ud130\uc758 Feature\uc758 \uc218\uc5d0 \uc758\ud574 \ubbf8\ub9ac \uacb0\uc815\ub418\uba70, \ucd9c\ub825\ub178\ub4dc\uc758 \uac1c\uc218 \ub610\ud55c \ubaa8\ub378\uc758 \uacb0\uacfc\uc5d0 \ub530\ub77c \ub610\ub294 \ubaa8\ub378\uc758 \ubd84\ub958 \uc218\uc900\uc5d0 \ub530\ub77c \uacb0\uc815\ub418\uc9c0\ub9cc, \uc740\ub2c9 \ub178\ub4dc\ub4e4\uc758 \uc218\ub294 \uc0ac\uc6a9\uc790\uac00 \uc790\uc720\ub86d\uac8c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc740\ub2c9 \ub808\uc774\uc5b4\uc758 \ub274\ub7f0 \uac1c\uc218\ub97c \uacb0\uc815\ud558\ub294 \uc2e0\ub8b0\ud560\ub9cc\ud55c \uc5b4\ub5a4 \ubc95\uce59\uc774 \uc874\uc7ac\ud558\ub294 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc, \uc801\uc815\ud55c \ub274\ub7f0\uc758 \uac1c\uc218\ub294 \uc785\ub825 \ub178\ub4dc, \ud559\uc2b5 \ub370\uc774\ud130 \ub7c9, \ub178\uc774\uc988 \ub370\uc774\ud130 \ub7c9, \ud559\uc2b5 \uc791\uc5c5\uc758 \ubcf5\uc7a1\ub3c4 \ub4f1\uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ubcf5\uc7a1\ud560\uc218\ub85d \ub354 \ubcf5\uc7a1\ud55c \ubb38\uc81c\uc5d0 \ub300\ud55c \ud559\uc2b5\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub178\ub4dc\uc758 \uac1c\uc218\uac00 \uc801\uc815\uc218\ubcf4\ub2e4 \uacfc\ub3c4\ud558\uac8c \ub9ce\uc744 \uacbd\uc6b0 Overfitting\uc758 \uc704\ud5d8\uc774 \uc788\uc73c\uba70, \uacc4\uc0b0\ub7c9 \ub610\ud55c \ub9ce\uc544\uc9c0\ubbc0\ub85c \ud559\uc2b5\uc18d\ub3c4\uac00 \ub290\ub824\uc9d1\ub2c8\ub2e4. \ucd5c\uc120\uc758 \uc801\uc6a9\uc740 \uc801\uc808\ud55c \uc131\ub2a5\uc744 \ub0b4\ub294 \ucd5c\uc18c\uc758 \ub178\ub4dc\uac1c\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc801\uc740 \uac1c\uc218\uc758 \uc740\ub2c9 \ub178\ub4dc\ub9cc\uc73c\ub85c\ub3c4 \uc5c4\uccad\ub09c \uc591\uc758 \ud559\uc2b5 \ub2a5\ub825\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uac01 \ub808\uc774\uc5b4 \ub0b4 \ub178\ub4dc \uac1c\uc218"},{"location":"posts/deep-learning/2018-11-09-IntroductionToArtificialNeuralNetworksPart1/#_4","text":"\ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0 \uadf8 \uc790\uccb4\ub294 \uac13 \ud0dc\uc5b4\ub09c \uc544\uae30\ucc98\ub7fc \uc544\ubb34 \uac83\ub3c4 \ubc30\uc6b0\uc9c0 \uc54a\uc740 \ube44\uc5b4\uc788\ub294 \uc11d\ud310\uacfc\ub3c4 \uac19\uc2b5\ub2c8\ub2e4. \uc785\ub825\ub418\ub294 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uacfc\uc815\uc744 \ud1b5\ud574 \ub274\ub7f0 \uac04 \uc5f0\uacb0\uc131\uc774 \uac15\ud654\ub418\uac70\ub098 \uc57d\ud654\ub418\uba70, \uadf8 \uacfc\uc815\uc744 \ud1b5\ud574 \ud328\ud134\uc744 \uc778\uc2dd\ud558\ub294 \uc218\uc900\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc5d0 \ub300\ud55c \uac00\uc911\uce58\uac00 \ud615\uc131\ub418\uc5b4 \uac11\ub2c8\ub2e4. \uc774\ub860\uc0c1\uc73c\ub85c\ub294 \uc218\uc2ed\ub144\uc804\uc5d0 \uc815\ub9bd\ub418\uc5c8\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0, \uc5f0\uacb0 \uac00\uc911\uce58\ub97c \uc870\uc808\ud558\ub294 \uc2e0\uacbd\ub9dd \ud559\uc2b5\uc740 \ub9c9\ub300\ud55c \ucef4\ud4e8\ud130 \uc5f0\uc0b0\ub7c9\uc73c\ub85c \uc778\ud574 \ud6a8\uc728\uc801\uc778 \uc54c\uace0\ub9ac\uc998\uc774 \ubc1c\uacac\ub41c 1980\ub144\ub300 \ud6c4\ubc18\uc774 \ub418\uc5b4\uc11c\uc57c \uaca8\uc6b0 \uc2e4\uc9c8\uc801\uc778 (\uac04\ub2e8\ud55c) \ubb38\uc81c\ub97c \ud480 \uc218 \uc788\ub294 \uc218\uc900\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8 \uc2e4\ud6a8\uc728\uc801\uc778 \uc54c\uace0\ub9ac\uc998\uc740 \ud604\uc7ac \uc5ed\uc804\ud30c(Backpropagation)\uc774\ub77c\uace0 \uc54c\ub824\uc9c4 \uc5ed\uc804\ud30c\ub418\ub294 \uc5d0\ub7ec \uc804\ub7b5( Strategy of Back-propagating Errors )\uc785\ub2c8\ub2e4. \ub2e4\ub978 \uae30\uacc4\ud559\uc2b5 \uc54c\uace0\ub9ac\uc998\ub4e4\uc5d0 \ube44\ud574 \uc5ec\uc804\ud788 \ub290\ub9ac\uae30\ub85c \uc545\uba85\uc774 \ub192\uc9c0\ub9cc, \uc601\ud654 \"\uc544\ubc14\ud0c0(Avatar)\"\uac00 \uc2a4\ud14c\ub808\uc624\uc2a4\ucf54\ud53d\uc758 \ubd80\ud765\uc744 \uc774\ub04c\uc5b4\ub0c8\ub4ef \uc5ed\uc804\ud30c \ubc29\ubc95\uc740 ANN\uc5d0 \ub2e4\uc2dc\uae08 \uad00\uc2ec\uc744 \ubaa8\uc73c\ub294 \uc6d0\ub3d9\ub825\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uacb0\uacfc\uc801\uc73c\ub85c \uc774\uc81c\ub294 \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\ub294 \ub2e4\uc911 \ub808\uc774\uc5b4 \ud53c\ub4dc\ud3ec\uc6cc\ub4dc(Multi-Layer Feedforward) \ub124\ud2b8\uc6cc\ud06c\ub294 \ub370\uc774\ud130 \ub9c8\uc774\ub2dd\uc758 \ud544\uc218\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc758 \uac15\uc810\uacfc \uc57d\uc810\uc744 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: \uac15 \uc810 \uc57d \uc810 \ubd84\ub958 \ub610\ub294 \uc608\uce21 \ubb38\uc81c\uc5d0 \uc801\uc6a9 \uac00\ub2a5\ud568. \ucef4\ud4e8\ud130 \uc5f0\uc0b0\ub7c9\uc774 \ub9e4\uc6b0 \ub9ce\uace0 \ud559\uc2b5\uc18d\ub3c4\uac00 \uadf9\ud788 \ub290\ub9bc. \ud2b9\ud788 \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ubcf5\uc7a1\ud55c \uacbd\uc6b0 \ub354\uc6b1 \uc2ec\uac01\ud568. \uac70\uc758 \ubaa8\ub4e0 \uc54c\uace0\ub9ac\uc998\uc774 \ud560 \uc218 \uc788\ub294 \uac83\ubcf4\ub2e4 \ud6e8\uc52c \ub354 \ubcf5\uc7a1\ud55c \ud328\ud134\uc758 \ubaa8\ub378\ub9c1\uc774 \uac00\ub2a5\ud568. \ud559\uc2b5 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uacfc\uc801\uc751(Ovefitting) \uacbd\ud5a5\uc774 \uac15\ud568. \ub418\ub3c4\ub85d \ub370\uc774\ud130\uc758 \uadfc\uc6d0\uc801\uc778 \uad00\uacc4\uc5d0 \ub300\ud55c \uac00\uc815\uc744 \uc801\uac8c \ud568. \ud574\uc11d\uc774 \uac70\uc758 \ubd88\uac00\ub2a5\ud558\uba70 \uac00\ub2a5\ud558\ub2e4\uace0 \ud574\ub3c4 \ub9e4\uc6b0 \uc5b4\ub835\uace0 \ubcf5\uc7a1\ud55c \ube14\ub799\ubc15\uc2a4 \ubaa8\ub378\uc784. \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc758 \uc77c\ubc18\uc801\uc778 \ud615\ud0dc\ub294 \ub9ce\uc740 \ubc18\ubcf5 \uc0ac\uc774\ud074\uc744 \uac16\ub294 \ub450 \uac1c\uc758 \ud504\ub85c\uc138\uc2a4\ub97c \ud3ec\ud568\ud558\uba70, \uac01 \uc0ac\uc774\ud074\uc744 Epoch\ub77c\uace0 \ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c\ub294 \uc5b4\ub5a0\ud55c \uc0ac\uc804 \uc9c0\uc2dd\ub3c4 \uac16\uace0 \uc788\uc9c0 \uc54a\uc73c\ubbc0\ub85c, \ucd08\uae30 \uac00\uc911\uce58\ub294 \ub79c\ub364\uc73c\ub85c \uc124\uc815\ub418\uba70, \uc815\ud574\uc9c4 \uc911\ub2e8 \uc870\uac74\uc744 \ub9cc\uc871\ud560 \ub54c\uae4c\uc9c0 \ud504\ub85c\uc138\uc2a4\ub97c \ud1b5\ud574 \ubc18\ubcf5\ub429\ub2c8\ub2e4. \uac01\uac01\uc758 Epoch\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 Phase\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4: (1) \uc21c\ubc29\ud5a5 Phase : \ub274\ub7f0\uc774 \uc785\ub825 \ub808\uc774\uc5b4\uc5d0\uc11c \ucd9c\ub825 \ub808\uc774\uc5b4 \uc21c\uc73c\ub85c \ud65c\uc131\ub418\uba70 \uadf8\uc5d0 \ub530\ub77c \ub274\ub7f0\uc758 \uac00\uc911\uce58\uc640 \ud65c\uc131 \ud568\uc218\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9 \ub808\uc774\uc5b4\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ucd9c\ub825\uc2e0\ud638\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. (2) \uc5ed\ubc29\ud5a5 Phase : \uc21c\ubc29\ud5a5 Phase\uc5d0\uc11c \uc5bb\uc740 \ub124\ud2b8\uc6cc\ud06c \ucd9c\ub825\uc2e0\ud638\uc640 \ud559\uc2b5 \ub370\uc774\ud130\uc758 \uc2e4\uc81c \ud0c0\uac9f\uac12\uacfc \ube44\uad50\ud569\ub2c8\ub2e4. \uadf8 \ub450 \uac1c\uc758 \uac12 \uc0ac\uc774\uc758 \ucc28\uc774\uac00 \uc5d0\ub7ec\ub97c \uc77c\uc73c\ud0a4\uba74 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc5ed\ubc29\ud5a5\uc73c\ub85c \uc804\ud30c\uc2dc\ucf1c \ub274\ub7f0\ub4e4 \uac04\uc758 \uc5f0\uacb0 \uac00\uc911\uce58\ub97c \uc218\uc815\ud558\uc5ec \ud5a5\ud6c4 \uc5d0\ub7ec\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \uc904\uc5ec\ub098\uac11\ub2c8\ub2e4. \uc774\ub7f0 \uc2dd\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c\ub294 \uc5ed\ubc29\ud5a5\uc73c\ub85c \ubcf4\ub0b8 \uc815\ubcf4\ub97c \uc774\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c\uc758 \uc804\uccb4 \uc5d0\ub7ec\ub97c \uc904\uc5ec\ub098\uac11\ub2c8\ub2e4. \uadf8\ub807\ub2e4\uba74 \uc774\ub54c\ucbe4 \ud558\ub098\uc758 \uc758\ubb38\uc0ac\ud56d\uc774 \ub4ed\ub2c8\ub2e4: \uacfc\uc5f0 \ub274\ub7f0\uc758 \uc785\ub825\uacfc \ucd9c\ub825 \uc0ac\uc774\uc758 \uad00\uacc4\uac00 \uadf8\ub807\uac8c \ubcf5\uc7a1\ud55c\ub300 \ub3c4\ub300\uccb4 \uc5b4\ub5bb\uac8c \uc774 \uc54c\uace0\ub9ac\uc998\uc740 \uac00\uc911\uce58\uc758 \ubcc0\ud654\ub7c9\uc744 \uacb0\uc815\ud558\ub294 \uac83\uc77c\uae4c? \uc774\uc5d0 \ub300\ud55c \ud574\ub2f5\uc740 \uae09\uacbd\uc0ac\ubc95(Steepest Descent Method)\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uae09\uacbd\uc0ac\ubc95\uc740 \uac04\ub2e8\ud788 \uc0b0 \uc704\uc5d0\uc11c \ub208\uc744 \uac00\ub9b0 \ucc44\ub85c \uac00\uc7a5 \ub0ae\uc740 \uacf3\uc744 \ucc3e\uc544\uac08 \ub54c \uc4f0\ub294 \ubc29\ubc95\uacfc\ub3c4 \uac19\uc2b5\ub2c8\ub2e4. \uc0ac\ubc29\uc744 \uc9c0\ud321\uc774\ub85c \ub450\ub4dc\ub824\ubcf4\uace0 \uac00\uc7a5 \uacbd\uc0ac\uac00 \uc544\ub798 \ubc29\ud5a5\uc73c\ub85c \uc2ec\ud55c \uacf3\uc73c\ub85c \ud604\uc7ac \uc704\uce58\ud55c \uc9c0\uc810\uc5d0\uc11c \ud55c \ubc1c\uc790\uad6d\uac00\uace0 \uadf8 \uc704\uce58\uc5d0\uc11c \ub2e4\uc2dc \uac00\uc7a5 \uacbd\uc0ac\uac00 \uc544\ub798\ub85c \uc2ec\ud55c \ubc29\ud5a5\uc744 \ucc3e\uace0 \uadf8 \ubc29\ud5a5\uc73c\ub85c \ud55c \ubc1c\uc790\uad6d\uc529 \uc774\ub3d9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c, \uae09\uacbd\uc0ac\ubc95\uc740 \ubc29\ud5a5\ud0d0\uc0c9(Direction Search)\uacfc \uc2a4\ud15d\ud06c\uae30 \uacb0\uc815(Step Size Determination)\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ucd9c\ucc98: http://aria42.com/blog/2014/12/understanding-lbfgs \uc704\uc758 \uc774\ubbf8\uc9c0\ub97c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc0b0\uc758 \ub192\uc774\ub97c \ub4f1\uace0\uc120\uc73c\ub85c \ud45c\ud604\ud558\uc600\uc744 \ub54c \uac01 \ub4f1\uace0\uc120\uc5d0 \uc218\uc9c1\ud55c \ubc29\ud5a5(\ube68\uac04 \ud654\uc0b4\ud45c)\uc774 \uae09\uac15\ud558\ubc29\ud5a5\uc785\ub2c8\ub2e4 (\ub0b4\ubd80 \ub3d9\uc2ec\uc6d0\uc774 \uac00\uc7a5 \ub0ae\uc740 \ub4f1\uace0\uc120\uc774\ub77c \uac00\uc815). \ucc38\uace0\ub85c, \ub0b4\ubd80 \ub3d9\uc2ec\uc6d0\uc774 \uac00\uc7a5 \ub4f1\uace0\uc120 \ub192\uc774\uac00 \ud06c\ub2e4\uace0 \uac00\uc815\ud558\uba74 \ube68\uac04 \ud654\uc0b4\ud45c\ub294 \uae09\uc0c1\uc2b9(Steepest Ascent)\ubc29\ud5a5\uc774 \ub418\uba70, \uae09\uac15\ud558\uc640 \uae09\uc0c1\uc2b9\uc740 \ub2e8\uc9c0 \ubd80\ud638\uac00 \ubc14\ub010\ub2e4\ub294 \uac83\ubfd0\uc785\ub2c8\ub2e4. \uc0c1\uae30 \uc774\ubbf8\uc9c0\uc758 \ud30c\ub780 \ub4f1\uace0\uc120\uc5d0 \ud45c\uba74\ud568\uc218(Surface Function)\uc774 \\(z = f(x,y)\\) \ub85c \uc8fc\uc5b4\uc84c\ub2e4\uba74 \ud2b9\uc815 \uc704\uce58 \\((x*, y*)\\) \uc5d0\uc11c\uc758 \uae09\uac15\ud558\ubc29\ud5a5\uc740 \ub2e4\uc74c\uc758 \ubca1\ud130(Vector)\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4: \\(-\\nabla f(x^{*},y^{*})=-\\begin{bmatrix}\\partial f(x^{*},y^{*})/\\partial x \\\\ \\partial f(x^{*},y^{*})/\\partial y\\end{bmatrix}\\) \uc774\uc640 \uc720\uc0ac\ud558\uac8c \uc5ed\uc804\ud30c \uc54c\uace0\ub9ac\uc998\uc740 \uac01 \ub274\ub7f0\uc758 \ud65c\uc131\ud568\uc218\uc758 \ubbf8\ubd84\uac12\uc744 \uc774\uc6a9\ud558\uc5ec \uac01\uac01\uc758 \uc720\uc785 \uac00\uc911\uce58\uc758 \ubc29\ud5a5\uc73c\ub85c \uacbd\uc0ac\ub3c4\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4. \uc774 \ub54c\ubb38\uc5d0 \ud65c\uc131\ud568\uc218\uc758 \ubbf8\ubd84\uac00\ub2a5\uc131\uc774 \uc911\uc694\ud55c \uc758\ubbf8\ub97c \uc9c0\ub2d9\ub2c8\ub2e4. \uc774 \uacbd\uc0ac\ub3c4\ub294 \uac00\uc911\uce58\uc758 \ubcc0\ud654\uc5d0 \ub300\ud558\uc5ec \uc5d0\ub7ec\uc758 \uc99d\uac10\uc774 \uc5bc\ub9c8\ub098 \uae09\uc18d\ud558\uac8c \ubcc0\ud654\ub418\ub294\uc9c0\ub97c \ud310\ub2e8\ud560 \uc218 \uc788\ub294 \uae30\uc900\uc744 \uc81c\uc2dc\ud569\ub2c8\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \ud559\uc2b5\ub960(Learning Rate)\ub77c\uace0 \ud558\ub294 \uc591\uc5d0 \uc758\ud574 \uc5d0\ub7ec\uac00 \uae09\uc18d\ub3c4\ub85c \uc791\uc544\uc9c0\ub294 \ubc29\ud5a5\uc73c\ub85c \uac00\uc911\uce58\ub97c \ubcc0\ud654\uc2dc\ud0b5\ub2c8\ub2e4. \ud559\uc2b5\ub960\uc774 \ucee4\uc9c8 \uc218\ub85d \ucd08\uae30\uc5d0\ub294 \ube60\ub974\uac8c \uc5d0\ub7ec\ub97c \uc904\uc774\ub098 \ud574(Solution) \uadfc\ucc98\uc5d0\uc11c\ub294 \uc624\ubc84\uc288\ud305(Overshooting)\uc73c\ub85c \uc778\ud574 \uc218\ub834 \uc18d\ub3c4\uac00 \ub290\ub824\uc9c0\uac70\ub098 \uc7ac\uc218\uac00 \uc5c6\ub294 \uacbd\uc6b0 \uc601\uc6d0\ud788 \uc218\ub834\ud558\uc9c0 \ubabb\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c, \uae09\uac15\ud558\ubc95\uc740 \uc9c0\uc5ed\ucd5c\uc18c\uac12(Local Minimum)\uc740 \ucc3e\uc744 \uc218 \uc788\uc73c\ub098 \uc804\uc5ed\ucd5c\uc18c\uac12(Global Minimum)\uc744 \ucc3e\uc9c0 \ubabb\ud558\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc774\ub860\uc801\uc778 \uac83\uc744 \ub2e4\ub8ec Part 1.\uc744 \ub9c8\ubb34\ub9ac\ud558\uace0 Part 2.\uc5d0\uc11c\ub294 R\uc758 \uc778\uacf5\uc2e0\uacbd\ub9dd \ud328\ud0a4\uc9c0\uc778 nerualnet \uc744 \uc774\uc6a9\ud558\uc5ec ANN \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \uc2e4\uc9c8\uc801\uc778 \uc608\uc81c\ub97c \ud480\uc5b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uc5ed\uc804\ud30c"},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/","text":"Written by Alex Choi, Feb. 07, 2019. Part 1. \uc5d0 \uc774\uc5b4 \uc774\ubc88 \uae00\uc5d0\uc11c\ub294 R\uc5d0\uc11c \uc778\uacf5\uc2e0\uacbd\ub9dd(Artificial Neural Networks, ANN)\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958(Classification) \ubb38\uc81c\ub97c \ud480\uc5b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ubcf8 \ud3ec\uc2a4\ud305\uc758 \ubaa8\ub4e0 \ucf54\ub4dc\ub294 R \ucf54\ub4dc\uc785\ub2c8\ub2e4. 1. \ub370\uc774\ud130 \ud68d\ub4dd ANN\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ud560 \ud559\uc2b5 \ub370\uc774\ud130\uc640 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ub300\ud45c\uc801\uc778 Machine Learning \uc800\uc7a5\uc18c\uc778 UCI Machine Learning Data Repository \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ud68d\ub4dd\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774 \uc911 \ubabd\ud06c \ubb38\uc81c(Monk's Problem) \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud558\uae30\ub85c \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ubabd\ud06c \ubb38\uc81c\ub294 \ucd5c\ucd08\uc758 \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998 \ube44\uad50\ub97c \uc704\ud55c \uae30\ucd08\ubb38\uc81c\uc785\ub2c8\ub2e4. \uba3c\uc800 \ubabd\ud06c \ubb38\uc81c\uc758 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ub2e4\uc6b4\ubc1b\ub3c4\ub85d \ud569\ub2c8\ub2e4: \ubabd\ud06c \ubb38\uc81c \ud559\uc2b5 \ub370\uc774\ud130 \ub610\ud55c \ubabd\ud06c \ubb38\uc81c\uc758 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \ub2e4\uc6b4\ubc1b\ub3c4\ub85d \ud569\ub2c8\ub2e4: \ubabd\ud06c \ubb38\uc81c \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ub2e4\uc6b4\ubc1b\uc740 \ud30c\uc77c\ub4e4\uc758 \ud655\uc7a5\uc790\ub97c \ubaa8\ub450 .csv\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc704\uc758 \uacfc\uc815\uc774 \ubc88\uac70\ub85c\uc6b8 \uacbd\uc6b0 \ub2e4\uc74c CSV \ud30c\uc77c\uc744 \ub2e4\uc6b4 \ubc1b\uc2b5\ub2c8\ub2e4: monk_train_1.csv monk_test_1.csv 2. \ub370\uc774\ud130 \uad00\ucc30 \ubc0f \uac00\uacf5 \uc774\uc81c \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc624\uace0 \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. > utils::head(monk_train) X X1 X1.1 X1.2 X1.3 X1.4 X3 X1.5 data_5 1 NA 1 1 1 1 1 3 2 data_6 2 NA 1 1 1 1 3 2 1 data_19 3 NA 1 1 1 1 3 3 2 data_22 4 NA 1 1 1 2 1 2 1 data_27 5 NA 1 1 1 2 1 2 2 data_28 6 NA 1 1 1 2 2 3 1 data_37 \uacfc \uac19\uc740\ub370, \uac01 \ud53c\uccd0(Feature)\uc758 \uc774\ub984\uc744 \uc815\ud574\ub193\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\uc5b4 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\uc120 X\uc5f4 \uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4. monk_train$X <- NULL \ub2e4\uc2dc \ub370\uc774\ud130 \uba87 \uac1c\ub97c \uc0b4\ud3b4\ubcf4\uba74, > utils::head(monk_train) X1 X1.1 X1.2 X1.3 X1.4 X3 X1.5 data_5 1 1 1 1 1 1 3 2 data_6 2 1 1 1 1 3 2 1 data_19 3 1 1 1 1 3 3 2 data_22 4 1 1 1 2 1 2 1 data_27 5 1 1 1 2 1 2 2 data_28 6 1 1 1 2 2 3 1 data_37 \uccab\ubc88\uc9f8 \uc5f4\uc774\uc5c8\ub358 X \ud53c\uccd0\uac00 \uc0ad\uc81c\ub418\uc5c8\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ud53c\uccd0\ub4e4\uc758 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. UCI Machine Learning Repository\uc758 \ubabd\ud06c \ubb38\uc81c \uc0ac\uc774\ud2b8\ub97c \uc0b4\ud3b4\ubcf4\uba74, Attribute Information\uc5d0\uc11c \uac01 \ud53c\uccd0\uc758 \uc774\ub984\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4: Attribute Information: 1. class: 0, 1 2. a1: 1, 2, 3 3. a2: 1, 2, 3 4. a3: 1, 2 5. a4: 1, 2, 3 6. a5: 1, 2, 3, 4 7. a6: 1, 2 8. Id: (A unique symbol for each instance) \ucd1d 8\uac1c\uc758 \ud53c\uccd0\uac00 \uc788\uace0 \uc774\ub984\uc740 \uc704\uc640 \uac19\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c, \uc704\uc640 \uac19\uc774 \ud53c\uccd0\uc758 \uc774\ub984\uc744 \ubd80\uc5ec\ud558\uace0, base::names(monk_train) <- c(\"class\",\"a1\",\"a2\",\"a3\",\"a4\",\"a5\",\"a6\",\"id\") \ub2e4\uc2dc \ub370\uc774\ud130\ub97c \uba87 \uac1c \uc0b4\ud3b4\ubcf4\uba74, > utils::head(monk_train) class a1 a2 a3 a4 a5 a6 id 1 1 1 1 1 1 3 2 data_6 2 1 1 1 1 3 2 1 data_19 3 1 1 1 1 3 3 2 data_22 4 1 1 1 2 1 2 1 data_27 5 1 1 1 2 1 2 2 data_28 6 1 1 1 2 2 3 1 data_37 \uc774 \uc911 \uc0ac\uc2e4 id\ub294 \ud544\uc694\uac00 \uc5c6\uc73c\ubbc0\ub85c, \ub2e4\uc2dc \uc774 \ud53c\uccd0\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4: monk_train $ id <- NULL \uc774\uc81c id \ud53c\uccd0\uac00 \uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4: > utils :: head ( monk_train ) class a1 a2 a3 a4 a5 a6 1 1 1 1 1 1 3 2 2 1 1 1 1 3 2 1 3 1 1 1 1 3 3 2 4 1 1 1 2 1 2 1 5 1 1 1 2 1 2 2 6 1 1 1 2 2 3 1 \uc774\uc81c \uc804\uccb4\uc801\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uba74, > utils::str(monk_train) 'data.frame': 123 obs. of 7 variables: $ class: int 1 1 1 1 1 1 1 1 1 0 ... $ a1 : int 1 1 1 1 1 1 1 1 1 1 ... $ a2 : int 1 1 1 1 1 1 1 1 2 2 ... $ a3 : int 1 1 1 2 2 2 2 2 1 1 ... $ a4 : int 1 3 3 1 1 2 2 3 1 1 ... $ a5 : int 3 2 3 2 2 3 4 1 1 2 ... $ a6 : int 2 1 2 1 2 1 1 2 2 1 ... monk_train \uc740 7\uac1c\uc758 \ud53c\uccd0\ub97c \uac16\ub294 \ucd1d 123\uac1c\uc758 \ub370\uc774\ud130\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud559\uc2b5 \ub370\uc774\ud130\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ub610\ud55c \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uac00\uacf5\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4: monk_test <- utils :: read.csv ( file = \"monk_test_1.csv\" , sep = \" \" ) monk_test $ X <- NULL base :: names ( monk_test ) <- c ( \"class\" , \"a1\" , \"a2\" , \"a3\" , \"a4\" , \"a5\" , \"a6\" , \"id\" ) monk_test $ id <- NULL utils :: str ( monk_test ) \ud53c\uccd0\ub9c8\ub2e4 \uac12\uc758 \ubc94\uc704\uac00 \uc81c\uac01\uac01\uc774\uae30 \ub54c\ubb38\uc5d0 \uc774\ub97c \uc815\uaddc\ud654(Normalization)\ud560 \ud544\uc694\uac00 \uc788\uc73c\ubbc0\ub85c, \uc815\uaddc\ud654 \ud568\uc218\ub97c \uc815\uc758\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc815\uaddc\ud654 \ud568\uc218\ub294 \ubca1\ud130\uc758 \uac12\uc5d0\uc11c \ud574\ub2f9 \ubca1\ud130\uc758 \ucd5c\uc18c\uac12\uc744 \ube80 \uac12\uc744 \ucd5c\ub300\uac12\uacfc \ucd5c\uc18c\uac12\uacfc\uc758 \ucc28\uc774\ub85c \ub098\ub208 \uac83\uc785\ub2c8\ub2e4: normalize <- function ( x ) { return (( x - min ( x )) / ( max ( x ) - min ( x ))) } \ub530\ub77c\uc11c, \uc704\uc758 \ud568\uc218\ub97c \uc774\uc6a9\ud558\uba74, \uc785\ub825\ub41c \uac12\uc5d0 [0,1] \uc758 \ubc94\uc704\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. lapply \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec monk_train \uc758 \uac01 \uc5f4\uc5d0 normalize() \ud568\uc218\ub97c \uc801\uc6a9\ud558\uace0, \uc774\ub97c Data Frame\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4: monk_train_norm <- base :: as.data.frame ( base :: lapply ( monk_train , normalize )) \uadf8\ub7ec\ub098, class \ud53c\uccd0\ub294 \uc815\uaddc\ud654 \ub418\uc9c0 \uc54a\uae30\ub97c \uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774 \ud53c\uccd0\uc5d0 \ub300\ud574\uc11c\ub294 \ub2e4\uc2dc \uc6d0\ub798 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4: (\uc0ac\uc2e4 class \ud53c\uccd0\uac12\ub4e4\uc740 0 \uc544\ub2c8\uba74 1\uc774\ubbc0\ub85c \uad73\uc774 \ub370\uc774\ud130\ub97c \ub418\ub3cc\ub9b4 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc, \ubabd\ud06c \ubb38\uc81c\uac00 \uc544\ub2cc \ub2e4\ub978 \ub370\uc774\ud130\uc778 \uacbd\uc6b0\uc5d0\ub294 \uc774 \uacfc\uc815\uc774 \ubc18\ub4dc\uc2dc \ud544\uc694\ud569\ub2c8\ub2e4.) monk_train_norm $ class <- monk_train $ class \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub3d9\uc77c\ud55c \uacfc\uc815\uc744 \uc218\ud589\ud569\ub2c8\ub2e4: monk_test_norm <- base :: as.data.frame ( base :: lapply ( monk_test , normalize )) monk_test_norm $ class <- monk_test $ class 3. nuralnet \ud328\ud0a4\uc9c0 \uc124\uce58 \uc774\uc81c R\uc758 \uc778\uacf5\uc2e0\uacbd\ub9dd \ud328\ud0a4\uc9c0 \uc911 \ud558\ub098\uc778 neuralnet \uc744 \ub2e4\uc6b4 \ubc1b\uc2b5\ub2c8\ub2e4: > install.packages ( \"neuralnet\" ) \uadf8\ub9ac\uace0 \uc774 \ud328\ud0a4\uc9c0\ub97c \ub85c\ub529\ud569\ub2c8\ub2e4: base::library(neuralnet) 4. ANN \ubaa8\ub378 \ubc0f \uac00\uc2dc\ud654 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 1\uac1c\ub9cc \uac16\ub294 \uac04\ub2e8\ud55c ANN \ubaa8\ub378\uc744 \uc138\uc6c1\ub2c8\ub2e4: monk_model <- neuralnet :: neuralnet ( formula = class ~ a1 + a2 + a3 + a4 + a5 + a6 , data = monk_train , hidden = 1 ) \uc774\uc81c \uc138\uc6cc\uc9c4 ANN \ubaa8\ub378\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\ub97c \uac00\uc2dc\ud654\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. > graphics :: plot ( monk_model ) \ubaa8\ub378 \uc544\ud0a4\ud14d\uccd0 \uad6c\uc131\ub41c \ub178\ub4dc \ubc0f \ub808\uc774\uc5b4\uc640 \ub178\ub4dc \uac00\uc911\uce58\ub97c \ud55c \ub208\uc5d0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\uae30 \uc774\ubbf8\uc9c0\uc758 \ud30c\ub780\uc0c9 \ub178\ub4dc\ub294 \ud3b8\ud5a5(Bias)\uac12\uc744 \ub098\ud0c0\ub0b4\uba70, \uc774 \uac12\uc740 \ub178\ub4dc\uc758 \uac12\uc774 \uc774\ub3d9\ud558\ub3c4\ub85d \ud558\ub294 \uc0c1\uc218\uac12\uc778\ub370, \ub9c8\uce58 \uc120\ud615 \ud68c\uadc0\ubaa8\ub378\uc5d0\uc11c \uc88c\ud45c Intercept\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uc5d0\ub7ec\uac12\uc774 \uc0c1\ub2f9\ud788 \ub192\uc73c\ubbc0\ub85c \uc774 \ubaa8\ub378\ub85c \uc608\uce21\ud560 \uacbd\uc6b0 \uc0c1\ub2f9\ud788 \uc548 \uc88b\uc740 \uacb0\uacfc\ub97c \uc5bb\uac8c \ub420 \uac83\uc774\ub77c\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. 5. ANN \ubaa8\ub378\uc744 \uc774\uc6a9\ud55c \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc608\uce21 \uc138\uc6cc\uc9c4 \ubaa8\ub378\uc744 \uc774\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc758 \ubaa8\ub378 \uacb0\uacfc\ub97c \uc5bb\uc5b4\ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. model_results <- neuralnet :: compute ( monk_model , monk_test [ 2 : 7 ]) \uc704\uc758 \ucf54\ub4dc\uc758 \uc758\ubbf8\ub294 monk_model \uc744 \uc774\uc6a9\ud558\uc5ec monk_test[2:7] \uc5d0 \ub300\ud55c \uc608\uce21 \ubaa8\ub378 \uacb0\uacfc\ub97c \uc5bb\ub294 \uac83\uc785\ub2c8\ub2e4. monk_test[2:7] \ub294 monk_test[1] \uc778 Class \ud53c\uccd0\uc5d0 \ub300\ud55c \ubaa8\ub378 \uacb0\uacfc\ub97c \uc5bb\uae30 \uc704\ud558\uc5ec \ub098\uba38\uc9c0 \ud53c\uccd0\uc778 a1~a6\ub97c \uc774\uc6a9\ud55c\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4. model_results \uac00 \uac00\uc9c0\uace0 \uc788\ub294 \ub370\uc774\ud130 \uc774\ub984\ub97c \uc0b4\ud3b4\ubcf4\uba74, > names ( model_results ) [ 1 ] \"neurons\" \"net.result\" \uc778\ub370, neurons \ub294 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ub808\uc774\uc5b4\uc758 \ub274\ub7f0 \ucd9c\ub825\uac12\ub4e4\uc774\uba70, net.result \ub294 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c\uc758 \uc804\uccb4 \uacb0\uacfc\ub97c \ud589\ub82c \ud615\ud0dc\ub85c \uc800\uc7a5\ud55c \uac12(\ud604\uc7ac \uc6b0\ub9ac\uac00 \ud480\uace0 \uc788\ub294 \ubb38\uc81c\uc5d0\uc11c\ub294 \ubca1\ud130)\uc785\ub2c8\ub2e4. net.result \uc774 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \ubd84\ub958 \uacb0\uacfc\uc785\ub2c8\ub2e4. \uc774 \uac12\uc744 \uc608\uce21 \uacb0\uacfc\uac12\uc774\ub77c\ub294 \ub2e4\ub978 \ubcc0\uc218\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. predicted_monk <- model_results $ net.result \uac12\uc744 \uba87 \uac1c \uc0b4\ud3b4\ubcf4\uba74, > head ( predicted_monk ) [, 1 ] [ 1 ,] 1.0102054821 [ 2 ,] 0.3010884442 [ 3 ,] 0.3014953569 [ 4 ,] 0.3010585095 [ 5 ,] 0.3010585096 [ 6 ,] 0.3010585095 \uccab\ubc88\uc9f8 \uac12\uc744 \ubcfc \uc218 \uc788\ub4ef\uc774 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0\uc11c class\uc758 \uac12\uc740 0\uacfc 1\uc0ac\uc774\uc600\ub294\ub370 1\uc744 \uc0b4\uc9dd \ub118\ub294 \uac12\ub3c4 \ubcf4\uc785\ub2c8\ub2e4. \uc989, \uacc4\uc0b0\uc774 \ucda9\ubd84\ud788 \uc815\ud655\ud558\uc9c0 \uc54a\uc74c\uc744 \ub2e4\uc2dc \ud55c \ubc88 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc2e4\uc81c \ub370\uc774\ud130\uc758 class\uc640 ANN\uc744 \ud1b5\ud574 \uc608\uce21\ub41c \uac12\uc758 \uc624\ucc28\ub97c \ud655\uc778\ud574 \ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub97c \ud655\uc778\ud558\ub824\uba74 \ub450 \uac12 \uc0ac\uc774\uc758 \uc758\uc874\uc131\uc744 \ubd84\uc11d\ud558\uba74 \ub418\ub294\ub370, \uc774\uac83\uc744 \uc0c1\uad00\uad00\uacc4(Correlation) \ubd84\uc11d\uc774\ub77c\uace0 \ud558\uba70 \ub300\ud45c\uc801\uc778 \uac83\uc73c\ub85c \ud53c\uc5b4\uc2a8(Pearson), \ucf04\ub2ec(Kendall), \uc2a4\ud53c\uc5b4\ub9cc(Spearman) \uc0c1\uad00\uacc4\uc218 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc640 ANN\uc744 \ud1b5\ud574 \uc608\uce21\ub41c \ub370\uc774\ud130\uc640\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uacc4\uc0b0\ud574 \ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4: > stats :: cor ( predicted_monk , monk_test $ class ) [, 1 ] [ 1 ,] 0.5479135178 \uc0c1\uad00\uad00\uacc4 \uacb0\uacfc\uac12\uc740 [-1,1] \ubc94\uc704\ub97c \uac16\ub294\ub370, -1\uc740 \uc74c\uc758 \uc644\uc804\uc0c1\uad00\uad00\uacc4, 0\uc740 \uc0c1\uad00\uad00\uacc4\uac00 \ud558\ub098\ub3c4 \uc5c6\ub294 \uac83\uc774\uba70, 1\uc740 \uc591\uc758 \uc644\uc804\uc0c1\uad00\uad00\uacc4\uc785\ub2c8\ub2e4. \uac12\uc774 0.5 \uadfc\ucc98\ub85c \ub450 \uac12 \uc0ac\uc774\uc5d0 \uc0c1\uad00\uad00\uacc4\ub294 \uc788\uae34 \ud558\uc9c0\ub9cc \ud06c\uc9c0 \uc54a\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc989, \uacc4\uc0b0 \uacb0\uacfc\uac00 \uadf8\ub9ac \ub9cc\uc871\uc2a4\ub7fd\uc9c0 \ubabb\ud558\uba70, \uc2e4\uc81c \uc5d0\ub7ec\ub3c4 \ucef8\uc74c\uc744 \uc54c \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. 6. ANN \ubaa8\ub378 \uc131\ub2a5 \uac1c\uc120 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ub2e8\uc9c0 1\uac1c\ub9cc \uc0ac\uc6a9\ud55c \uacbd\uc6b0, \uacb0\uacfc\uac00 \uc369 \ub9cc\uc871\uc2a4\ub7fd\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ucd94\uac00\ud560 \uc218\ub85d \ud574\uac00 \uc870\uae08\uc529 \uac1c\uc120\ub420 \uac83\uc774\uc9c0\ub9cc \uacc4\uc0b0\ub7c9\uc774 \ub9e4\uc6b0 \ub298\uc5b4\ub0a0 \uac83\uc785\ub2c8\ub2e4. \uacc4\uc18d\ud574\uc11c \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ucd94\uac00\ud558\ub2e4\ubcf4\uba74 \uacb0\uacfc\ub294 \ub354\uc774\uc0c1 \ub208\uc5d0 \ub744\uac8c \uac1c\uc120\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\ub294\ub370 \ud574\uac00 \uc218\ub834\ub418\uc5c8\ub2e4\uace0 \ubcfc \uc218 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ub610\ud55c \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ub108\ubb34 \ub9ce\uc774 \ucd94\uac00\ud558\ub2e4\ubcf4\uba74 \uc624\ud788\ub824 \uacb0\uacfc\uac00 \ub354 \uc548 \uc88b\uc544\uc9c0\ub294 \uacbd\uc6b0\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc5b4\uca0c\ub4e0 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 2\ub85c \uc9c0\uc815\ud574\uc11c \uacb0\uacfc\ub97c \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. set.seed ( 12345 ) monk_model <- neuralnet :: neuralnet ( formula = class ~ a1 + a2 + a3 + a4 + a5 + a6 , data = monk_train , hidden = 2 ) graphics :: plot ( monk_model ) model_results <- neuralnet :: compute ( monk_model , monk_test [ 2 : 7 ]) predicted_monk <- model_results $ net.result \uc774 \ub54c\uc758 \uacb0\uacfc\ub294, > stats :: cor ( predicted_monk , monk_test $ class ) [, 1 ] [ 1 ,] 0.5604624596 \uc774\uba70, \uc740\ub2c9 \ub808\uc774\uc5b4\uac00 1\uac1c\uc778 \uacbd\uc6b0\ubcf4\ub2e4 \uacb0\uacfc\uac00 \uc57d\uac04 \uac1c\uc120 \ub418\uc5c8\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 5\uac1c\uae4c\uc9c0 \ub298\ub9ac\uba74\uc11c \ud14c\uc2a4\ud2b8 \ud574 \ubcf4\uba74, No. of Hidden Layers Error Steps Correlation Coefficient 1 10.858 2523 0.54791 2 6.829 3884 0.50605 3 0.024 4553 0.99862 4 4.2716 8082 0.67534 5 0.018 7760 0.99712 \uc640 \uac19\uc740\ub370, \uc740\ub2c9 \ub808\uc774\uc5b4\uac00 3\uac1c \uc0ac\uc6a9\ub41c \uacbd\uc6b0 \uadf9\uc801\uc73c\ub85c \uacb0\uacfc\uac00 \uc88b\uc544\uc84c\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, 3\uac1c \uc0ac\uc6a9\ub41c \uacbd\uc6b0\uc5d0 \ube44\ud574 4\uac1c \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 \uacc4\uc0b0\ub7c9\uc740 2\uac1c \uac00\uae4c\uc774 \ub9ce\uc544\uc84c\ub294\ub370 \uacb0\uacfc\ub294 \uc624\ud788\ub824 \ub354 \uc548 \uc88b\uc544\uc84c\uc73c\uba70, 5\uac1c \uc0ac\uc6a9\ub41c \uacbd\uc6b0 \uacb0\uacfc\ub294 \ub2e4\uc2dc \uc88b\uc544\uc84c\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \uc774\ubbf8\uc9c0\ub294 \uc2dc\ud5d8\uc0bc\uc544 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 10\uac1c \uc0ac\uc6a9\ud55c \uacbd\uc6b0\uc778\ub370 \ub208\uc774 \ub3cc\uc544\uac08 \uc815\ub3c4\ub85c \ubcf5\uc7a1\ud574 \ubcf4\uc785\ub2c8\ub2e4. UCI Machine Learning Repository\uc758 \ubabd\ud06c \ubb38\uc81c(Monk's Problem) \ub370\uc774\ud130 \uc5d0\uc11c \ub370\uc774\ud130\uc14b 2\uc640 3\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc5f0\uc2b5\uc0bc\uc544 \uc704\uc758 \uacfc\uc815\uc744 \ud14c\uc2a4\ud2b8\ud574 \ubcf4\uae38 \ubc14\ub78d\ub2c8\ub2e4. \uc774\ub85c\uc368 R\uc758 ANN \ud328\ud0a4\uc9c0\uc778 neuralnet\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958 \ubb38\uc81c\ub97c \ud478\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4.","title":"Introduction to Artificial Neural Network Part 2."},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/#1","text":"ANN\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ud560 \ud559\uc2b5 \ub370\uc774\ud130\uc640 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ub300\ud45c\uc801\uc778 Machine Learning \uc800\uc7a5\uc18c\uc778 UCI Machine Learning Data Repository \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ud68d\ub4dd\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774 \uc911 \ubabd\ud06c \ubb38\uc81c(Monk's Problem) \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud558\uae30\ub85c \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ubabd\ud06c \ubb38\uc81c\ub294 \ucd5c\ucd08\uc758 \ud559\uc2b5 \uc54c\uace0\ub9ac\uc998 \ube44\uad50\ub97c \uc704\ud55c \uae30\ucd08\ubb38\uc81c\uc785\ub2c8\ub2e4. \uba3c\uc800 \ubabd\ud06c \ubb38\uc81c\uc758 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ub2e4\uc6b4\ubc1b\ub3c4\ub85d \ud569\ub2c8\ub2e4: \ubabd\ud06c \ubb38\uc81c \ud559\uc2b5 \ub370\uc774\ud130 \ub610\ud55c \ubabd\ud06c \ubb38\uc81c\uc758 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \ub2e4\uc6b4\ubc1b\ub3c4\ub85d \ud569\ub2c8\ub2e4: \ubabd\ud06c \ubb38\uc81c \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ub2e4\uc6b4\ubc1b\uc740 \ud30c\uc77c\ub4e4\uc758 \ud655\uc7a5\uc790\ub97c \ubaa8\ub450 .csv\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \ub9cc\uc57d \uc704\uc758 \uacfc\uc815\uc774 \ubc88\uac70\ub85c\uc6b8 \uacbd\uc6b0 \ub2e4\uc74c CSV \ud30c\uc77c\uc744 \ub2e4\uc6b4 \ubc1b\uc2b5\ub2c8\ub2e4: monk_train_1.csv monk_test_1.csv","title":"1. \ub370\uc774\ud130 \ud68d\ub4dd"},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/#2","text":"\uc774\uc81c \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc624\uace0 \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. > utils::head(monk_train) X X1 X1.1 X1.2 X1.3 X1.4 X3 X1.5 data_5 1 NA 1 1 1 1 1 3 2 data_6 2 NA 1 1 1 1 3 2 1 data_19 3 NA 1 1 1 1 3 3 2 data_22 4 NA 1 1 1 2 1 2 1 data_27 5 NA 1 1 1 2 1 2 2 data_28 6 NA 1 1 1 2 2 3 1 data_37 \uacfc \uac19\uc740\ub370, \uac01 \ud53c\uccd0(Feature)\uc758 \uc774\ub984\uc744 \uc815\ud574\ub193\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\uc5b4 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\uc120 X\uc5f4 \uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4. monk_train$X <- NULL \ub2e4\uc2dc \ub370\uc774\ud130 \uba87 \uac1c\ub97c \uc0b4\ud3b4\ubcf4\uba74, > utils::head(monk_train) X1 X1.1 X1.2 X1.3 X1.4 X3 X1.5 data_5 1 1 1 1 1 1 3 2 data_6 2 1 1 1 1 3 2 1 data_19 3 1 1 1 1 3 3 2 data_22 4 1 1 1 2 1 2 1 data_27 5 1 1 1 2 1 2 2 data_28 6 1 1 1 2 2 3 1 data_37 \uccab\ubc88\uc9f8 \uc5f4\uc774\uc5c8\ub358 X \ud53c\uccd0\uac00 \uc0ad\uc81c\ub418\uc5c8\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \ud53c\uccd0\ub4e4\uc758 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. UCI Machine Learning Repository\uc758 \ubabd\ud06c \ubb38\uc81c \uc0ac\uc774\ud2b8\ub97c \uc0b4\ud3b4\ubcf4\uba74, Attribute Information\uc5d0\uc11c \uac01 \ud53c\uccd0\uc758 \uc774\ub984\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4: Attribute Information: 1. class: 0, 1 2. a1: 1, 2, 3 3. a2: 1, 2, 3 4. a3: 1, 2 5. a4: 1, 2, 3 6. a5: 1, 2, 3, 4 7. a6: 1, 2 8. Id: (A unique symbol for each instance) \ucd1d 8\uac1c\uc758 \ud53c\uccd0\uac00 \uc788\uace0 \uc774\ub984\uc740 \uc704\uc640 \uac19\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c, \uc704\uc640 \uac19\uc774 \ud53c\uccd0\uc758 \uc774\ub984\uc744 \ubd80\uc5ec\ud558\uace0, base::names(monk_train) <- c(\"class\",\"a1\",\"a2\",\"a3\",\"a4\",\"a5\",\"a6\",\"id\") \ub2e4\uc2dc \ub370\uc774\ud130\ub97c \uba87 \uac1c \uc0b4\ud3b4\ubcf4\uba74, > utils::head(monk_train) class a1 a2 a3 a4 a5 a6 id 1 1 1 1 1 1 3 2 data_6 2 1 1 1 1 3 2 1 data_19 3 1 1 1 1 3 3 2 data_22 4 1 1 1 2 1 2 1 data_27 5 1 1 1 2 1 2 2 data_28 6 1 1 1 2 2 3 1 data_37 \uc774 \uc911 \uc0ac\uc2e4 id\ub294 \ud544\uc694\uac00 \uc5c6\uc73c\ubbc0\ub85c, \ub2e4\uc2dc \uc774 \ud53c\uccd0\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4: monk_train $ id <- NULL \uc774\uc81c id \ud53c\uccd0\uac00 \uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4: > utils :: head ( monk_train ) class a1 a2 a3 a4 a5 a6 1 1 1 1 1 1 3 2 2 1 1 1 1 3 2 1 3 1 1 1 1 3 3 2 4 1 1 1 2 1 2 1 5 1 1 1 2 1 2 2 6 1 1 1 2 2 3 1 \uc774\uc81c \uc804\uccb4\uc801\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uba74, > utils::str(monk_train) 'data.frame': 123 obs. of 7 variables: $ class: int 1 1 1 1 1 1 1 1 1 0 ... $ a1 : int 1 1 1 1 1 1 1 1 1 1 ... $ a2 : int 1 1 1 1 1 1 1 1 2 2 ... $ a3 : int 1 1 1 2 2 2 2 2 1 1 ... $ a4 : int 1 3 3 1 1 2 2 3 1 1 ... $ a5 : int 3 2 3 2 2 3 4 1 1 2 ... $ a6 : int 2 1 2 1 2 1 1 2 2 1 ... monk_train \uc740 7\uac1c\uc758 \ud53c\uccd0\ub97c \uac16\ub294 \ucd1d 123\uac1c\uc758 \ub370\uc774\ud130\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud559\uc2b5 \ub370\uc774\ud130\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \ub610\ud55c \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uac00\uacf5\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4: monk_test <- utils :: read.csv ( file = \"monk_test_1.csv\" , sep = \" \" ) monk_test $ X <- NULL base :: names ( monk_test ) <- c ( \"class\" , \"a1\" , \"a2\" , \"a3\" , \"a4\" , \"a5\" , \"a6\" , \"id\" ) monk_test $ id <- NULL utils :: str ( monk_test ) \ud53c\uccd0\ub9c8\ub2e4 \uac12\uc758 \ubc94\uc704\uac00 \uc81c\uac01\uac01\uc774\uae30 \ub54c\ubb38\uc5d0 \uc774\ub97c \uc815\uaddc\ud654(Normalization)\ud560 \ud544\uc694\uac00 \uc788\uc73c\ubbc0\ub85c, \uc815\uaddc\ud654 \ud568\uc218\ub97c \uc815\uc758\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc815\uaddc\ud654 \ud568\uc218\ub294 \ubca1\ud130\uc758 \uac12\uc5d0\uc11c \ud574\ub2f9 \ubca1\ud130\uc758 \ucd5c\uc18c\uac12\uc744 \ube80 \uac12\uc744 \ucd5c\ub300\uac12\uacfc \ucd5c\uc18c\uac12\uacfc\uc758 \ucc28\uc774\ub85c \ub098\ub208 \uac83\uc785\ub2c8\ub2e4: normalize <- function ( x ) { return (( x - min ( x )) / ( max ( x ) - min ( x ))) } \ub530\ub77c\uc11c, \uc704\uc758 \ud568\uc218\ub97c \uc774\uc6a9\ud558\uba74, \uc785\ub825\ub41c \uac12\uc5d0 [0,1] \uc758 \ubc94\uc704\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. lapply \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec monk_train \uc758 \uac01 \uc5f4\uc5d0 normalize() \ud568\uc218\ub97c \uc801\uc6a9\ud558\uace0, \uc774\ub97c Data Frame\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4: monk_train_norm <- base :: as.data.frame ( base :: lapply ( monk_train , normalize )) \uadf8\ub7ec\ub098, class \ud53c\uccd0\ub294 \uc815\uaddc\ud654 \ub418\uc9c0 \uc54a\uae30\ub97c \uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774 \ud53c\uccd0\uc5d0 \ub300\ud574\uc11c\ub294 \ub2e4\uc2dc \uc6d0\ub798 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4: (\uc0ac\uc2e4 class \ud53c\uccd0\uac12\ub4e4\uc740 0 \uc544\ub2c8\uba74 1\uc774\ubbc0\ub85c \uad73\uc774 \ub370\uc774\ud130\ub97c \ub418\ub3cc\ub9b4 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc, \ubabd\ud06c \ubb38\uc81c\uac00 \uc544\ub2cc \ub2e4\ub978 \ub370\uc774\ud130\uc778 \uacbd\uc6b0\uc5d0\ub294 \uc774 \uacfc\uc815\uc774 \ubc18\ub4dc\uc2dc \ud544\uc694\ud569\ub2c8\ub2e4.) monk_train_norm $ class <- monk_train $ class \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0 \ub300\ud574\uc11c\ub3c4 \ub3d9\uc77c\ud55c \uacfc\uc815\uc744 \uc218\ud589\ud569\ub2c8\ub2e4: monk_test_norm <- base :: as.data.frame ( base :: lapply ( monk_test , normalize )) monk_test_norm $ class <- monk_test $ class","title":"2. \ub370\uc774\ud130 \uad00\ucc30 \ubc0f \uac00\uacf5"},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/#3-nuralnet","text":"\uc774\uc81c R\uc758 \uc778\uacf5\uc2e0\uacbd\ub9dd \ud328\ud0a4\uc9c0 \uc911 \ud558\ub098\uc778 neuralnet \uc744 \ub2e4\uc6b4 \ubc1b\uc2b5\ub2c8\ub2e4: > install.packages ( \"neuralnet\" ) \uadf8\ub9ac\uace0 \uc774 \ud328\ud0a4\uc9c0\ub97c \ub85c\ub529\ud569\ub2c8\ub2e4: base::library(neuralnet)","title":"3. nuralnet \ud328\ud0a4\uc9c0 \uc124\uce58"},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/#4-ann","text":"\uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 1\uac1c\ub9cc \uac16\ub294 \uac04\ub2e8\ud55c ANN \ubaa8\ub378\uc744 \uc138\uc6c1\ub2c8\ub2e4: monk_model <- neuralnet :: neuralnet ( formula = class ~ a1 + a2 + a3 + a4 + a5 + a6 , data = monk_train , hidden = 1 ) \uc774\uc81c \uc138\uc6cc\uc9c4 ANN \ubaa8\ub378\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\ub97c \uac00\uc2dc\ud654\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. > graphics :: plot ( monk_model ) \ubaa8\ub378 \uc544\ud0a4\ud14d\uccd0 \uad6c\uc131\ub41c \ub178\ub4dc \ubc0f \ub808\uc774\uc5b4\uc640 \ub178\ub4dc \uac00\uc911\uce58\ub97c \ud55c \ub208\uc5d0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\uae30 \uc774\ubbf8\uc9c0\uc758 \ud30c\ub780\uc0c9 \ub178\ub4dc\ub294 \ud3b8\ud5a5(Bias)\uac12\uc744 \ub098\ud0c0\ub0b4\uba70, \uc774 \uac12\uc740 \ub178\ub4dc\uc758 \uac12\uc774 \uc774\ub3d9\ud558\ub3c4\ub85d \ud558\ub294 \uc0c1\uc218\uac12\uc778\ub370, \ub9c8\uce58 \uc120\ud615 \ud68c\uadc0\ubaa8\ub378\uc5d0\uc11c \uc88c\ud45c Intercept\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uc5d0\ub7ec\uac12\uc774 \uc0c1\ub2f9\ud788 \ub192\uc73c\ubbc0\ub85c \uc774 \ubaa8\ub378\ub85c \uc608\uce21\ud560 \uacbd\uc6b0 \uc0c1\ub2f9\ud788 \uc548 \uc88b\uc740 \uacb0\uacfc\ub97c \uc5bb\uac8c \ub420 \uac83\uc774\ub77c\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"4. ANN \ubaa8\ub378 \ubc0f \uac00\uc2dc\ud654"},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/#5-ann","text":"\uc138\uc6cc\uc9c4 \ubaa8\ub378\uc744 \uc774\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc758 \ubaa8\ub378 \uacb0\uacfc\ub97c \uc5bb\uc5b4\ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. model_results <- neuralnet :: compute ( monk_model , monk_test [ 2 : 7 ]) \uc704\uc758 \ucf54\ub4dc\uc758 \uc758\ubbf8\ub294 monk_model \uc744 \uc774\uc6a9\ud558\uc5ec monk_test[2:7] \uc5d0 \ub300\ud55c \uc608\uce21 \ubaa8\ub378 \uacb0\uacfc\ub97c \uc5bb\ub294 \uac83\uc785\ub2c8\ub2e4. monk_test[2:7] \ub294 monk_test[1] \uc778 Class \ud53c\uccd0\uc5d0 \ub300\ud55c \ubaa8\ub378 \uacb0\uacfc\ub97c \uc5bb\uae30 \uc704\ud558\uc5ec \ub098\uba38\uc9c0 \ud53c\uccd0\uc778 a1~a6\ub97c \uc774\uc6a9\ud55c\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4. model_results \uac00 \uac00\uc9c0\uace0 \uc788\ub294 \ub370\uc774\ud130 \uc774\ub984\ub97c \uc0b4\ud3b4\ubcf4\uba74, > names ( model_results ) [ 1 ] \"neurons\" \"net.result\" \uc778\ub370, neurons \ub294 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ub808\uc774\uc5b4\uc758 \ub274\ub7f0 \ucd9c\ub825\uac12\ub4e4\uc774\uba70, net.result \ub294 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c\uc758 \uc804\uccb4 \uacb0\uacfc\ub97c \ud589\ub82c \ud615\ud0dc\ub85c \uc800\uc7a5\ud55c \uac12(\ud604\uc7ac \uc6b0\ub9ac\uac00 \ud480\uace0 \uc788\ub294 \ubb38\uc81c\uc5d0\uc11c\ub294 \ubca1\ud130)\uc785\ub2c8\ub2e4. net.result \uc774 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0 \ub300\ud55c \ubd84\ub958 \uacb0\uacfc\uc785\ub2c8\ub2e4. \uc774 \uac12\uc744 \uc608\uce21 \uacb0\uacfc\uac12\uc774\ub77c\ub294 \ub2e4\ub978 \ubcc0\uc218\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. predicted_monk <- model_results $ net.result \uac12\uc744 \uba87 \uac1c \uc0b4\ud3b4\ubcf4\uba74, > head ( predicted_monk ) [, 1 ] [ 1 ,] 1.0102054821 [ 2 ,] 0.3010884442 [ 3 ,] 0.3014953569 [ 4 ,] 0.3010585095 [ 5 ,] 0.3010585096 [ 6 ,] 0.3010585095 \uccab\ubc88\uc9f8 \uac12\uc744 \ubcfc \uc218 \uc788\ub4ef\uc774 \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc5d0\uc11c class\uc758 \uac12\uc740 0\uacfc 1\uc0ac\uc774\uc600\ub294\ub370 1\uc744 \uc0b4\uc9dd \ub118\ub294 \uac12\ub3c4 \ubcf4\uc785\ub2c8\ub2e4. \uc989, \uacc4\uc0b0\uc774 \ucda9\ubd84\ud788 \uc815\ud655\ud558\uc9c0 \uc54a\uc74c\uc744 \ub2e4\uc2dc \ud55c \ubc88 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc2e4\uc81c \ub370\uc774\ud130\uc758 class\uc640 ANN\uc744 \ud1b5\ud574 \uc608\uce21\ub41c \uac12\uc758 \uc624\ucc28\ub97c \ud655\uc778\ud574 \ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub97c \ud655\uc778\ud558\ub824\uba74 \ub450 \uac12 \uc0ac\uc774\uc758 \uc758\uc874\uc131\uc744 \ubd84\uc11d\ud558\uba74 \ub418\ub294\ub370, \uc774\uac83\uc744 \uc0c1\uad00\uad00\uacc4(Correlation) \ubd84\uc11d\uc774\ub77c\uace0 \ud558\uba70 \ub300\ud45c\uc801\uc778 \uac83\uc73c\ub85c \ud53c\uc5b4\uc2a8(Pearson), \ucf04\ub2ec(Kendall), \uc2a4\ud53c\uc5b4\ub9cc(Spearman) \uc0c1\uad00\uacc4\uc218 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc640 ANN\uc744 \ud1b5\ud574 \uc608\uce21\ub41c \ub370\uc774\ud130\uc640\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uacc4\uc0b0\ud574 \ubcf4\ub3c4\ub85d \ud569\ub2c8\ub2e4: > stats :: cor ( predicted_monk , monk_test $ class ) [, 1 ] [ 1 ,] 0.5479135178 \uc0c1\uad00\uad00\uacc4 \uacb0\uacfc\uac12\uc740 [-1,1] \ubc94\uc704\ub97c \uac16\ub294\ub370, -1\uc740 \uc74c\uc758 \uc644\uc804\uc0c1\uad00\uad00\uacc4, 0\uc740 \uc0c1\uad00\uad00\uacc4\uac00 \ud558\ub098\ub3c4 \uc5c6\ub294 \uac83\uc774\uba70, 1\uc740 \uc591\uc758 \uc644\uc804\uc0c1\uad00\uad00\uacc4\uc785\ub2c8\ub2e4. \uac12\uc774 0.5 \uadfc\ucc98\ub85c \ub450 \uac12 \uc0ac\uc774\uc5d0 \uc0c1\uad00\uad00\uacc4\ub294 \uc788\uae34 \ud558\uc9c0\ub9cc \ud06c\uc9c0 \uc54a\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc989, \uacc4\uc0b0 \uacb0\uacfc\uac00 \uadf8\ub9ac \ub9cc\uc871\uc2a4\ub7fd\uc9c0 \ubabb\ud558\uba70, \uc2e4\uc81c \uc5d0\ub7ec\ub3c4 \ucef8\uc74c\uc744 \uc54c \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.","title":"5. ANN \ubaa8\ub378\uc744 \uc774\uc6a9\ud55c \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc608\uce21"},{"location":"posts/deep-learning/2019-02-07-IntroductionToArtificialNeuralNetworksPart2/#6-ann","text":"\uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ub2e8\uc9c0 1\uac1c\ub9cc \uc0ac\uc6a9\ud55c \uacbd\uc6b0, \uacb0\uacfc\uac00 \uc369 \ub9cc\uc871\uc2a4\ub7fd\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ucd94\uac00\ud560 \uc218\ub85d \ud574\uac00 \uc870\uae08\uc529 \uac1c\uc120\ub420 \uac83\uc774\uc9c0\ub9cc \uacc4\uc0b0\ub7c9\uc774 \ub9e4\uc6b0 \ub298\uc5b4\ub0a0 \uac83\uc785\ub2c8\ub2e4. \uacc4\uc18d\ud574\uc11c \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ucd94\uac00\ud558\ub2e4\ubcf4\uba74 \uacb0\uacfc\ub294 \ub354\uc774\uc0c1 \ub208\uc5d0 \ub744\uac8c \uac1c\uc120\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\ub294\ub370 \ud574\uac00 \uc218\ub834\ub418\uc5c8\ub2e4\uace0 \ubcfc \uc218 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ub610\ud55c \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c \ub108\ubb34 \ub9ce\uc774 \ucd94\uac00\ud558\ub2e4\ubcf4\uba74 \uc624\ud788\ub824 \uacb0\uacfc\uac00 \ub354 \uc548 \uc88b\uc544\uc9c0\ub294 \uacbd\uc6b0\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc5b4\uca0c\ub4e0 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 2\ub85c \uc9c0\uc815\ud574\uc11c \uacb0\uacfc\ub97c \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. set.seed ( 12345 ) monk_model <- neuralnet :: neuralnet ( formula = class ~ a1 + a2 + a3 + a4 + a5 + a6 , data = monk_train , hidden = 2 ) graphics :: plot ( monk_model ) model_results <- neuralnet :: compute ( monk_model , monk_test [ 2 : 7 ]) predicted_monk <- model_results $ net.result \uc774 \ub54c\uc758 \uacb0\uacfc\ub294, > stats :: cor ( predicted_monk , monk_test $ class ) [, 1 ] [ 1 ,] 0.5604624596 \uc774\uba70, \uc740\ub2c9 \ub808\uc774\uc5b4\uac00 1\uac1c\uc778 \uacbd\uc6b0\ubcf4\ub2e4 \uacb0\uacfc\uac00 \uc57d\uac04 \uac1c\uc120 \ub418\uc5c8\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 5\uac1c\uae4c\uc9c0 \ub298\ub9ac\uba74\uc11c \ud14c\uc2a4\ud2b8 \ud574 \ubcf4\uba74, No. of Hidden Layers Error Steps Correlation Coefficient 1 10.858 2523 0.54791 2 6.829 3884 0.50605 3 0.024 4553 0.99862 4 4.2716 8082 0.67534 5 0.018 7760 0.99712 \uc640 \uac19\uc740\ub370, \uc740\ub2c9 \ub808\uc774\uc5b4\uac00 3\uac1c \uc0ac\uc6a9\ub41c \uacbd\uc6b0 \uadf9\uc801\uc73c\ub85c \uacb0\uacfc\uac00 \uc88b\uc544\uc84c\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, 3\uac1c \uc0ac\uc6a9\ub41c \uacbd\uc6b0\uc5d0 \ube44\ud574 4\uac1c \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0 \uacc4\uc0b0\ub7c9\uc740 2\uac1c \uac00\uae4c\uc774 \ub9ce\uc544\uc84c\ub294\ub370 \uacb0\uacfc\ub294 \uc624\ud788\ub824 \ub354 \uc548 \uc88b\uc544\uc84c\uc73c\uba70, 5\uac1c \uc0ac\uc6a9\ub41c \uacbd\uc6b0 \uacb0\uacfc\ub294 \ub2e4\uc2dc \uc88b\uc544\uc84c\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \uc774\ubbf8\uc9c0\ub294 \uc2dc\ud5d8\uc0bc\uc544 \uc740\ub2c9 \ub808\uc774\uc5b4\ub97c 10\uac1c \uc0ac\uc6a9\ud55c \uacbd\uc6b0\uc778\ub370 \ub208\uc774 \ub3cc\uc544\uac08 \uc815\ub3c4\ub85c \ubcf5\uc7a1\ud574 \ubcf4\uc785\ub2c8\ub2e4. UCI Machine Learning Repository\uc758 \ubabd\ud06c \ubb38\uc81c(Monk's Problem) \ub370\uc774\ud130 \uc5d0\uc11c \ub370\uc774\ud130\uc14b 2\uc640 3\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc5f0\uc2b5\uc0bc\uc544 \uc704\uc758 \uacfc\uc815\uc744 \ud14c\uc2a4\ud2b8\ud574 \ubcf4\uae38 \ubc14\ub78d\ub2c8\ub2e4. \uc774\ub85c\uc368 R\uc758 ANN \ud328\ud0a4\uc9c0\uc778 neuralnet\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958 \ubb38\uc81c\ub97c \ud478\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4.","title":"6. ANN \ubaa8\ub378 \uc131\ub2a5 \uac1c\uc120"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/","text":"Written by Alex Choi, Feb. 09, 2019. \uc774\ubc88 \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 Object Detection\uc758 \ucd08\uae30 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc778 R-CNN\uc5d0 \ub300\ud558\uc5ec \uac04\ub2e8\ud788 \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. Introduction R-CNN\uc740 Regional Convolutional Neural Networks\ub97c \uc758\ubbf8\ud558\ub294 \uac83\uc73c\ub85c, Jitendra Malik \uad50\uc218\uac00 \uc774\ub044\ub294 UC Berkley\uc758 \uc5f0\uad6c\uc790\ub4e4(Ross Girshick, Jeff Donahue, Trevor Darrell)\uc5d0 \uc758\ud574 \uc5f0\uad6c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uad00\ub828 \ub17c\ubb38\uc740 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uace0\ud558\uc2dc\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4: Rich feature hierarchies for accurate object detection and semantic segmentation, 2014 R-CNN\uc744 \uad6c\uccb4\uc801\uc73c\ub85c \uc124\uba85\ud558\uae30 \uc804\uc5d0, \uc6b0\uc120 Object Detection\uc774 \ubb34\uc5c7\uc778\uc9c0 \uc54c\uc544\ubcf4\uace0\uc790 \ud569\ub2c8\ub2e4. Object Detection\uc774\ub780, \uc8fc\uc5b4\uc9c4 \uc774\ubbf8\uc9c0 \ub0b4\uc5d0 \uc5b4\ub290 \uc601\uc5ed\uc5d0 \uc624\ube0c\uc81d\ud2b8\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \uc54c\uc544\ub0b4\uace0, \ub9cc\uc57d \ud574\ub2f9 \uc601\uc5ed\uc5d0 \uc624\ube0c\uc81d\ud2b8\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74 \uadf8 \uc624\ube0c\uc81d\ud2b8\uc758 \uc885\ub958\uac00 \ubb34\uc5c7\uc778\uc9c0(Classfication) \uc54c\uc544\ub0b4\ub294 \ubc29\ubc95\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. Jitendra Malik \uad50\uc218 \ud300\uc740, 2012\ub144\uc5d0 ILSVRC \uc5d0\uc11c \uc6b0\uc2b9\ud55c Toronto \ub300\ud559\uad50\uc758 Hinton \uad50\uc218 \uc5f0\uad6c\ud300\uc758 Alex Krizhevsky\uac00 \ubc1c\ud45c\ud55c AlexNet \uc5d0 \uc601\uac10\uc744 \ubc1b\uace0 \"CNN\uc744 Object Detection\uc5d0 \ud65c\uc6a9\ud560 \uc218 \uc788\uc744\uae4c?\"\ub77c\ub294 \uc9c8\ubb38\uc73c\ub85c \uc5f0\uad6c\ub97c \uc2dc\uc791\ud588\ub2e4\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc9c8\ubb38\uc5d0 \ub2f5\ud558\uace0\uc790, Jitendra Malik \uad50\uc218 \ud300\uc740 R-CNN\uc744 \uace0\uc548\ud558\uc5ec \uc774\ub97c PASCAL VOC \ub370\uc774\ud130\uc138\ud2b8\uc5d0 \uc801\uc6a9\ud558\uc600\uc73c\uba70 CNN\uc774 Object Detection \uc601\uc5ed\uc5d0\uc11c\ub3c4 \uae30\uc874 HoG \ub4f1\uacfc \uac19\uc740 Feature\uc5d0 \ube44\ud574 \ub6f0\uc5b4\ub09c \uc131\ub2a5\uc744 \ubcf4\uc774\ub294 \uac83\uc744 \ud655\uc778\ud558\uc600\uc2b5\ub2c8\ub2e4. R-CNN \uc774\ud574\ud558\uae30 \uadf8\ub7fc \ubcf8\uaca9\uc801\uc73c\ub85c R-CNN\uc5d0 \ub300\ud558\uc5ec \uc774\ud574\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. R-CNN\uc758 \uc785\ub825\uacfc \ucd9c\ub825\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: * \uc785\ub825: \uc774\ubbf8\uc9c0 * \ucd9c\ub825: \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub4e4(Bounding Boxes), \uac01 \ubc14\uc6b4\ub529 \ubc15\uc2a4 \ub0b4\uc758 \uc624\ube0c\uc81d\ud2b8\uc758 \uc885\ub958(Label) \uadf8\ub7ec\uba74, \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc5b4\ub5bb\uac8c \uacb0\uc815\ud560 \uc218 \uc788\uc744\uae4c\uc694? Region Proposal \uac00\uc7a5 \ub2e8\uc21c\ud558\uace0 \uc9c1\uad00\uc801\uc73c\ub85c \uc0dd\uac01\ud558\uba74, \ub2e4\uc591\ud55c \ud06c\uae30\uc640 \ub2e4\uc591\ud55c \uc885\ud6a1\ube44(Aspect Ratio)\ub97c \uac16\ub294 Windows\ub97c \uc124\uc815\ud558\uc5ec \uc774\ubbf8\uc9c0\ub97c \ucb48\uc6b1 \ud6d1\uc5b4\uac00\uba70 \uc624\ube0c\uc81d\ud2b8\uc758 \uc720\ubb34 \ubc0f \uc885\ub958\ub97c \uc54c\uc544\ub0b4\ub294 \ubc29\ubc95\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c Sliding Window \uae30\ubc95\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uc774\ubbf8\uc9c0 \ub0b4\uc758 \uc624\ube0c\uc81d\ud2b8\uac00 \uc5b4\ub5a4 \ud06c\uae30\ub85c \uc5b4\ub5a4 \uc885\ud6a1\ube44\ub97c \uac16\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ub9e4\uc6b0 \ub9ce\uc740 \uc885\ub958\uc758 WIndows\ub97c \uc0dd\uc131\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ub9e4\uc6b0 \ube44\ud6a8\uc728\uc801\uc778 \ubc29\ubc95\uc774\ub77c\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Sliding Window\ub97c \uc774\uc6a9\ud55c Object Detection \uc608\uc2dc - Image from pyimagesearch.com \uc624\ube0c\uc81d\ud2b8\uac00 \uc874\uc7ac\ud560 \uac83 \uac19\uc740 \uc601\uc5ed\uc744 \uc81c\uc548\ud558\ub294 \uac83\uc744 Region Proposals\ub77c\uace0 \ud558\ub294\ub370, Sliding Window\uc758 \uc774\ub7ec\ud55c \ube44\ud6a8\uc728\uc131 \ub54c\ubb38\uc5d0 \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294 Region Proposals\ub85c\uc11c Selective Search \uae30\ubc95\uc744 \uc774\uc6a9\ud569\ub2c8\ub2e4. Selective Search\ub294 Object Detection\uc744 \uc704\ud55c Region Proposal \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \ud53d\uc140 \uac04\uc758 \uceec\ub7ec, \ud14d\uc2a4\uccd0, \ud06c\uae30, \ubaa8\uc591 \ub4f1\uc758 \uc720\uc0ac\uc131\uc744 \uae30\ubc18\uc73c\ub85c \uc601\uc5ed\uc744 \ub113\ud600\uac00\uba70 Segnmentation(\ub610\ub294 Grouping)\ud558\ub294 \uae30\ubc95\uc785\ub2c8\ub2e4. Selective Search \uc608\uc2dc - Image from learnopencv.com R-CNN \uad6c\uc870 \ub17c\ubb38\uc5d0 \uc81c\uc2dc\ub41c R-CNN\uc758 \uad6c\uc870\ub294 \uc544\ub798 \uc774\ubbf8\uc9c0\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc6b0\uc120, \uc785\ub825 \uc774\ubbf8\uc9c0(Input Image)\ub85c\ubd80\ud130 \ucd5c\ub300 2000(~2k)\uac1c\uc758 Region Proposals\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uac01 \ucd94\ucd9c\ub41c Region\uc744 \uc815\ud574\uc9c4 \ud574\uc0c1\ub3c4\ub85c \ub9de\ucd94\ub294\ub370 \uc774\ub97c Warping\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub294, CNN\uc774 \uc815\ud574\uc9c4 \ud574\uc0c1\ub3c4\ub85c \uc785\ub825\uc744 \ubc1b\uc544\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \uac00\ub85c-\uc138\ub85c \ube44\uc728\uc744 \uc815\ud574\uc9c4 \uc785\ub825 \ud574\uc0c1\ub3c4\ub85c \ub9de\ucd94\ub294 \uacfc\uc815\uc5d0\uc11c \uc774\ubbf8\uc9c0\uc758 \ube44\uc728\uc744 \ube44\ud2b8\ub294(Warp) \uacfc\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. Warp\ub41c \uc601\uc5ed\uc744 AlexNet \ub4f1\uacfc \uac19\uc740 CNN\uc744 \ud1b5\ud574(\ub17c\ubb38\uc5d0\uc11c\ub294 AlexNet\uc744 \uc774\uc6a9\ud558\uc600\uc9c0\ub9cc, \uadf8 \ud6c4\uc5d0 \ubc1c\ud45c\ub41c ResNet, GoogLeNet \ub4f1\uc744 \uc774\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) Feature Map\uc744 \uc5bb\uc2b5\ub2c8\ub2e4. \uc5bb\uc5b4\uc9c4 Feature Map\uc744 Support Vector Machine(SVM) \uc744 \uc774\uc6a9\ud558\uc5ec \uac01 Region\uc744 \ubd84\ub958\ud569\ub2c8\ub2e4. VOC 2007\uc758 Warp\ub41c \ud559\uc2b5 \uc0d8\ud50c\ub4e4 \ubc14\uc6b4\ub529 \ubc15\uc2a4 \uac1c\uc120 \ub9c8\uc9c0\ub9c9 \uc9c8\ubb38\uc740, \"\ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc2e4\uc81c \uc624\ube0c\uc81d\ud2b8 \uc601\uc5ed\uc5d0 \ubc00\uc811\ud558\uac8c \ucc3e\uc544\ub0bc \uc218 \uc788\uc744 \uac83\uc778\uac00?\"\uc785\ub2c8\ub2e4. \uc774\ub294, Linear Regression \uae30\ubc95\uc744 \uc774\uc6a9\ud558\uc5ec \uac00\ub2a5\ud569\ub2c8\ub2e4. \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \ubcc0\uc218\ub97c \uc911\uc2ec\uc88c\ud45c, \ub113\uc774 \ubc0f \ub192\uc774\uc758 4\uac1c\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \\[ (C_x, C_y, W, H) \\] \uc5ec\uae30\uc11c, \\((C_x, C_y)\\) \ub294 \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \uc911\uc2ec\uc88c\ud45c\ub97c, \\(W\\) , \\(H\\) \ub294 \uac01\uac01 \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \ub112\uc774, \ub192\uc774\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294, \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \\(N\\) \uac1c\uc758 \ubc14\uc6b4\ub529 \ubc15\uc2a4 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud569\ub2c8\ub2e4. \uc989, \\[ \\{ (P^i, G^i) \\}, i=1,...,N \\] \uc5ec\uae30\uc11c, \\(P^i\\) \ub294 \ubc14\uc6b4\ub529 \ubc15\uc2a4 Proposal\uc758 \\(i\\) \ubc88\uc9f8 \ub370\uc774\ud130\ub97c, \\(G^i\\) \ub294 Ground Truth\uc758 \\(i\\) \ubc88\uc9f8 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c, \\(P^i\\) \uac00 \\(G^i\\) \uc5d0 \uadfc\uc811\ud560 \uc218 \uc788\ub3c4\ub85d \uc801\uc808\ud55c Loss\ub97c \uc815\uc758\ud558\uc5ec \uc774\ub97c \ucd5c\uc18c\ud654\ud558\ub3c4\ub85d \ud559\uc2b5\uc744 \ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub17c\ubb38\uc758 [C. Bounding-box regression] \ubd80\ubd84\uc744 \ucc38\uace0\ud558\uc2dc\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc774\ubbf8\uc9c0\ub4e4\uc740 R-CNN\uc744 \uc774\uc6a9\ud558\uc5ec Object Detection\ud55c \uacb0\uacfc\ub4e4\uc785\ub2c8\ub2e4. \uc694\uc57d \uc9c0\uae08\uae4c\uc9c0 R-CNN\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4. R-CNN \ubc29\ubc95\uc744 \uc694\uc57d\ud558\uc790\uba74, \uc785\ub825 \uc774\ubbf8\uc9c0\ub97c \ubc1b\ub294\ub2e4. Selective Search\ub97c \uc774\uc6a9\ud558\uc5ec Region Proposals\ub97c \ucd5c\ub300 2,000\uac1c \uc0dd\uc131\ud55c\ub2e4. \uc0dd\uc131\ub41c \uac01 Region Proposal\uc744 Warping\ud55c \ud6c4, \uc774\ub97c CNN\uc744 \uc774\uc6a9\ud558\uc5ec Feature Map\uc744 \uc0dd\uc131\ud55c\ub2e4. \uc0dd\uc131\ub41c Feature Map\uc744 SVM\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ud55c\ub2e4. \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc5d0 \ub300\ud558\uc5ec Linear Regression(Bounding-box Regressor)\ub97c \ud1b5\ud574 \uc624\ube0c\uc81d\ud2b8\uc758 \uc704\uce58\uc5d0 \uadfc\uc811\ud558\ub3c4\ub85d \ub9de\ucd98\ub2e4. \ub2e4\uc74c \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 R-CNN\uc758 \uc18d\ub3c4\ub97c \uac1c\uc120\ud55c Fast R-CNN\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"Object Detection Using R-CNN"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/#introduction","text":"R-CNN\uc740 Regional Convolutional Neural Networks\ub97c \uc758\ubbf8\ud558\ub294 \uac83\uc73c\ub85c, Jitendra Malik \uad50\uc218\uac00 \uc774\ub044\ub294 UC Berkley\uc758 \uc5f0\uad6c\uc790\ub4e4(Ross Girshick, Jeff Donahue, Trevor Darrell)\uc5d0 \uc758\ud574 \uc5f0\uad6c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uad00\ub828 \ub17c\ubb38\uc740 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uace0\ud558\uc2dc\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4: Rich feature hierarchies for accurate object detection and semantic segmentation, 2014 R-CNN\uc744 \uad6c\uccb4\uc801\uc73c\ub85c \uc124\uba85\ud558\uae30 \uc804\uc5d0, \uc6b0\uc120 Object Detection\uc774 \ubb34\uc5c7\uc778\uc9c0 \uc54c\uc544\ubcf4\uace0\uc790 \ud569\ub2c8\ub2e4. Object Detection\uc774\ub780, \uc8fc\uc5b4\uc9c4 \uc774\ubbf8\uc9c0 \ub0b4\uc5d0 \uc5b4\ub290 \uc601\uc5ed\uc5d0 \uc624\ube0c\uc81d\ud2b8\uac00 \uc874\uc7ac\ud558\ub294\uc9c0 \uc54c\uc544\ub0b4\uace0, \ub9cc\uc57d \ud574\ub2f9 \uc601\uc5ed\uc5d0 \uc624\ube0c\uc81d\ud2b8\uac00 \uc874\uc7ac\ud55c\ub2e4\uba74 \uadf8 \uc624\ube0c\uc81d\ud2b8\uc758 \uc885\ub958\uac00 \ubb34\uc5c7\uc778\uc9c0(Classfication) \uc54c\uc544\ub0b4\ub294 \ubc29\ubc95\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. Jitendra Malik \uad50\uc218 \ud300\uc740, 2012\ub144\uc5d0 ILSVRC \uc5d0\uc11c \uc6b0\uc2b9\ud55c Toronto \ub300\ud559\uad50\uc758 Hinton \uad50\uc218 \uc5f0\uad6c\ud300\uc758 Alex Krizhevsky\uac00 \ubc1c\ud45c\ud55c AlexNet \uc5d0 \uc601\uac10\uc744 \ubc1b\uace0 \"CNN\uc744 Object Detection\uc5d0 \ud65c\uc6a9\ud560 \uc218 \uc788\uc744\uae4c?\"\ub77c\ub294 \uc9c8\ubb38\uc73c\ub85c \uc5f0\uad6c\ub97c \uc2dc\uc791\ud588\ub2e4\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc9c8\ubb38\uc5d0 \ub2f5\ud558\uace0\uc790, Jitendra Malik \uad50\uc218 \ud300\uc740 R-CNN\uc744 \uace0\uc548\ud558\uc5ec \uc774\ub97c PASCAL VOC \ub370\uc774\ud130\uc138\ud2b8\uc5d0 \uc801\uc6a9\ud558\uc600\uc73c\uba70 CNN\uc774 Object Detection \uc601\uc5ed\uc5d0\uc11c\ub3c4 \uae30\uc874 HoG \ub4f1\uacfc \uac19\uc740 Feature\uc5d0 \ube44\ud574 \ub6f0\uc5b4\ub09c \uc131\ub2a5\uc744 \ubcf4\uc774\ub294 \uac83\uc744 \ud655\uc778\ud558\uc600\uc2b5\ub2c8\ub2e4.","title":"Introduction"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/#r-cnn","text":"\uadf8\ub7fc \ubcf8\uaca9\uc801\uc73c\ub85c R-CNN\uc5d0 \ub300\ud558\uc5ec \uc774\ud574\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. R-CNN\uc758 \uc785\ub825\uacfc \ucd9c\ub825\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: * \uc785\ub825: \uc774\ubbf8\uc9c0 * \ucd9c\ub825: \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub4e4(Bounding Boxes), \uac01 \ubc14\uc6b4\ub529 \ubc15\uc2a4 \ub0b4\uc758 \uc624\ube0c\uc81d\ud2b8\uc758 \uc885\ub958(Label) \uadf8\ub7ec\uba74, \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc5b4\ub5bb\uac8c \uacb0\uc815\ud560 \uc218 \uc788\uc744\uae4c\uc694?","title":"R-CNN \uc774\ud574\ud558\uae30"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/#region-proposal","text":"\uac00\uc7a5 \ub2e8\uc21c\ud558\uace0 \uc9c1\uad00\uc801\uc73c\ub85c \uc0dd\uac01\ud558\uba74, \ub2e4\uc591\ud55c \ud06c\uae30\uc640 \ub2e4\uc591\ud55c \uc885\ud6a1\ube44(Aspect Ratio)\ub97c \uac16\ub294 Windows\ub97c \uc124\uc815\ud558\uc5ec \uc774\ubbf8\uc9c0\ub97c \ucb48\uc6b1 \ud6d1\uc5b4\uac00\uba70 \uc624\ube0c\uc81d\ud2b8\uc758 \uc720\ubb34 \ubc0f \uc885\ub958\ub97c \uc54c\uc544\ub0b4\ub294 \ubc29\ubc95\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c Sliding Window \uae30\ubc95\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uc774\ubbf8\uc9c0 \ub0b4\uc758 \uc624\ube0c\uc81d\ud2b8\uac00 \uc5b4\ub5a4 \ud06c\uae30\ub85c \uc5b4\ub5a4 \uc885\ud6a1\ube44\ub97c \uac16\ub294\uc9c0 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ub9e4\uc6b0 \ub9ce\uc740 \uc885\ub958\uc758 WIndows\ub97c \uc0dd\uc131\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ub9e4\uc6b0 \ube44\ud6a8\uc728\uc801\uc778 \ubc29\ubc95\uc774\ub77c\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Sliding Window\ub97c \uc774\uc6a9\ud55c Object Detection \uc608\uc2dc - Image from pyimagesearch.com \uc624\ube0c\uc81d\ud2b8\uac00 \uc874\uc7ac\ud560 \uac83 \uac19\uc740 \uc601\uc5ed\uc744 \uc81c\uc548\ud558\ub294 \uac83\uc744 Region Proposals\ub77c\uace0 \ud558\ub294\ub370, Sliding Window\uc758 \uc774\ub7ec\ud55c \ube44\ud6a8\uc728\uc131 \ub54c\ubb38\uc5d0 \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294 Region Proposals\ub85c\uc11c Selective Search \uae30\ubc95\uc744 \uc774\uc6a9\ud569\ub2c8\ub2e4. Selective Search\ub294 Object Detection\uc744 \uc704\ud55c Region Proposal \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \ud53d\uc140 \uac04\uc758 \uceec\ub7ec, \ud14d\uc2a4\uccd0, \ud06c\uae30, \ubaa8\uc591 \ub4f1\uc758 \uc720\uc0ac\uc131\uc744 \uae30\ubc18\uc73c\ub85c \uc601\uc5ed\uc744 \ub113\ud600\uac00\uba70 Segnmentation(\ub610\ub294 Grouping)\ud558\ub294 \uae30\ubc95\uc785\ub2c8\ub2e4. Selective Search \uc608\uc2dc - Image from learnopencv.com","title":"Region Proposal"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/#r-cnn_1","text":"\ub17c\ubb38\uc5d0 \uc81c\uc2dc\ub41c R-CNN\uc758 \uad6c\uc870\ub294 \uc544\ub798 \uc774\ubbf8\uc9c0\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc6b0\uc120, \uc785\ub825 \uc774\ubbf8\uc9c0(Input Image)\ub85c\ubd80\ud130 \ucd5c\ub300 2000(~2k)\uac1c\uc758 Region Proposals\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uac01 \ucd94\ucd9c\ub41c Region\uc744 \uc815\ud574\uc9c4 \ud574\uc0c1\ub3c4\ub85c \ub9de\ucd94\ub294\ub370 \uc774\ub97c Warping\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc774\ub294, CNN\uc774 \uc815\ud574\uc9c4 \ud574\uc0c1\ub3c4\ub85c \uc785\ub825\uc744 \ubc1b\uc544\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \uac00\ub85c-\uc138\ub85c \ube44\uc728\uc744 \uc815\ud574\uc9c4 \uc785\ub825 \ud574\uc0c1\ub3c4\ub85c \ub9de\ucd94\ub294 \uacfc\uc815\uc5d0\uc11c \uc774\ubbf8\uc9c0\uc758 \ube44\uc728\uc744 \ube44\ud2b8\ub294(Warp) \uacfc\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. Warp\ub41c \uc601\uc5ed\uc744 AlexNet \ub4f1\uacfc \uac19\uc740 CNN\uc744 \ud1b5\ud574(\ub17c\ubb38\uc5d0\uc11c\ub294 AlexNet\uc744 \uc774\uc6a9\ud558\uc600\uc9c0\ub9cc, \uadf8 \ud6c4\uc5d0 \ubc1c\ud45c\ub41c ResNet, GoogLeNet \ub4f1\uc744 \uc774\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4) Feature Map\uc744 \uc5bb\uc2b5\ub2c8\ub2e4. \uc5bb\uc5b4\uc9c4 Feature Map\uc744 Support Vector Machine(SVM) \uc744 \uc774\uc6a9\ud558\uc5ec \uac01 Region\uc744 \ubd84\ub958\ud569\ub2c8\ub2e4. VOC 2007\uc758 Warp\ub41c \ud559\uc2b5 \uc0d8\ud50c\ub4e4","title":"R-CNN \uad6c\uc870"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/#_1","text":"\ub9c8\uc9c0\ub9c9 \uc9c8\ubb38\uc740, \"\ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc2e4\uc81c \uc624\ube0c\uc81d\ud2b8 \uc601\uc5ed\uc5d0 \ubc00\uc811\ud558\uac8c \ucc3e\uc544\ub0bc \uc218 \uc788\uc744 \uac83\uc778\uac00?\"\uc785\ub2c8\ub2e4. \uc774\ub294, Linear Regression \uae30\ubc95\uc744 \uc774\uc6a9\ud558\uc5ec \uac00\ub2a5\ud569\ub2c8\ub2e4. \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \ubcc0\uc218\ub97c \uc911\uc2ec\uc88c\ud45c, \ub113\uc774 \ubc0f \ub192\uc774\uc758 4\uac1c\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \\[ (C_x, C_y, W, H) \\] \uc5ec\uae30\uc11c, \\((C_x, C_y)\\) \ub294 \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \uc911\uc2ec\uc88c\ud45c\ub97c, \\(W\\) , \\(H\\) \ub294 \uac01\uac01 \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \ub112\uc774, \ub192\uc774\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \ubcf8 \ub17c\ubb38\uc5d0\uc11c\ub294, \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \\(N\\) \uac1c\uc758 \ubc14\uc6b4\ub529 \ubc15\uc2a4 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud569\ub2c8\ub2e4. \uc989, \\[ \\{ (P^i, G^i) \\}, i=1,...,N \\] \uc5ec\uae30\uc11c, \\(P^i\\) \ub294 \ubc14\uc6b4\ub529 \ubc15\uc2a4 Proposal\uc758 \\(i\\) \ubc88\uc9f8 \ub370\uc774\ud130\ub97c, \\(G^i\\) \ub294 Ground Truth\uc758 \\(i\\) \ubc88\uc9f8 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c, \\(P^i\\) \uac00 \\(G^i\\) \uc5d0 \uadfc\uc811\ud560 \uc218 \uc788\ub3c4\ub85d \uc801\uc808\ud55c Loss\ub97c \uc815\uc758\ud558\uc5ec \uc774\ub97c \ucd5c\uc18c\ud654\ud558\ub3c4\ub85d \ud559\uc2b5\uc744 \ud569\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub17c\ubb38\uc758 [C. Bounding-box regression] \ubd80\ubd84\uc744 \ucc38\uace0\ud558\uc2dc\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc774\ubbf8\uc9c0\ub4e4\uc740 R-CNN\uc744 \uc774\uc6a9\ud558\uc5ec Object Detection\ud55c \uacb0\uacfc\ub4e4\uc785\ub2c8\ub2e4.","title":"\ubc14\uc6b4\ub529 \ubc15\uc2a4 \uac1c\uc120"},{"location":"posts/deep-learning/2019-02-09-object-detection-using-rcnn/#_2","text":"\uc9c0\uae08\uae4c\uc9c0 R-CNN\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4. R-CNN \ubc29\ubc95\uc744 \uc694\uc57d\ud558\uc790\uba74, \uc785\ub825 \uc774\ubbf8\uc9c0\ub97c \ubc1b\ub294\ub2e4. Selective Search\ub97c \uc774\uc6a9\ud558\uc5ec Region Proposals\ub97c \ucd5c\ub300 2,000\uac1c \uc0dd\uc131\ud55c\ub2e4. \uc0dd\uc131\ub41c \uac01 Region Proposal\uc744 Warping\ud55c \ud6c4, \uc774\ub97c CNN\uc744 \uc774\uc6a9\ud558\uc5ec Feature Map\uc744 \uc0dd\uc131\ud55c\ub2e4. \uc0dd\uc131\ub41c Feature Map\uc744 SVM\uc744 \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ud55c\ub2e4. \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc5d0 \ub300\ud558\uc5ec Linear Regression(Bounding-box Regressor)\ub97c \ud1b5\ud574 \uc624\ube0c\uc81d\ud2b8\uc758 \uc704\uce58\uc5d0 \uadfc\uc811\ud558\ub3c4\ub85d \ub9de\ucd98\ub2e4. \ub2e4\uc74c \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 R-CNN\uc758 \uc18d\ub3c4\ub97c \uac1c\uc120\ud55c Fast R-CNN\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uc694\uc57d"},{"location":"posts/deep-learning/2019-02-10-object-detection-using-fast-rcnn/","text":"Written by Alex Choi, Feb. 10, 2019. \uc774\ubc88 \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 Object Detection\uc758 \ucd08\uae30 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc778 R-CNN\uc758 \uc18d\ub3c4\uc640 \uc815\ud655\ub3c4\ub97c \uac1c\uc120\ud55c Fast R-CNN\uc5d0 \ub300\ud558\uc5ec \uac04\ub2e8\ud558\uac8c \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. R-CNN\uc758 \ub2e8\uc810 \uadf8\ub7ec\uba74 \uc6b0\uc120 \uae30\uc874\uc758 R-CNN\uc774 \uac00\uc9c0\uace0 \uc788\ub294 \ub2e8\uc810\uc774 \ubb34\uc5c7\uc778\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. R-CNN\uc5d0\uc11c\ub294 \ud558\ub098\uc758 \uc774\ubbf8\uc9c0\uc5d0\uc11c Selective Search\ub97c \ud1b5\ud558\uc5ec \ucd5c\ub300 2,000\uac1c\uc758 Region Proposals\ub97c \uc0dd\uc131\ud558\uace0 \uac01\uac01\uc5d0 \ub300\ud558\uc5ec ConvNet(\uac00\ub839, AlexNet)\uc5d0 \ub300\ud55c Forward Pass\ub97c \uc5f0\uc0b0\ud569\ub2c8\ub2e4. \uc774\ub294 \ud559\uc2b5\uc2dc\uac04\ub3c4 \uc0c1\ub2f9\ud55c \uc2dc\uac04\uc774 \uc694\uad6c\ub418\uc9c0\ub9cc Runtime\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc218\uc900\uc774 \ub418\uc9c0 \ubabb\ud569\ub2c8\ub2e4. R-CNN\uc5d0\uc11c\ub294 \uc138 \uac1c\uc758 \ubaa8\ub378\uc744 \ubcc4\ub3c4\ub85d \ud559\uc2b5\uc2dc\ud0b5\ub2c8\ub2e4: Image Features\ub97c \ucd94\ucd9c\ud558\uae30 \uc704\ud55c CNN Model \uc774\ubbf8\uc9c0\ub97c \ubd84\ub958\ud558\uae30 \uc704\ud55c Classifier \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc2e4\uc81c \uc624\ube0c\uc81d\ud2b8 \uc704\uce58\uc5d0 \uc815\ud569\ud558\uae30 \uc704\ud55c Bounding Regressor \uadf8\ub7f0\ub370, \uc774 3\uac1c\uc758 \ubaa8\ub378\uc744 \ubcc4\ub3c4\ub85c \ud559\uc2b5\uc2dc\ud0a4\ub294 \uac83\uc740 \ud6a8\uc728\uc801\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Fast R-CNN\uc758 \ub4f1\uc7a5 \uc704\uc5d0 \uc5b8\uae09\ub41c R-CNN\uc758 \ub2e8\uc810\uc744 \uadf9\ubcf5\ud558\uae30 \uc704\ud574 R-CNN \ub17c\ubb38\uc758 \uc800\uc790\uc778 Roos Girshick\uc740 2015\ub144\uc5d0 \uc544\ub798\uc640 \uac19\uc740 \uc0c8\ub85c\uc6b4 \ub17c\ubb38\uc744 \ubc1c\ud45c\ud569\ub2c8\ub2e4: Fast R-CNN, Ross Girshick, 2015 \uc704 \ub17c\ubb38\uc758 2\uac00\uc9c0 \ud575\uc2ec \uc544\uc774\ub514\uc5b4 \ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Idea 1: RoI Pooling R-CNN\uc740 \uc774\ubbf8\uc9c0 \uc0c1\uc5d0\uc11c Region Proposals\ub97c \uc0dd\uc131 \uc2dc, \uc774\ub4e4\uc758 \uc601\uc5ed\uc774 \uc11c\ub85c \uacb9\uce58\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc544 \ubd88\ud544\uc694\ud558\uac8c CNN\uc758 \ubc18\ubcf5\uc801\uc778 Forward \uacc4\uc0b0(\ucd5c\ub300 2,000\ubc88)\uc73c\ub85c \uacc4\uc0b0 \ud6a8\uc728\uc131\uc744 \ub5a8\uc5b4\ub728\ub9bd\ub2c8\ub2e4. Ross\uac00 \uc81c\uc548\ud55c \uc544\uc774\ub514\uc5b4\ub294 \uc774\ubbf8\uc9c0 \uc0c1\uc774 \uc544\ub2cc CNN\uc758 Feature Map \uc0c1\uc5d0\uc11c RoI(Region of Interest)\ub97c \ucd94\ucd9c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc989, CNN\uc758 Forward Pass\ub294 \ud558\ub098\uc758 \uc774\ubbf8\uc9c0\uc5d0 \ub300\ud558\uc5ec \ub531 \ud55c \ubc88\ub9cc \uc218\ud589\ud558\uc5ec Feature Map\uc744 \uc5bb\uace0, \ucd5c\ub300 2,000\uac1c\uc758 Region Proposals \uac04\uc5d0 Fearue Map\uc744 \uc11c\ub85c \uacf5\uc720\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. RoI Pooling, Image from Stanford\u2019s CS231N \uc2ac\ub77c\uc774\ub4dc \uc704\uc758 \uc774\ubbf8\uc9c0\ub294 \uc785\ub825 \uc774\ubbf8\uc9c0\ub85c\ubd80\ud130 CNN\uc5d0 \ub300\ud558\uc5ec Forward Pass\ud558\uc5ec Conv Feature Map\uc744 \uc5bb\uace0, Region Proposal \uc601\uc5ed\uc744 Feature Map \uc0c1\uc5d0 \ud22c\uc601(Projection)\ud55c \ud6c4, \uc774\ub97c \uc815\ud574\uc9c4 \ucc28\uc6d0(Dimension, \uac00\ub85c-\uc138\ub85c \ud574\uc0c1\ub3c4)\ub85c \uc601\uc5ed\uc744 \ubd84\ud560\ud569\ub2c8\ub2e4. \uac00\ub839, 3 \u00d7 800 \u00d7 600(\ucc44\ub110 \uc218 = 3, \ub192\uc774 = 800, \ub113\uc774 = 600)\uc758 \uc785\ub825 \uc774\ubbf8\uc9c0\ub97c CNN\uc5d0 Forward Pass\ud558\uc5ec \uc5bb\ub294 Conv Feature Map\uc758 \uc0c1\uc5d0 \ud22c\uc601\ub41c Region Proposal \uc601\uc5ed\uc758 \ucc28\uc6d0\uc774 \\(C \u00d7 h \u00d7 w\\) \ub77c\uace0 \ud558\uba74, \uc774 \uc601\uc5ed\uc744 \uac01 \ucc44\ub110\uc5d0 \ub300\ud558\uc5ec \\(H \u00d7 W\\) \uac1c\uc218\ub85c \ubd84\ud560\ud569\ub2c8\ub2e4( \\(H\\) \uc640 \\(W\\) \ub97c Layer Hyper-parameters\ub77c\uace0 \ud569\ub2c8\ub2e4). RoI Max-pooling\uc740 \\(h \u00d7 w\\) \ud06c\uae30\uc758 RoI Windows\ub97c \\(H \u00d7 W\\) \uac1c\uc218\ub9cc\ud07c\uc758 Sub-window\ub85c \ubd84\ud560\ud558\ubbc0\ub85c \uac01 Sub-window\uc758 \ud06c\uae30\ub294 \ub300\ub7b5 \\(h/H \u00d7 w/W\\) \uc774 \ub418\uba70, \uac01 Sub-window \ub0b4\uc758 \uac12\ub4e4\uc744 Max-pooling\ud558\uc5ec Grid Cell\ub85c \ucd9c\ub825\ud569\ub2c8\ub2e4. Idea 2: \ud558\ub098\uc758 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubaa8\ub450 \ud2b8\ub808\uc774\ub2dd Fast R-CNN\uc758 \ub450\ubc88\uc9f8 \ud575\uc2ec \uc544\uc774\ub514\uc5b4\ub294, (1) Feature \ud559\uc2b5\uc744 \uc704\ud55c CNN, (2) \ubd84\ub958\ub97c \uc704\ud55c Classifier(SVM), (3) \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc624\ube0c\uc81d\ud2b8\uc5d0 \uc815\ud569\uc2dc\ud0a4\ub294 Regression (Linear Regressor)\uc744 \uac01\uac01 \ud2b8\ub808\uc774\ub2dd\ud558\ub294 R-CNN\uacfc\ub294 \ub2ec\ub9ac, Fast R-CNN\uc740 \uc774 \uc138\uac00\uc9c0\ub97c \ud558\ub098\uc758 \ub124\ud2b8\uc6cc\ud06c \ub0b4\uc5d0\uc11c \ud559\uc2b5\uc2dc\ud0b5\ub2c8\ub2e4. Fast R-CNN \uc544\ud0a4\ud14d\uccd0 \ubc0f \uad6c\uc870 \uc704\uc758 \uc774\ubbf8\uc9c0\ub97c \uc790\uc138\ud558\uac8c \uc0b4\ud3b4\ubcf4\uba74 \ub2e4\uc74c\uacfc \uc694\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \uc785\ub825 \uc774\ubbf8\uc9c0\ub97c CNN\uc5d0 \ub300\ud558\uc5ec Forward Pass\ud558\uc5ec Conv Feature Map\uc744 \uc5bb\uace0, Max-pooling Layer\ub97c \uc5bb\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uc81d\uc158 \ub41c \uac01\uac01\uc758 RoI\uc5d0 \ub300\ud558\uc5ec Pooling Layer\ub294 Conv Feature Map\uc73c\ub85c\ubd80\ud130 \uace0\uc815\ub41c \ud06c\uae30\uc758 Feature Vector\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uac01\uac01\uc758 Feature Vector\ub294 \uc77c\ub828\uc758 Fully Connected(FC) Layer\ub97c \uac70\uccd0\uc11c \\(K\\) \uac1c\uc758 \ud074\ub798\uc2a4 + \ubc30\uacbd \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c Softmax \ud655\ub960\uc744 \uad6c\ud569\ub2c8\ub2e4. \uac01\uac01\uc758 \\(K\\) \uac1c\uc758 \uc624\ube0c\uc81d\ud2b8 \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c 4\uac1c\uc758 \ubcc0\uc218 - \\((r,c,w,h)\\) - \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \uc67c\ucabd \uc0c1\ub2e8 \ubaa8\uc11c\ub9ac \uc88c\ud45c \\((r,c)\\) \ubc0f \ud06c\uae30 \\((w,h)\\) - \ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4. \uc9c0\uae08\uae4c\uc9c0 Fast R-CNN\uc744 \uc774\uc6a9\ud55c Object Detection\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 Faster R-CNN\uc744 \uc774\uc6a9\ud55c Object Detection\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"Object Detection Using Fast R-CNN"},{"location":"posts/deep-learning/2019-02-10-object-detection-using-fast-rcnn/#r-cnn","text":"\uadf8\ub7ec\uba74 \uc6b0\uc120 \uae30\uc874\uc758 R-CNN\uc774 \uac00\uc9c0\uace0 \uc788\ub294 \ub2e8\uc810\uc774 \ubb34\uc5c7\uc778\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. R-CNN\uc5d0\uc11c\ub294 \ud558\ub098\uc758 \uc774\ubbf8\uc9c0\uc5d0\uc11c Selective Search\ub97c \ud1b5\ud558\uc5ec \ucd5c\ub300 2,000\uac1c\uc758 Region Proposals\ub97c \uc0dd\uc131\ud558\uace0 \uac01\uac01\uc5d0 \ub300\ud558\uc5ec ConvNet(\uac00\ub839, AlexNet)\uc5d0 \ub300\ud55c Forward Pass\ub97c \uc5f0\uc0b0\ud569\ub2c8\ub2e4. \uc774\ub294 \ud559\uc2b5\uc2dc\uac04\ub3c4 \uc0c1\ub2f9\ud55c \uc2dc\uac04\uc774 \uc694\uad6c\ub418\uc9c0\ub9cc Runtime\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc218\uc900\uc774 \ub418\uc9c0 \ubabb\ud569\ub2c8\ub2e4. R-CNN\uc5d0\uc11c\ub294 \uc138 \uac1c\uc758 \ubaa8\ub378\uc744 \ubcc4\ub3c4\ub85d \ud559\uc2b5\uc2dc\ud0b5\ub2c8\ub2e4: Image Features\ub97c \ucd94\ucd9c\ud558\uae30 \uc704\ud55c CNN Model \uc774\ubbf8\uc9c0\ub97c \ubd84\ub958\ud558\uae30 \uc704\ud55c Classifier \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc2e4\uc81c \uc624\ube0c\uc81d\ud2b8 \uc704\uce58\uc5d0 \uc815\ud569\ud558\uae30 \uc704\ud55c Bounding Regressor \uadf8\ub7f0\ub370, \uc774 3\uac1c\uc758 \ubaa8\ub378\uc744 \ubcc4\ub3c4\ub85c \ud559\uc2b5\uc2dc\ud0a4\ub294 \uac83\uc740 \ud6a8\uc728\uc801\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"R-CNN\uc758 \ub2e8\uc810"},{"location":"posts/deep-learning/2019-02-10-object-detection-using-fast-rcnn/#fast-r-cnn","text":"\uc704\uc5d0 \uc5b8\uae09\ub41c R-CNN\uc758 \ub2e8\uc810\uc744 \uadf9\ubcf5\ud558\uae30 \uc704\ud574 R-CNN \ub17c\ubb38\uc758 \uc800\uc790\uc778 Roos Girshick\uc740 2015\ub144\uc5d0 \uc544\ub798\uc640 \uac19\uc740 \uc0c8\ub85c\uc6b4 \ub17c\ubb38\uc744 \ubc1c\ud45c\ud569\ub2c8\ub2e4: Fast R-CNN, Ross Girshick, 2015 \uc704 \ub17c\ubb38\uc758 2\uac00\uc9c0 \ud575\uc2ec \uc544\uc774\ub514\uc5b4 \ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"Fast R-CNN\uc758 \ub4f1\uc7a5"},{"location":"posts/deep-learning/2019-02-10-object-detection-using-fast-rcnn/#idea-1-roi-pooling","text":"R-CNN\uc740 \uc774\ubbf8\uc9c0 \uc0c1\uc5d0\uc11c Region Proposals\ub97c \uc0dd\uc131 \uc2dc, \uc774\ub4e4\uc758 \uc601\uc5ed\uc774 \uc11c\ub85c \uacb9\uce58\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc544 \ubd88\ud544\uc694\ud558\uac8c CNN\uc758 \ubc18\ubcf5\uc801\uc778 Forward \uacc4\uc0b0(\ucd5c\ub300 2,000\ubc88)\uc73c\ub85c \uacc4\uc0b0 \ud6a8\uc728\uc131\uc744 \ub5a8\uc5b4\ub728\ub9bd\ub2c8\ub2e4. Ross\uac00 \uc81c\uc548\ud55c \uc544\uc774\ub514\uc5b4\ub294 \uc774\ubbf8\uc9c0 \uc0c1\uc774 \uc544\ub2cc CNN\uc758 Feature Map \uc0c1\uc5d0\uc11c RoI(Region of Interest)\ub97c \ucd94\ucd9c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc989, CNN\uc758 Forward Pass\ub294 \ud558\ub098\uc758 \uc774\ubbf8\uc9c0\uc5d0 \ub300\ud558\uc5ec \ub531 \ud55c \ubc88\ub9cc \uc218\ud589\ud558\uc5ec Feature Map\uc744 \uc5bb\uace0, \ucd5c\ub300 2,000\uac1c\uc758 Region Proposals \uac04\uc5d0 Fearue Map\uc744 \uc11c\ub85c \uacf5\uc720\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. RoI Pooling, Image from Stanford\u2019s CS231N \uc2ac\ub77c\uc774\ub4dc \uc704\uc758 \uc774\ubbf8\uc9c0\ub294 \uc785\ub825 \uc774\ubbf8\uc9c0\ub85c\ubd80\ud130 CNN\uc5d0 \ub300\ud558\uc5ec Forward Pass\ud558\uc5ec Conv Feature Map\uc744 \uc5bb\uace0, Region Proposal \uc601\uc5ed\uc744 Feature Map \uc0c1\uc5d0 \ud22c\uc601(Projection)\ud55c \ud6c4, \uc774\ub97c \uc815\ud574\uc9c4 \ucc28\uc6d0(Dimension, \uac00\ub85c-\uc138\ub85c \ud574\uc0c1\ub3c4)\ub85c \uc601\uc5ed\uc744 \ubd84\ud560\ud569\ub2c8\ub2e4. \uac00\ub839, 3 \u00d7 800 \u00d7 600(\ucc44\ub110 \uc218 = 3, \ub192\uc774 = 800, \ub113\uc774 = 600)\uc758 \uc785\ub825 \uc774\ubbf8\uc9c0\ub97c CNN\uc5d0 Forward Pass\ud558\uc5ec \uc5bb\ub294 Conv Feature Map\uc758 \uc0c1\uc5d0 \ud22c\uc601\ub41c Region Proposal \uc601\uc5ed\uc758 \ucc28\uc6d0\uc774 \\(C \u00d7 h \u00d7 w\\) \ub77c\uace0 \ud558\uba74, \uc774 \uc601\uc5ed\uc744 \uac01 \ucc44\ub110\uc5d0 \ub300\ud558\uc5ec \\(H \u00d7 W\\) \uac1c\uc218\ub85c \ubd84\ud560\ud569\ub2c8\ub2e4( \\(H\\) \uc640 \\(W\\) \ub97c Layer Hyper-parameters\ub77c\uace0 \ud569\ub2c8\ub2e4). RoI Max-pooling\uc740 \\(h \u00d7 w\\) \ud06c\uae30\uc758 RoI Windows\ub97c \\(H \u00d7 W\\) \uac1c\uc218\ub9cc\ud07c\uc758 Sub-window\ub85c \ubd84\ud560\ud558\ubbc0\ub85c \uac01 Sub-window\uc758 \ud06c\uae30\ub294 \ub300\ub7b5 \\(h/H \u00d7 w/W\\) \uc774 \ub418\uba70, \uac01 Sub-window \ub0b4\uc758 \uac12\ub4e4\uc744 Max-pooling\ud558\uc5ec Grid Cell\ub85c \ucd9c\ub825\ud569\ub2c8\ub2e4.","title":"Idea 1: RoI Pooling"},{"location":"posts/deep-learning/2019-02-10-object-detection-using-fast-rcnn/#idea-2","text":"Fast R-CNN\uc758 \ub450\ubc88\uc9f8 \ud575\uc2ec \uc544\uc774\ub514\uc5b4\ub294, (1) Feature \ud559\uc2b5\uc744 \uc704\ud55c CNN, (2) \ubd84\ub958\ub97c \uc704\ud55c Classifier(SVM), (3) \ubc14\uc6b4\ub529 \ubc15\uc2a4\ub97c \uc624\ube0c\uc81d\ud2b8\uc5d0 \uc815\ud569\uc2dc\ud0a4\ub294 Regression (Linear Regressor)\uc744 \uac01\uac01 \ud2b8\ub808\uc774\ub2dd\ud558\ub294 R-CNN\uacfc\ub294 \ub2ec\ub9ac, Fast R-CNN\uc740 \uc774 \uc138\uac00\uc9c0\ub97c \ud558\ub098\uc758 \ub124\ud2b8\uc6cc\ud06c \ub0b4\uc5d0\uc11c \ud559\uc2b5\uc2dc\ud0b5\ub2c8\ub2e4. Fast R-CNN \uc544\ud0a4\ud14d\uccd0 \ubc0f \uad6c\uc870 \uc704\uc758 \uc774\ubbf8\uc9c0\ub97c \uc790\uc138\ud558\uac8c \uc0b4\ud3b4\ubcf4\uba74 \ub2e4\uc74c\uacfc \uc694\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: \uc785\ub825 \uc774\ubbf8\uc9c0\ub97c CNN\uc5d0 \ub300\ud558\uc5ec Forward Pass\ud558\uc5ec Conv Feature Map\uc744 \uc5bb\uace0, Max-pooling Layer\ub97c \uc5bb\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uc81d\uc158 \ub41c \uac01\uac01\uc758 RoI\uc5d0 \ub300\ud558\uc5ec Pooling Layer\ub294 Conv Feature Map\uc73c\ub85c\ubd80\ud130 \uace0\uc815\ub41c \ud06c\uae30\uc758 Feature Vector\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4. \uac01\uac01\uc758 Feature Vector\ub294 \uc77c\ub828\uc758 Fully Connected(FC) Layer\ub97c \uac70\uccd0\uc11c \\(K\\) \uac1c\uc758 \ud074\ub798\uc2a4 + \ubc30\uacbd \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c Softmax \ud655\ub960\uc744 \uad6c\ud569\ub2c8\ub2e4. \uac01\uac01\uc758 \\(K\\) \uac1c\uc758 \uc624\ube0c\uc81d\ud2b8 \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c 4\uac1c\uc758 \ubcc0\uc218 - \\((r,c,w,h)\\) - \ubc14\uc6b4\ub529 \ubc15\uc2a4\uc758 \uc67c\ucabd \uc0c1\ub2e8 \ubaa8\uc11c\ub9ac \uc88c\ud45c \\((r,c)\\) \ubc0f \ud06c\uae30 \\((w,h)\\) - \ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4. \uc9c0\uae08\uae4c\uc9c0 Fast R-CNN\uc744 \uc774\uc6a9\ud55c Object Detection\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 Faster R-CNN\uc744 \uc774\uc6a9\ud55c Object Detection\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"Idea 2: \ud558\ub098\uc758 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubaa8\ub450 \ud2b8\ub808\uc774\ub2dd"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/","text":"Written by Alex Choi, Oct. 8, 2020. Basic Environment Anaconda Git Creating CONDA Environment Run a command line tool, i.e. Anaconda Prompt and type the following command: conda create -n centernet python=3.7 NOTE: Python 3.8 not tested yet. But you can try if you want. Activate centernet Anaconda environment: conda activate centernet Installing Python Packages Install pytorch(ver.1.4) and torchvision based on your cudatoolkit version. conda install pytorch=1.4 torchvision cudatoolkit=10.1 -c pytorch NOTE: CenterNet build didn't work with pytorch version 1.5 or 1.6. NOTE: cudatoolkit version 10.2 not tested yet. Install necessary python packages: python -m pip install opencv-python Cython numba progress matplotlib easydict scipy Building cocoapi Tools Clone cocoapi tools git repository to any path where you want git clone https://github.com/cocodataset/cocoapi.git Open cocoapi/PythonAPI/setup.py using a text editor and modify the following line: extra_compile_args=['-Wno-cpp', '-Wno-unused-function', '-std=c99'] to extra_compile_args={'gcc': ['/Qstd=c99']}, In the command line tool move to the following path: cd cocoapi/PythonAPI Build cocoapi tools: python setup.py build_ext install Modifying cpp_extension.py Using a text editor open up C:/ProgramData/Anaconda3/envs/centernet/Lib/site-packages/torch/utils/cpp_extension.py and modify the following line: match = re.search(r'(\\d+)\\.(\\d+)\\.(\\d+)', compiler_info.decode().strip()) to match = re.search(r'(\\d+)\\.(\\d+)\\.(\\d+)', compiler_info.decode(\"utf8\", \"ignore\").strip()) Copying and Unzipping CenterNet.zip Copy \"CenterNet.zip\" file to any path you want (maybe COI project folder). Unzip the file using BandiZip or any unzipping software you want. NOTE: You can find more information from the PyTorch CenterNet official repo . Building NMS 'nms' is short for \"Non-Maximum Suppression.\" CenterNet does not usually use Non-Maximum Suppression, but it is sometimes useful. In order to avoid build error comment out the following line after opening CenterNet/src/lib/external/setup.py up using a text editor. #extra_compile_args=[\"-Wno-cpp\", \"-Wno-unused-function\"] NOTE: The line above may be already commented out actually. Build nms with the following command line: python setup.py build_ext --inplace NOTE: You can find more information about building nms here . Building DCNv2 Move to the following path in your CenterNet path: cd CenterNet/src/lib/models/networks/DCNv2/ Build DCNv2 using the following command line (this may take some time to finish building): python setup.py build develop NOTE: You can find more information about DCNv2 here . Test with Pre-trained Models Unzip \"ImageNet-Weights.zip\" and copy all the contained files (ImageNet pre-trained models) to C:\\Users\\{WINDOWS_USER_ACCOUNT_NAME}\\.cache\\torch\\checkpoints\\ . Unzip \"Centernet-Models.zip\" and copy all the contained files to CenterNet/models/ . Finally, test with some COI images using the following command line: python demo.py ctdet --demo ../data/COI/images/image_0001.jpg --load_model ../exp/ctdet/COI/model_best.pth python demo.py ctdet --demo ../data/COI/images/image_0002.jpg --load_model ../exp/ctdet/COI/model_best.pth python demo.py ctdet --demo ../data/COI/images/image_0003.jpg --load_model ../exp/ctdet/COI/model_best.pth Simple Trial for Training If you are using CenterNet.zip you can find the training information for COI from CenterNet/exp/ctdet/COI/ . There are 2 options for training: One is training from scratch (random initialization). python main.py ctdet --exp_id COI --batch_size 16 --lr 1.25e-4 --gpus 0 --load_model ../models/ctdet_coco_resdcn18.pth --resume False The other is resume training from pre-trained model. python main.py ctdet --exp_id COI --batch_size 16 --lr 1.25e-4 --gpus 0 --load_model ../models/ctdet_coco_resdcn18.pth --resume True Checking Training Information You can check your training information such as loss history, accuracy history and so on using TensorBoard . You can find your training information for COI from the path, CenterNet/exp/ctdet/COI/ Install tensorboard using the following command line: python -m pip install tensorboard","title":"How to Set Up PyTorch CenterNet Development Environment"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#basic-environment","text":"Anaconda Git","title":"Basic Environment"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#creating-conda-environment","text":"Run a command line tool, i.e. Anaconda Prompt and type the following command: conda create -n centernet python=3.7 NOTE: Python 3.8 not tested yet. But you can try if you want. Activate centernet Anaconda environment: conda activate centernet","title":"Creating CONDA Environment"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#installing-python-packages","text":"Install pytorch(ver.1.4) and torchvision based on your cudatoolkit version. conda install pytorch=1.4 torchvision cudatoolkit=10.1 -c pytorch NOTE: CenterNet build didn't work with pytorch version 1.5 or 1.6. NOTE: cudatoolkit version 10.2 not tested yet. Install necessary python packages: python -m pip install opencv-python Cython numba progress matplotlib easydict scipy","title":"Installing Python Packages"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#building-cocoapi-tools","text":"Clone cocoapi tools git repository to any path where you want git clone https://github.com/cocodataset/cocoapi.git Open cocoapi/PythonAPI/setup.py using a text editor and modify the following line: extra_compile_args=['-Wno-cpp', '-Wno-unused-function', '-std=c99'] to extra_compile_args={'gcc': ['/Qstd=c99']}, In the command line tool move to the following path: cd cocoapi/PythonAPI Build cocoapi tools: python setup.py build_ext install","title":"Building cocoapi Tools"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#modifying-cpp_extensionpy","text":"Using a text editor open up C:/ProgramData/Anaconda3/envs/centernet/Lib/site-packages/torch/utils/cpp_extension.py and modify the following line: match = re.search(r'(\\d+)\\.(\\d+)\\.(\\d+)', compiler_info.decode().strip()) to match = re.search(r'(\\d+)\\.(\\d+)\\.(\\d+)', compiler_info.decode(\"utf8\", \"ignore\").strip())","title":"Modifying cpp_extension.py"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#copying-and-unzipping-centernetzip","text":"Copy \"CenterNet.zip\" file to any path you want (maybe COI project folder). Unzip the file using BandiZip or any unzipping software you want. NOTE: You can find more information from the PyTorch CenterNet official repo .","title":"Copying and Unzipping CenterNet.zip"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#building-nms","text":"'nms' is short for \"Non-Maximum Suppression.\" CenterNet does not usually use Non-Maximum Suppression, but it is sometimes useful. In order to avoid build error comment out the following line after opening CenterNet/src/lib/external/setup.py up using a text editor. #extra_compile_args=[\"-Wno-cpp\", \"-Wno-unused-function\"] NOTE: The line above may be already commented out actually. Build nms with the following command line: python setup.py build_ext --inplace NOTE: You can find more information about building nms here .","title":"Building NMS"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#building-dcnv2","text":"Move to the following path in your CenterNet path: cd CenterNet/src/lib/models/networks/DCNv2/ Build DCNv2 using the following command line (this may take some time to finish building): python setup.py build develop NOTE: You can find more information about DCNv2 here .","title":"Building DCNv2"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#test-with-pre-trained-models","text":"Unzip \"ImageNet-Weights.zip\" and copy all the contained files (ImageNet pre-trained models) to C:\\Users\\{WINDOWS_USER_ACCOUNT_NAME}\\.cache\\torch\\checkpoints\\ . Unzip \"Centernet-Models.zip\" and copy all the contained files to CenterNet/models/ . Finally, test with some COI images using the following command line: python demo.py ctdet --demo ../data/COI/images/image_0001.jpg --load_model ../exp/ctdet/COI/model_best.pth python demo.py ctdet --demo ../data/COI/images/image_0002.jpg --load_model ../exp/ctdet/COI/model_best.pth python demo.py ctdet --demo ../data/COI/images/image_0003.jpg --load_model ../exp/ctdet/COI/model_best.pth","title":"Test with Pre-trained Models"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#simple-trial-for-training","text":"If you are using CenterNet.zip you can find the training information for COI from CenterNet/exp/ctdet/COI/ . There are 2 options for training: One is training from scratch (random initialization). python main.py ctdet --exp_id COI --batch_size 16 --lr 1.25e-4 --gpus 0 --load_model ../models/ctdet_coco_resdcn18.pth --resume False The other is resume training from pre-trained model. python main.py ctdet --exp_id COI --batch_size 16 --lr 1.25e-4 --gpus 0 --load_model ../models/ctdet_coco_resdcn18.pth --resume True","title":"Simple Trial for Training"},{"location":"posts/deep-learning/2020-10-08-setting-up-pytorch-centernet-dev-env/#checking-training-information","text":"You can check your training information such as loss history, accuracy history and so on using TensorBoard . You can find your training information for COI from the path, CenterNet/exp/ctdet/COI/ Install tensorboard using the following command line: python -m pip install tensorboard","title":"Checking Training Information"},{"location":"posts/mongodb/01-starting-mongodb/","text":"\uc774\ubc88 \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 MongoDB\uc758 \ud658\uacbd\uad6c\ucd95\uacfc \uac04\ub2e8\ud55c \uc2dc\uc791 \ubc29\ubc95\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ubcf8 \ub0b4\uc6a9\uc740, Windows \ud658\uacbd\uc744 \uac00\uc815\ud558\uace0 \uc124\uba85\ub4dc\ub9ac\uace0\uc790 \ud558\ubbc0\ub85c, \ub2e4\ub978 Mac \ub610\ub294 Linux \ud658\uacbd\uc5d0 \ub300\ud574\uc11c\ub294 \uac01\uac01\uc5d0 \ub300\ud55c \ud658\uacbd\uc124\uc815 \ubb38\uc11c\ub97c \ud655\uc778\ud574 \ubcf4\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. MongoDB \uc124\uce58 MongoDB Community Server \ub97c \uc124\uce58 \ud398\uc774\uc9c0\uc5d0 \ubc29\ubb38\ud558\uc5ec \uc790\uc2e0\uc758 MongoDB \ubc84\uc804, OS \ud658\uacbd, Package \ud615\ud0dc\ub97c \uc120\ud0dd\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc \ud569\ub2c8\ub2e4. MongoDB \uc124\uce58\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc \uc635\uc158 MongoDB \ud658\uacbd\uc124\uc815 \uc124\uce58\uac00 \uc644\ub8cc\ub418\uba74 (\uc124\uce58 \uc635\uc158\uc758 \uae30\ubcf8 \uacbd\ub85c\uc5d0 \uc124\uce58\ub418\uc5c8\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4), \uc2dc\uc2a4\ud15c \ud658\uacbd \ubcc0\uc218 \uc124\uc815\uc5d0 \uc544\ub798 \uacbd\ub85c\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. C:\\Program Files\\MongoDB\\Server\\{Installation_Version}\\bin MongoDB \ud658\uacbd\ubcc0\uc218 \ucd94\uac00 MongoDB \uc2e4\ud589 \ud14c\uc2a4\ud2b8 \uc774\uc81c MongoDB\uc758 \ub0b4\uc6a9\ubb3c\uc774 \uc800\uc7a5\ub420 \ud3f4\ub354\ub97c \ud558\ub098 \ub9cc\ub4e4\uace0, Windows Command Line Tool\uc744 \uc2e4\ud589\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \uba85\ub839\uc904\uc744 \uc785\ub825\ud558\uc5ec MongoDB\uac00 \uc2e4\ud589\ub418\ub294\uc9c0 \ud14c\uc2a4\ud2b8 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. mongod --dpbpath {MongoDB_\ub0b4\uc6a9\ubb3c_\uc800\uc7a5\uacbd\ub85c} MongoDB \uc2e4\ud589 \ud14c\uc2a4\ud2b8 Windows Command Line Tool\uc744 \ud558\ub098 \ub354 \uc5f4\uac70\ub098 \ud0ed\uc744 \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0 \ud0ed\uc744 \ud558\ub098 \ub354 \uc5f4\uc5b4\uc11c \uc544\ub798\uc640 \uac19\uc774 MongoDB\uc758 Query\ub97c \uc785\ub825\ud560 \uc218 \uc788\ub294 \uba85\ub839\uc904\uc744 \uc785\ub825\ud574 \ubd05\ub2c8\ub2e4. mongo MongoDB \uc2e4\ud589 \ud14c\uc2a4\ud2b8 MongoDB Compass \ub2e4\uc6b4\ub85c\ub4dc MongoDB Compass \ub294 MongoDB\uc758 GUI \ub3c4\uad6c\uc785\ub2c8\ub2e4. MongoDB\ub97c \uc0ac\uc6a9\ud568\uc5d0 \uc788\uc5b4 \ubc18\ub4dc\uc2dc \uc788\uc5b4\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc \ub370\uc774\ud130\ub97c \ud655\uc778\ud558\uace0 \uac00\uacf5\ud558\ub294 \ub4f1\uc758 \uc791\uc5c5\uc5d0 \ub300\ud55c GUI \ub3c4\uad6c\ub97c \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 MongoDB\ub97c \ud1b5\ud55c DB \uc6b4\uc601 \uc2dc \ub9e4\uc6b0 \ud3b8\ub9ac\ud55c \ub3c4\uad6c\uc774\ubbc0\ub85c \uac15\ub825\ud558\uac8c \uc124\uce58\ub97c \uad8c\uc7a5 \ub4dc\ub9bd\ub2c8\ub2e4. MongoDB Compass","title":"01 starting mongodb"},{"location":"posts/mongodb/01-starting-mongodb/#mongodb","text":"MongoDB Community Server \ub97c \uc124\uce58 \ud398\uc774\uc9c0\uc5d0 \ubc29\ubb38\ud558\uc5ec \uc790\uc2e0\uc758 MongoDB \ubc84\uc804, OS \ud658\uacbd, Package \ud615\ud0dc\ub97c \uc120\ud0dd\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc \ud569\ub2c8\ub2e4. MongoDB \uc124\uce58\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc \uc635\uc158","title":"MongoDB \uc124\uce58"},{"location":"posts/mongodb/01-starting-mongodb/#mongodb_1","text":"\uc124\uce58\uac00 \uc644\ub8cc\ub418\uba74 (\uc124\uce58 \uc635\uc158\uc758 \uae30\ubcf8 \uacbd\ub85c\uc5d0 \uc124\uce58\ub418\uc5c8\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4), \uc2dc\uc2a4\ud15c \ud658\uacbd \ubcc0\uc218 \uc124\uc815\uc5d0 \uc544\ub798 \uacbd\ub85c\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. C:\\Program Files\\MongoDB\\Server\\{Installation_Version}\\bin MongoDB \ud658\uacbd\ubcc0\uc218 \ucd94\uac00","title":"MongoDB \ud658\uacbd\uc124\uc815"},{"location":"posts/mongodb/01-starting-mongodb/#mongodb_2","text":"\uc774\uc81c MongoDB\uc758 \ub0b4\uc6a9\ubb3c\uc774 \uc800\uc7a5\ub420 \ud3f4\ub354\ub97c \ud558\ub098 \ub9cc\ub4e4\uace0, Windows Command Line Tool\uc744 \uc2e4\ud589\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \uba85\ub839\uc904\uc744 \uc785\ub825\ud558\uc5ec MongoDB\uac00 \uc2e4\ud589\ub418\ub294\uc9c0 \ud14c\uc2a4\ud2b8 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. mongod --dpbpath {MongoDB_\ub0b4\uc6a9\ubb3c_\uc800\uc7a5\uacbd\ub85c} MongoDB \uc2e4\ud589 \ud14c\uc2a4\ud2b8 Windows Command Line Tool\uc744 \ud558\ub098 \ub354 \uc5f4\uac70\ub098 \ud0ed\uc744 \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0 \ud0ed\uc744 \ud558\ub098 \ub354 \uc5f4\uc5b4\uc11c \uc544\ub798\uc640 \uac19\uc774 MongoDB\uc758 Query\ub97c \uc785\ub825\ud560 \uc218 \uc788\ub294 \uba85\ub839\uc904\uc744 \uc785\ub825\ud574 \ubd05\ub2c8\ub2e4. mongo MongoDB \uc2e4\ud589 \ud14c\uc2a4\ud2b8","title":"MongoDB \uc2e4\ud589 \ud14c\uc2a4\ud2b8"},{"location":"posts/mongodb/01-starting-mongodb/#mongodb-compass","text":"MongoDB Compass \ub294 MongoDB\uc758 GUI \ub3c4\uad6c\uc785\ub2c8\ub2e4. MongoDB\ub97c \uc0ac\uc6a9\ud568\uc5d0 \uc788\uc5b4 \ubc18\ub4dc\uc2dc \uc788\uc5b4\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc \ub370\uc774\ud130\ub97c \ud655\uc778\ud558\uace0 \uac00\uacf5\ud558\ub294 \ub4f1\uc758 \uc791\uc5c5\uc5d0 \ub300\ud55c GUI \ub3c4\uad6c\ub97c \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 MongoDB\ub97c \ud1b5\ud55c DB \uc6b4\uc601 \uc2dc \ub9e4\uc6b0 \ud3b8\ub9ac\ud55c \ub3c4\uad6c\uc774\ubbc0\ub85c \uac15\ub825\ud558\uac8c \uc124\uce58\ub97c \uad8c\uc7a5 \ub4dc\ub9bd\ub2c8\ub2e4. MongoDB Compass","title":"MongoDB Compass \ub2e4\uc6b4\ub85c\ub4dc"},{"location":"posts/mongodb/02-mongodb-basic-queries/","text":"\uc774\ubc88 \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 MongoDB\uc758 \uae30\ubcf8 Query \uba85\ub839\uc5b4\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \uc6b0\uc120 \uc2dc\uc791\uc5d0 \uc55e\uc11c 01. MongoDB \uc2dc\uc791\ud558\uae30 \ub97c \ucc38\uace0\ud558\uc5ec DB\ub97c \uc2dc\uc791\ud558\uc2dc\uace0, Query \uba85\ub839\ubb38\uc744 \uc785\ub825\ud560 \uc218 \uc788\ub3c4\ub85d \uc900\ube44\ud558\uc2dc\uae30 \ubc1c\ubc14\ub2c8\ub2e4. DB \uc0dd\uc131 Mongo \ud604\uc7ac DB\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ud655\uc778\ud558\ub294 \uba85\ub839\uc904\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: show dbs \uae30\ubcf8\uc801\uc740\ub85c, \uc138\uac00\uc9c0 DB\uac00 \ubbf8\ub9ac \ub4f1\ub85d\ub418\uc5b4 \uc788\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: admin config local \uc77c\ub2e8 \uc774\ub4e4\uc774 \uc5b4\ub5a4 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0\ub294 \ucd94\ud6c4 \ud3ec\uc2a4\ud305\uc5d0\uc11c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uba70, \uc9c0\uae08\uc740 DB\ub97c \ud558\ub098 \uc0dd\uc131\ud558\uaca0\uc2b5\ub2c8\ub2e4: use test Create \ub2e4\uc74c\uacfc \uac19\uc774 \"title\", \"content\", \"date\" \ud0a4\ub97c \uac16\ub294 \"post\" \ubcc0\uc218 \uc0dd\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. post = {\"title\" : \"My first blog post\", \"content\" : \"Getting started with MongDB\", \"date\" : new Date()} \uc704\uc758 \uba85\ub839\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774, MongoDB\uc758 \uc785\ucd9c\ub825 \ub3c4\ud050\uba3c\ud2b8 \ub2e8\uc704\ub294 JSON \ud615\ud0dc\ub97c \uac16\uc2b5\ub2c8\ub2e4. insert \uba85\ub839\uc744 \ud1b5\ud574 \ub4f1\ub85d\ub41c post \ubcc0\uc218\ub97c blog \ub77c\ub294 \ucf5c\ub809\uc158\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4: > db.blog.insert(post) WriteResult({ \"nInserted\" : 1 }) \uc774\uc81c test db\uac00 \uac00\uc9c0\uace0 \uc788\ub294 \ucf5c\ub809\uc158 \ub9ac\uc2a4\ud2b8\ub97c \ud655\uc778\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4: > db.getCollectionNames() [ \"blog\" ] \uc785\ub825\uc774 \uc131\uacf5\ub418\uba74 WriteResult({ \"nInserted\" : 1 }) \ub77c\ub294 \ud615\ud0dc\uc758 \uba54\uc2dc\uc9c0\uac00 \ucd9c\ub825\ub420 \uac83\uc785\ub2c8\ub2e4. find \uba85\ub839\uc744 \uc785\ub825\ud558\uc5ec blog \ucf5c\ub809\uc158\uc5d0 \uc800\uc7a5\ub41c \uac12 \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4: > db.blog.find() { \"_id\" : ObjectId(\"5fa5fef52bc718484524b2d2\"), \"title\" : \"My first blog post\", \"content\" : \"Getting started with MongDB\", \"date\" : ISODate(\"2020-11-07T01:53:32.663Z\") } \ud55c\uac00\uc9c0 \ud301\uc73c\ub85c .pretty() \ub97c \ucd94\uac00\ub85c \ubd99\uc774\uba74, \uc880 \ub354 \uae54\ub054\ud55c \ud615\ud0dc\ub85c \uacb0\uacfc\ub97c \ucd9c\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. > db.blog.find().pretty() \"_id\" : ObjectId(\"5fa5fef52bc718484524b2d2\"), \"title\" : \"My first blog post\", \"content\" : \"Getting started with MongDB\", \"date\" : ISODate(\"2020-11-07T01:53:32.663Z\") } .pretty()\ub97c \uc774\uc6a9\ud55c \uae54\ub054\ud55c \ucd9c\ub825 \uacb0\uacfc Update post \uceec\ub809\uc158\uc5d0 comments \ud0a4 \uc0dd\uc131\uc744 \ud569\ub2c8\ub2e4: > post.comments = [] [ ] > post { \"title\" : \"My first blog post\", \"content\" : \"Getting Started with MongoDB\", \"date\" : ISODate(\"2014-01-17T10:04:08.641Z\"), \"comments\" : [ ] } My first blog post \ub77c\ub294 \ud0c0\uc774\ud2c0\uc744 \uac00\uc9c4 post \ub85c \ub3c4\ud050\uba3c\ud2b8 \uc5c5\ub370\uc774\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8 \ud569\ub2c8\ub2e4: > db.blog.update({\"title\" : \"My first blog post\"}, post) > db.blog.findOne().pretty() { \"_id\" : ObjectId(\"52d900298d2a9dc822dd0eea\"), \"title\" : \"My first blog post\", \"content\" : \"Getting Started with MongoDB\", \"date\" : ISODate(\"2014-01-17T10:04:08.641Z\"), \"comments\" : [ ] } Delete My first blog post \uc774\ub77c\ub294 title \uc758 \uceec\ub809\uc158\uc744 \uc0ad\uc81c\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4: > db.blog.remove({title : \"My first blog post\"}) > db.blog.findOne() null","title":"02 mongodb basic queries"},{"location":"posts/mongodb/02-mongodb-basic-queries/#db","text":"Mongo \ud604\uc7ac DB\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ud655\uc778\ud558\ub294 \uba85\ub839\uc904\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: show dbs \uae30\ubcf8\uc801\uc740\ub85c, \uc138\uac00\uc9c0 DB\uac00 \ubbf8\ub9ac \ub4f1\ub85d\ub418\uc5b4 \uc788\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: admin config local \uc77c\ub2e8 \uc774\ub4e4\uc774 \uc5b4\ub5a4 \uc5ed\ud560\uc744 \ud558\ub294\uc9c0\ub294 \ucd94\ud6c4 \ud3ec\uc2a4\ud305\uc5d0\uc11c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uba70, \uc9c0\uae08\uc740 DB\ub97c \ud558\ub098 \uc0dd\uc131\ud558\uaca0\uc2b5\ub2c8\ub2e4: use test","title":"DB \uc0dd\uc131"},{"location":"posts/mongodb/02-mongodb-basic-queries/#create","text":"\ub2e4\uc74c\uacfc \uac19\uc774 \"title\", \"content\", \"date\" \ud0a4\ub97c \uac16\ub294 \"post\" \ubcc0\uc218 \uc0dd\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. post = {\"title\" : \"My first blog post\", \"content\" : \"Getting started with MongDB\", \"date\" : new Date()} \uc704\uc758 \uba85\ub839\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774, MongoDB\uc758 \uc785\ucd9c\ub825 \ub3c4\ud050\uba3c\ud2b8 \ub2e8\uc704\ub294 JSON \ud615\ud0dc\ub97c \uac16\uc2b5\ub2c8\ub2e4. insert \uba85\ub839\uc744 \ud1b5\ud574 \ub4f1\ub85d\ub41c post \ubcc0\uc218\ub97c blog \ub77c\ub294 \ucf5c\ub809\uc158\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4: > db.blog.insert(post) WriteResult({ \"nInserted\" : 1 }) \uc774\uc81c test db\uac00 \uac00\uc9c0\uace0 \uc788\ub294 \ucf5c\ub809\uc158 \ub9ac\uc2a4\ud2b8\ub97c \ud655\uc778\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4: > db.getCollectionNames() [ \"blog\" ] \uc785\ub825\uc774 \uc131\uacf5\ub418\uba74 WriteResult({ \"nInserted\" : 1 }) \ub77c\ub294 \ud615\ud0dc\uc758 \uba54\uc2dc\uc9c0\uac00 \ucd9c\ub825\ub420 \uac83\uc785\ub2c8\ub2e4. find \uba85\ub839\uc744 \uc785\ub825\ud558\uc5ec blog \ucf5c\ub809\uc158\uc5d0 \uc800\uc7a5\ub41c \uac12 \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4: > db.blog.find() { \"_id\" : ObjectId(\"5fa5fef52bc718484524b2d2\"), \"title\" : \"My first blog post\", \"content\" : \"Getting started with MongDB\", \"date\" : ISODate(\"2020-11-07T01:53:32.663Z\") } \ud55c\uac00\uc9c0 \ud301\uc73c\ub85c .pretty() \ub97c \ucd94\uac00\ub85c \ubd99\uc774\uba74, \uc880 \ub354 \uae54\ub054\ud55c \ud615\ud0dc\ub85c \uacb0\uacfc\ub97c \ucd9c\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. > db.blog.find().pretty() \"_id\" : ObjectId(\"5fa5fef52bc718484524b2d2\"), \"title\" : \"My first blog post\", \"content\" : \"Getting started with MongDB\", \"date\" : ISODate(\"2020-11-07T01:53:32.663Z\") } .pretty()\ub97c \uc774\uc6a9\ud55c \uae54\ub054\ud55c \ucd9c\ub825 \uacb0\uacfc","title":"Create"},{"location":"posts/mongodb/02-mongodb-basic-queries/#update","text":"post \uceec\ub809\uc158\uc5d0 comments \ud0a4 \uc0dd\uc131\uc744 \ud569\ub2c8\ub2e4: > post.comments = [] [ ] > post { \"title\" : \"My first blog post\", \"content\" : \"Getting Started with MongoDB\", \"date\" : ISODate(\"2014-01-17T10:04:08.641Z\"), \"comments\" : [ ] } My first blog post \ub77c\ub294 \ud0c0\uc774\ud2c0\uc744 \uac00\uc9c4 post \ub85c \ub3c4\ud050\uba3c\ud2b8 \uc5c5\ub370\uc774\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8 \ud569\ub2c8\ub2e4: > db.blog.update({\"title\" : \"My first blog post\"}, post) > db.blog.findOne().pretty() { \"_id\" : ObjectId(\"52d900298d2a9dc822dd0eea\"), \"title\" : \"My first blog post\", \"content\" : \"Getting Started with MongoDB\", \"date\" : ISODate(\"2014-01-17T10:04:08.641Z\"), \"comments\" : [ ] }","title":"Update"},{"location":"posts/mongodb/02-mongodb-basic-queries/#delete","text":"My first blog post \uc774\ub77c\ub294 title \uc758 \uceec\ub809\uc158\uc744 \uc0ad\uc81c\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4: > db.blog.remove({title : \"My first blog post\"}) > db.blog.findOne() null","title":"Delete"},{"location":"posts/mongodb/03-mongodb-lifecycle/","text":"\uc774\ubc88 \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 \ub2e4\uc74c \ucf54\ub4dc \uc608\uc2dc\ub97c \ud1b5\ud574 MongoDB\uc758 \ub77c\uc774\ud504\uc0ac\uc774\ud074\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. // user DB \"foobar\" use foobar // define user1 var user1 = {\"username\" : \"gchoi\"} user1.relationships = {\"friends\" : 100, \"enemies\" : 1} // define user2 var user2 = {\"username\" : \"tjkwak\"} user2.relationships = {\"friends\" : 50, \"enemies\" : 5} // define user3 var user3 = {\"username\" : \"jmpark\"} user3.relationships = {\"friends\" : 10, \"enemies\" : 3} // define user4 var user4 = {\"username\" : \"jhlee\"} user4.relationships = {\"friends\" : 1, \"enemies\" : 300} // insert users into \"users\" collection of DB \"foobar\" db.users.insert(user1) db.users.insert(user2) db.users.insert(user3) db.users.insert(user4) // show users collection db.users.find() // show db stats db.stats() // change username of user4 user4.username = \"hskim\" // change the numbner of friednds user4.relationships.friends = 5 // change the number of enemies user4.relationships.enemies = 500 db.users.update({\"username\" : \"jhlee\"}, user4) // show users collection db.users.find() // drop the collection \"users\" db.users.drop() // drop the current database db.dropDatabase() // show database stats - nothing to show db.stats() // shutdown the server use admin db.shutdownServer()","title":"03 mongodb lifecycle"},{"location":"posts/mongodb/04-mongodb-update-modifiers-inc/","text":"\uc774\ubc88 \ud3ec\uc2a4\ud305\ubd80\ud130 \uba87\ucc28\ub840\uc5d0 \uac78\uccd0 MongoDB Update Operators\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. MongoDB Update Operators\uc5d0 \ub300\ud558\uc5ec \ubcf4\ub2e4 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 MongoDB\uc758 \uacf5\uc2dd \uc6f9\uc0ac\uc774\ud2b8\uc758 Update Operators \ud398\uc774\uc9c0 \uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DB \uc791\uc5c5\uc744 \ud558\ub2e4\ubcf4\uba74, \ud2b9\uc815 \ub3c4\ud050\uba3c\ud2b8\uc758 \uc77c\ubd80\ubd84\ub9cc \ubcc0\uacbd\ud574\uc57c \ud560 \uc0c1\ud669\uc5d0 \ucc98\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Update Operators\ub97c \uc774\uc6a9\ud558\uc5ec \ub3c4\ud050\uba3c\ud2b8\uc758 \ubcc0\uacbd, \ucd94\uac00, \uc0ad\uc81c\ub97c \ud560 \uc218 \uc788\uc73c\uba70, \uc784\ubca0\ub514\ub4dc \ub3c4\ud050\uba3c\ud2b8 \ubc0f \uc5b4\ub808\uc774(array)\uc5d0 \ub300\ud574\uc11c\ub294 \ud578\ub4e4\ub9c1 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc0c1\ud669\uc744 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4: \uc5ec\ub7ec\ubd84\uc774 \uc138 \uac1c\uc758 \uc6f9\ud398\uc774\uc9c0\ub97c \uad00\ub9ac\ud574\uc57c \ud558\uace0 \uc788\uc73c\uba70, \ubc29\ubb38\uc790\uac00 \ubc29\ubb38 \uc2dc DB\uc758 \ud398\uc774\uc9c0 \ubdf0 \uad00\ub828 \ub0b4\uc6a9\uc744 1\uc529 \uc99d\uac00\uc2dc\ud0a4\ub294 \uc791\uc5c5\uc744 \ud574\uc57c\ud55c\ub2e4\uace0 \uac00\uc815\ud569\ub2c8\ub2e4. \uc6b0\uc120 \ub2e4\uc74c\uacfc \uac19\uc774 \ub370\uc774\ud130\ub97c \uc900\ube44\ud569\ub2c8\ub2e4: // user DB \"foobar\" use foobar // define webpage1 var page1 = {\"url\" : \"www.gchoi.net\", \"pageviews\" : 100} // define webpage2 var page2 = {\"url\" : \"www.google.com\", \"pageviews\" : 1000} // define webpage3 var page3 = {\"url\" : \"www.apple.com\", \"pageviews\" : 500} // insert items into DB db.analytics.insert(page1) db.analytics.insert(page2) db.analytics.insert(page3) db.analytics.find() \"www.gchoi.net\" URL\uc758 \ud398\uc774\uc9c0 \ubdf0\ub97c 1\uc529 \uc99d\uac00\uc2dc\ud0b5\ub2c8\ub2e4: // increase pageviews of url \"www.gchoi.net\" by 1 db.analytics.update({\"url\" : \"www.gchoi.net\"}, {\"$inc\" : {\"pageviews\" : 1}}) db.analytics.findOne({\"url\" : \"www.gchoi.net\"})","title":"04 mongodb update modifiers inc"},{"location":"posts/scientific-computing/2012-02-09-realtime-fluid-simulation-using-cuda/","text":"Written by Alex Choi, Feb. 09, 2012. This is one of our researches done in CJ POWERCAST, which is dedicated from the members of our team, T.J. Kwak and J.M. Park and G.Choi. INTORUDUCTION GPU (Graphics Process Unit) has been traditionally used only for display of graphical contents with graphics acceleration. Because of the characteristics of display that represent pixels as a massive array, memory and processing architectures of GPU are structured in parallel in order to process the massive graphical data in a short period. Some pioneers have used these features for parallel computation as well as displaying computer graphics. Consequently GPU manufacturers realized their needs of general purposes of GPU. FIG 1. Comparsion of Processor Structures: CPU VS GPU As shown in FIG 1., GPU has a huge number of ALUs, which are in charge of arithmetic operations, enabling massively parallel processing. With this background, GPGPU ( General Purpose Graphics Process Unit ) comes into the world and aims to process massively parallel computations not only for computer graphics but for general fields such as prediction of stock, weather, science, etc. Most of the simulations in computer graphics are based on natural phenomena and tend to need massive computations to mimic the real nature. Our research team has expected that GPGPU technology would be used for wider fields of our related research works. IMPLEMENTATION The goal of this research is, as a preceding research, to apply the GPU technology to a realtime fluid simulation that needs to solve the natural phonomenon called \"Navier-Stokes equation\" with parallel processing. To this end we adopted the algorhithms from the simplified version of Navier-Stokes equation( Jos Stam, Real-Time Fluid Dynamics for Games, 2003 Game Development Conference ) and modified the processing structures in order for GPUs to perform the massive calculation in parallel. The simplified Navier-Stokes equation for a realtime calculation used in this research looks like: \\[ \\frac{\\partial \\mathrm{u}}{\\partial t} = -(\\mathrm{u} \\cdot \\nabla) \\mathrm{u} + \\nu \\nabla^2 \\mathrm{u} + \\mathrm{f} \\] \\[ \\frac{\\partial \\rho}{\\partial t} = -(\\mathrm{u} \\cdot \\nabla) \\rho + \\kappa \\nabla^2 \\rho + S \\] The above equation describes that the state of fluid at a given instant of time is modeled as a velocity field: a function that assigns a velocity vector to every point in space. Following this equation we designed the processing structure from Jos Stam's algorithms. FIG 2. Fluid Simulation Processing Flow of CPU Sequential Processing and GPU Parallel Processing Since this simulation performs calculations on each point within a specific area, it is a good case to verify massively parallel computation performance by GPGPU. We implemented for two cases, one carries out computation by CPU and the other the same by GPU to compare between their performances. As a result the simulation from CPU shows a good performance if the resolution is less than 128 X 128. However, if not the case, the performance is very poor. RESULTS As you can see the results on the video below, the simulation on 512 x 512 resolution goes terribly slow since CPU does sequential computations while the GPU simulation shows a nice result on the same resolution. The performance table of frame rates by testing the same simulation between CPU and GPU is given. [TABLE 1. Comparison of results between from CPU and from GPU for realtime fluid simulation] Resolution 128 \u00d7128 256\u00d7256 512\u00d7128 Framerates from CPU Processing 60 fps 30 fps 0.7 fps Framerates from GPU Processing - - 60 fps The simulation on CPU is performed for three different resolutions while that on GPU only for one resolution, 512 \u00d7 512, which is sufficient to verify the performance since running on CPU is very slow on 512 \u00d7 512 resolution. The test is run with Intel Xeon CPU 3.07Ghz 12 cores, 12GB RAM and NVIDIA Quadro 5000. In conclusion this research inspires us with the potential of GPU usage for general computation purposes. By theses reasons we should keep up with GPGPU technology corresponding to real-time simulations with massive computation. Why? Because the technology world requires us more and more massive computations.","title":"Realtime Fluid Simulation Using CUDA"},{"location":"posts/scientific-computing/2012-02-09-realtime-fluid-simulation-using-cuda/#intoruduction","text":"GPU (Graphics Process Unit) has been traditionally used only for display of graphical contents with graphics acceleration. Because of the characteristics of display that represent pixels as a massive array, memory and processing architectures of GPU are structured in parallel in order to process the massive graphical data in a short period. Some pioneers have used these features for parallel computation as well as displaying computer graphics. Consequently GPU manufacturers realized their needs of general purposes of GPU. FIG 1. Comparsion of Processor Structures: CPU VS GPU As shown in FIG 1., GPU has a huge number of ALUs, which are in charge of arithmetic operations, enabling massively parallel processing. With this background, GPGPU ( General Purpose Graphics Process Unit ) comes into the world and aims to process massively parallel computations not only for computer graphics but for general fields such as prediction of stock, weather, science, etc. Most of the simulations in computer graphics are based on natural phenomena and tend to need massive computations to mimic the real nature. Our research team has expected that GPGPU technology would be used for wider fields of our related research works.","title":"INTORUDUCTION"},{"location":"posts/scientific-computing/2012-02-09-realtime-fluid-simulation-using-cuda/#implementation","text":"The goal of this research is, as a preceding research, to apply the GPU technology to a realtime fluid simulation that needs to solve the natural phonomenon called \"Navier-Stokes equation\" with parallel processing. To this end we adopted the algorhithms from the simplified version of Navier-Stokes equation( Jos Stam, Real-Time Fluid Dynamics for Games, 2003 Game Development Conference ) and modified the processing structures in order for GPUs to perform the massive calculation in parallel. The simplified Navier-Stokes equation for a realtime calculation used in this research looks like: \\[ \\frac{\\partial \\mathrm{u}}{\\partial t} = -(\\mathrm{u} \\cdot \\nabla) \\mathrm{u} + \\nu \\nabla^2 \\mathrm{u} + \\mathrm{f} \\] \\[ \\frac{\\partial \\rho}{\\partial t} = -(\\mathrm{u} \\cdot \\nabla) \\rho + \\kappa \\nabla^2 \\rho + S \\] The above equation describes that the state of fluid at a given instant of time is modeled as a velocity field: a function that assigns a velocity vector to every point in space. Following this equation we designed the processing structure from Jos Stam's algorithms. FIG 2. Fluid Simulation Processing Flow of CPU Sequential Processing and GPU Parallel Processing Since this simulation performs calculations on each point within a specific area, it is a good case to verify massively parallel computation performance by GPGPU. We implemented for two cases, one carries out computation by CPU and the other the same by GPU to compare between their performances. As a result the simulation from CPU shows a good performance if the resolution is less than 128 X 128. However, if not the case, the performance is very poor.","title":"IMPLEMENTATION"},{"location":"posts/scientific-computing/2012-02-09-realtime-fluid-simulation-using-cuda/#results","text":"As you can see the results on the video below, the simulation on 512 x 512 resolution goes terribly slow since CPU does sequential computations while the GPU simulation shows a nice result on the same resolution. The performance table of frame rates by testing the same simulation between CPU and GPU is given. [TABLE 1. Comparison of results between from CPU and from GPU for realtime fluid simulation] Resolution 128 \u00d7128 256\u00d7256 512\u00d7128 Framerates from CPU Processing 60 fps 30 fps 0.7 fps Framerates from GPU Processing - - 60 fps The simulation on CPU is performed for three different resolutions while that on GPU only for one resolution, 512 \u00d7 512, which is sufficient to verify the performance since running on CPU is very slow on 512 \u00d7 512 resolution. The test is run with Intel Xeon CPU 3.07Ghz 12 cores, 12GB RAM and NVIDIA Quadro 5000. In conclusion this research inspires us with the potential of GPU usage for general computation purposes. By theses reasons we should keep up with GPGPU technology corresponding to real-time simulations with massive computation. Why? Because the technology world requires us more and more massive computations.","title":"RESULTS"}]}